<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC5130_8h" kind="file" language="C++">
    <compoundname>TMC5130.h</compoundname>
    <includes refid="API__Header_8h" local="yes">tmc/helpers/API_Header.h</includes>
    <includes refid="TMC5130__Register_8h" local="yes">TMC5130_Register.h</includes>
    <includes refid="TMC5130__Constants_8h" local="yes">TMC5130_Constants.h</includes>
    <includes refid="TMC5130__Fields_8h" local="yes">TMC5130_Fields.h</includes>
    <includedby refid="TMC5130_8c" local="yes">TMC5130.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="11">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="9">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="12">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="5">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC5130.h</label>
        <link refid="TMC5130_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>TMC5130_Constants.h</label>
        <link refid="TMC5130__Constants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC5130_Fields.h</label>
        <link refid="TMC5130__Fields_8h"/>
      </node>
      <node id="14">
        <label>TMC5130_Register.h</label>
        <link refid="TMC5130__Register_8h"/>
      </node>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>TMC5130.c</label>
        <link refid="TMC5130_8c"/>
      </node>
      <node id="1">
        <label>TMC5130.h</label>
        <link refid="TMC5130_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structTMC5130TypeDef" prot="public">TMC5130TypeDef</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="TMC5130_8h_1a65c1788377c7dcb51a6bde7ecd1fd8e3" prot="public" static="no">
        <name>TMC5130_FIELD_READ</name>
        <param><defname>tdef</defname></param>
        <param><defname>address</defname></param>
        <param><defname>mask</defname></param>
        <param><defname>shift</defname></param>
        <initializer>	<ref refid="Macros_8h_1afc21f29c5cf2d76aab227e33233cf357" kindref="member">FIELD_GET</ref>(<ref refid="TMC5130_8c_1ac99f647cd8870440329ace7af28ebc14" kindref="member">tmc5130_readInt</ref>(tdef, address), mask, shift)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="19" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="define" id="TMC5130_8h_1a0a51dc573ec9797c46f79be8dba617e7" prot="public" static="no">
        <name>TMC5130_FIELD_WRITE</name>
        <param><defname>tdef</defname></param>
        <param><defname>address</defname></param>
        <param><defname>mask</defname></param>
        <param><defname>shift</defname></param>
        <param><defname>value</defname></param>
        <initializer>	(<ref refid="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(tdef, address, <ref refid="Macros_8h_1a39ccda3204632fdd991deed3c65cf568" kindref="member">FIELD_SET</ref>(<ref refid="TMC5130_8c_1ac99f647cd8870440329ace7af28ebc14" kindref="member">tmc5130_readInt</ref>(tdef, address), mask, shift, value)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="21" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="define" id="TMC5130_8h_1a48106da52f76c4ac1faceeff79eb1949" prot="public" static="no">
        <name>R10</name>
        <initializer>0x00071703</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="37" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5130_8h_1a34579d700931d8c250d1835b34264705" prot="public" static="no">
        <name>R3A</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="38" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5130_8h_1a013e4296fbb7ad84bcf4def3205402b3" prot="public" static="no">
        <name>R6C</name>
        <initializer>0x000101D5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="39" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="TMC5130_8h_1a4de991a0740398639d1b4f653df327cf" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tmc5130_callback) (TMC5130TypeDef *, ConfigState)</definition>
        <argsstring>)(TMC5130TypeDef *, ConfigState)</argsstring>
        <name>tmc5130_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="34" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="TMC5130_8h_1a2a687fd9b0e511d9d0ff58ce8e5b35ff" prot="public" static="yes" mutable="no">
        <type>const int32_t</type>
        <definition>const int32_t tmc5130_defaultRegisterResetState[TMC5130_REGISTER_COUNT]</definition>
        <argsstring>[TMC5130_REGISTER_COUNT]</argsstring>
        <name>tmc5130_defaultRegisterResetState</name>
        <initializer>=
{

	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
	<ref refid="TMC2130_8h_1a48106da52f76c4ac1faceeff79eb1949" kindref="member">R10</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   <ref refid="TMC2240_8h_1a34579d700931d8c250d1835b34264705" kindref="member">R3A</ref>, 0,   0,   0,   0,   0, 
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
	<ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   <ref refid="TMC2130_8h_1a013e4296fbb7ad84bcf4def3205402b3" kindref="member">R6C</ref>, 0,   0,   0, 
	<ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="41" column="22" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="41" bodyend="52"/>
      </memberdef>
      <memberdef kind="variable" id="TMC5130_8h_1ae9551aaea5306e84799d6c63f1b3584a" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t tmc5130_defaultRegisterAccess[TMC5130_REGISTER_COUNT]</definition>
        <argsstring>[TMC5130_REGISTER_COUNT]</argsstring>
        <name>tmc5130_defaultRegisterAccess</name>
        <initializer>=
{

	0x03, 0x21, 0x01, 0x02, 0x13, 0x02, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	0x02, 0x02, 0x01, 0x02, 0x02, 0x02, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	0x03, 0x03, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 0x02, 0x02, 0x02, 0x03, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	<ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 0x02, 0x03, 0x21, 0x01, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 0x03, 0x03, 0x02, 0x21, 0x01, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	<ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	<ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x01, 0x01, 0x03, 0x02, 0x02, 0x01, 
	0x42, 0x01, 0x02, 0x01, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="68" column="22" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="68" bodyend="79"/>
      </memberdef>
      <memberdef kind="variable" id="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structTMCRegisterConstant" kindref="compound">TMCRegisterConstant</ref></type>
        <definition>const TMCRegisterConstant tmc5130_RegisterConstants[]</definition>
        <argsstring>[]</argsstring>
        <name>tmc5130_RegisterConstants</name>
        <initializer>=
{		
		{ 0x60, 0xAAAAB554 }, 
		{ 0x61, 0x4A9554AA }, 
		{ 0x62, 0x24492929 }, 
		{ 0x63, 0x10104222 }, 
		{ 0x64, 0xFBFFFFFF }, 
		{ 0x65, 0xB5BB777D }, 
		{ 0x66, 0x49295556 }, 
		{ 0x67, 0x00404222 }, 
		{ 0x68, 0xFFFF8056 }, 
		{ 0x69, 0x00F70000 }, 
		{ 0x70, 0x00050480 }  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="85" column="34" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" bodystart="85" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC5130_8h_1a9ba96208adfd333de7542a9b7846c451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_writeDatagram</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)</argsstring>
        <name>tmc5130_writeDatagram</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="103" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="19" bodyend="30" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_writeInt</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint8_t address, int32_t value)</argsstring>
        <name>tmc5130_writeInt</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="104" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="33" bodyend="36" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1ac99f647cd8870440329ace7af28ebc14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc5130_readInt</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint8_t address)</argsstring>
        <name>tmc5130_readInt</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="105" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="39" bodyend="56" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="105" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1a39c0c11d1bc8cdd1c373edd2c98c897a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_init</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint8_t channel, ConfigurationTypeDef *config, const int32_t *registerResetState)</argsstring>
        <name>tmc5130_init</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="107" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="64" bodyend="82" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1a0910aa17a75d65c02519066335a4b440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_fillShadowRegisters</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>tmc5130_fillShadowRegisters</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="108" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="87" bodyend="117" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1aabc19a985cd58c10a6b821f15e53f622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5130_reset</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>tmc5130_reset</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="109" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="120" bodyend="137" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="109" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1acdd4c2d1494333ba4b5874026ccf7605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5130_restore</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>tmc5130_restore</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="110" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="141" bodyend="150" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="110" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1aa682aa96b9602e3d419f59d912827fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_setRegisterResetState</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, const int32_t *resetState)</argsstring>
        <name>tmc5130_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="111" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="153" bodyend="160" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1a09fc9fb597db2e86f80810a213479ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_setCallback</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, tmc5130_callback callback)</argsstring>
        <name>tmc5130_setCallback</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type><ref refid="TMC5130_8h_1a4de991a0740398639d1b4f653df327cf" kindref="member">tmc5130_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="112" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="163" bodyend="166" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1ae5fca8a25ad8b49acd75fb010d20fc00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_periodicJob</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint32_t tick)</argsstring>
        <name>tmc5130_periodicJob</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="113" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="210" bodyend="231" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1ad15de21c64ffdee805034004df610776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_rotate</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, int32_t velocity)</argsstring>
        <name>tmc5130_rotate</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="115" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="234" bodyend="240" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1a2c1dd9b110b6d79661e3700da535970a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_right</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint32_t velocity)</argsstring>
        <name>tmc5130_right</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="116" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="243" bodyend="246" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1af9dda9b743cea54300e0b11bb1402745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_left</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint32_t velocity)</argsstring>
        <name>tmc5130_left</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="117" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="249" bodyend="252" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1a674f00b7208b811e3db26ec39a855a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_stop</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>tmc5130_stop</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="118" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="255" bodyend="258" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="118" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1a48943251dbb307aec0463019e98b1ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_moveTo</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc5130_moveTo</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="119" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="261" bodyend="270" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="119" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8h_1a6e4bc1a494b05606452b41d04d4d632d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_moveBy</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, int32_t *ticks, uint32_t velocityMax)</argsstring>
        <name>tmc5130_moveBy</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" line="120" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="274" bodyend="280" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h" declline="120" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TMC_IC_TMC5130_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC_IC_TMC5130_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="API__Header_8h" kindref="compound">tmc/helpers/API_Header.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5130__Register_8h" kindref="compound">TMC5130_Register.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5130__Constants_8h" kindref="compound">TMC5130_Constants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5130__Fields_8h" kindref="compound">TMC5130_Fields.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="TMC5130_8h_1a65c1788377c7dcb51a6bde7ecd1fd8e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC5130_FIELD_READ(tdef,<sp/>address,<sp/>mask,<sp/>shift)<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>FIELD_GET(tmc5130_readInt(tdef,<sp/>address),<sp/>mask,<sp/>shift)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="TMC5130_8h_1a0a51dc573ec9797c46f79be8dba617e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC5130_FIELD_WRITE(tdef,<sp/>address,<sp/>mask,<sp/>shift,<sp/>value)<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(tmc5130_writeInt(tdef,<sp/>address,<sp/>FIELD_SET(tmc5130_readInt(tdef,<sp/>address),<sp/>mask,<sp/>shift,<sp/>value)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Typedefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structTMC5130TypeDef" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27" refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="28" refid="structTMC5130TypeDef_1a52cdb51ad01258c6a920df1a9954c5dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>velocity,<sp/><ref refid="structTMC5130TypeDef_1a52cdb51ad01258c6a920df1a9954c5dd" kindref="member">oldX</ref>;</highlight></codeline>
<codeline lineno="29" refid="structTMC5130TypeDef_1a42f604ce98731b0dffbac991c40266a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structTMC5130TypeDef_1a42f604ce98731b0dffbac991c40266a2" kindref="member">oldTick</ref>;</highlight></codeline>
<codeline lineno="30" refid="structTMC5130TypeDef_1a04d8a8b744d9785e6d91001a032984f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>registerResetState[<ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>];</highlight></codeline>
<codeline lineno="31" refid="structTMC5130TypeDef_1aa50653b7380927f7bf6a843633bbcb1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>registerAccess[<ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>];</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="TMC5130_8h_1a4de991a0740398639d1b4f653df327cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="TMC5130_8h_1a4de991a0740398639d1b4f653df327cf" kindref="member">tmc5130_callback</ref>)(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref>*,<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837f" kindref="member">ConfigState</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>Register<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="TMC5130_8h_1a48106da52f76c4ac1faceeff79eb1949" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R10<sp/>0x00071703<sp/><sp/></highlight><highlight class="comment">//<sp/>IHOLD_IRUN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="TMC5130_8h_1a34579d700931d8c250d1835b34264705" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R3A<sp/>0x00010000<sp/><sp/></highlight><highlight class="comment">//<sp/>ENC_CONST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="TMC5130_8h_1a013e4296fbb7ad84bcf4def3205402b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R6C<sp/>0x000101D5<sp/><sp/></highlight><highlight class="comment">//<sp/>CHOPCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="TMC5130_8h_1a2a687fd9b0e511d9d0ff58ce8e5b35ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="TMC5130_8h_1a2a687fd9b0e511d9d0ff58ce8e5b35ff" kindref="member">tmc5130_defaultRegisterResetState</ref>[<ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>0,<sp/><sp/><sp/>1,<sp/><sp/><sp/>2,<sp/><sp/><sp/>3,<sp/><sp/><sp/>4,<sp/><sp/><sp/>5,<sp/><sp/><sp/>6,<sp/><sp/><sp/>7,<sp/><sp/><sp/>8,<sp/><sp/><sp/>9,<sp/><sp/><sp/>A,<sp/><sp/><sp/>B,<sp/><sp/><sp/>C,<sp/><sp/><sp/>D,<sp/><sp/><sp/>E,<sp/><sp/><sp/>F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x00<sp/>-<sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8h_1a48106da52f76c4ac1faceeff79eb1949" kindref="member">R10</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x10<sp/>-<sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x20<sp/>-<sp/>0x2F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="TMC5130_8h_1a34579d700931d8c250d1835b34264705" kindref="member">R3A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x30<sp/>-<sp/>0x3F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x40<sp/>-<sp/>0x4F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x50<sp/>-<sp/>0x5F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="TMC5130_8h_1a013e4296fbb7ad84bcf4def3205402b3" kindref="member">R6C</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x60<sp/>-<sp/>0x6F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x70<sp/>-<sp/>0x7F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undefine<sp/>the<sp/>default<sp/>register<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>warnings<sp/>in<sp/>case<sp/>multiple<sp/>TMC-API<sp/>chip<sp/>headers<sp/>are<sp/>included<sp/>at<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R3A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R6C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>access<sp/>permissions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x00:<sp/>none<sp/>(reserved)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x01:<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x02:<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x03:<sp/>read/write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x13:<sp/>read/write,<sp/>separate<sp/>functions/values<sp/>for<sp/>reading<sp/>or<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x21:<sp/>read,<sp/>flag<sp/>register<sp/>(read<sp/>to<sp/>clear)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x42:<sp/>write,<sp/>has<sp/>hardware<sp/>presets<sp/>on<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="TMC5130_8h_1ae9551aaea5306e84799d6c63f1b3584a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="TMC5130_8h_1ae9551aaea5306e84799d6c63f1b3584a" kindref="member">tmc5130_defaultRegisterAccess</ref>[<ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/>A<sp/><sp/><sp/><sp/><sp/>B<sp/><sp/><sp/><sp/><sp/>C<sp/><sp/><sp/><sp/><sp/>D<sp/><sp/><sp/><sp/><sp/>E<sp/><sp/><sp/><sp/><sp/>F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x21,<sp/>0x01,<sp/>0x02,<sp/>0x13,<sp/>0x02,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x00<sp/>-<sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>0x02,<sp/>0x02,<sp/>0x01,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x10<sp/>-<sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x03,<sp/>0x01,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x03,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x20<sp/>-<sp/>0x2F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/>0x02,<sp/>0x03,<sp/>0x21,<sp/>0x01,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/>0x03,<sp/>0x03,<sp/>0x02,<sp/>0x21,<sp/>0x01,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x30<sp/>-<sp/>0x3F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x40<sp/>-<sp/>0x4F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x50<sp/>-<sp/>0x5F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x01,<sp/>0x01,<sp/>0x03,<sp/>0x02,<sp/>0x02,<sp/>0x01,<sp/></highlight><highlight class="comment">//<sp/>0x60<sp/>-<sp/>0x6F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>0x42,<sp/>0x01,<sp/>0x02,<sp/>0x01,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref><sp/><sp/></highlight><highlight class="comment">//<sp/>0x70<sp/>-<sp/>0x7F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>constants<sp/>(only<sp/>required<sp/>for<sp/>0x42<sp/>registers,<sp/>since<sp/>we<sp/>do<sp/>not<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>any<sp/>way<sp/>to<sp/>find<sp/>out<sp/>the<sp/>content<sp/>but<sp/>want<sp/>to<sp/>hold<sp/>the<sp/>actual<sp/>value<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shadow<sp/>register<sp/>so<sp/>an<sp/>application<sp/>(i.e.<sp/>the<sp/>TMCL<sp/>IDE)<sp/>can<sp/>still<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>values.<sp/>This<sp/>only<sp/>works<sp/>when<sp/>the<sp/>register<sp/>content<sp/>is<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTMCRegisterConstant" kindref="compound">TMCRegisterConstant</ref><sp/><ref refid="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" kindref="member">tmc5130_RegisterConstants</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ascending<sp/>addresses!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x60,<sp/>0xAAAAB554<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x61,<sp/>0x4A9554AA<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x62,<sp/>0x24492929<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x63,<sp/>0x10104222<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x64,<sp/>0xFBFFFFFF<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x65,<sp/>0xB5BB777D<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x66,<sp/>0x49295556<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[6]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x67,<sp/>0x00404222<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[7]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x68,<sp/>0xFFFF8056<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUTSEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x69,<sp/>0x00F70000<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUTSTART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x70,<sp/>0x00050480<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>PWMCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>API<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>functions<sp/>act<sp/>on<sp/>one<sp/>IC<sp/>identified<sp/>by<sp/>the<sp/>TMC5130TypeDef<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a9ba96208adfd333de7542a9b7846c451" kindref="member">tmc5130_writeDatagram</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">int32_t<sp/><ref refid="TMC5130_8h_1ac99f647cd8870440329ace7af28ebc14" kindref="member">tmc5130_readInt</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint8_t<sp/>address);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a39c0c11d1bc8cdd1c373edd2c98c897a" kindref="member">tmc5130_init</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a0910aa17a75d65c02519066335a4b440" kindref="member">tmc5130_fillShadowRegisters</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">uint8_t<sp/><ref refid="TMC5130_8h_1aabc19a985cd58c10a6b821f15e53f622" kindref="member">tmc5130_reset</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">uint8_t<sp/><ref refid="TMC5130_8h_1acdd4c2d1494333ba4b5874026ccf7605" kindref="member">tmc5130_restore</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1aa682aa96b9602e3d419f59d912827fcb" kindref="member">tmc5130_setRegisterResetState</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a09fc9fb597db2e86f80810a213479ac3" kindref="member">tmc5130_setCallback</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/><ref refid="TMC5130_8h_1a4de991a0740398639d1b4f653df327cf" kindref="member">tmc5130_callback</ref><sp/>callback);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1ae5fca8a25ad8b49acd75fb010d20fc00" kindref="member">tmc5130_periodicJob</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint32_t<sp/>tick);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1ad15de21c64ffdee805034004df610776" kindref="member">tmc5130_rotate</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>int32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a2c1dd9b110b6d79661e3700da535970a" kindref="member">tmc5130_right</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1af9dda9b743cea54300e0b11bb1402745" kindref="member">tmc5130_left</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a674f00b7208b811e3db26ec39a855a19" kindref="member">tmc5130_stop</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a48943251dbb307aec0463019e98b1ecd" kindref="member">tmc5130_moveTo</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8h_1a6e4bc1a494b05606452b41d04d4d632d" kindref="member">tmc5130_moveBy</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>int32_t<sp/>*ticks,<sp/>uint32_t<sp/>velocityMax);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TMC_IC_TMC5130_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.h"/>
  </compounddef>
</doxygen>
