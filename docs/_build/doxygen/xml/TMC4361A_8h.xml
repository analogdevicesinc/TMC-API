<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC4361A_8h" kind="file" language="C++">
    <compoundname>TMC4361A.h</compoundname>
    <includes refid="API__Header_8h" local="yes">tmc/helpers/API_Header.h</includes>
    <includes refid="TMC4361A_2TMC4361A__Register_8h" local="yes">TMC4361A_Register.h</includes>
    <includes refid="TMC4361A__Constants_8h" local="yes">TMC4361A_Constants.h</includes>
    <includes refid="TMC4361A__Fields_8h" local="yes">TMC4361A_Fields.h</includes>
    <includedby refid="TMC4361A_8c" local="yes">TMC4361A.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="11">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="9">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="12">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="5">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC4361A.h</label>
        <link refid="TMC4361A_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>TMC4361A_Constants.h</label>
        <link refid="TMC4361A__Constants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC4361A_Fields.h</label>
        <link refid="TMC4361A__Fields_8h"/>
      </node>
      <node id="14">
        <label>TMC4361A_Register.h</label>
        <link refid="TMC4361A_2TMC4361A__Register_8h"/>
      </node>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>TMC4361A.c</label>
        <link refid="TMC4361A_8c"/>
      </node>
      <node id="1">
        <label>TMC4361A.h</label>
        <link refid="TMC4361A_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structTMC4361ATypeDef" prot="public">TMC4361ATypeDef</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="TMC4361A_8h_1a6f19ec15f23c105b57239f224a06375d" prot="public" static="no">
        <name>TMC4361A_FIELD_READ</name>
        <param><defname>tdef</defname></param>
        <param><defname>address</defname></param>
        <param><defname>mask</defname></param>
        <param><defname>shift</defname></param>
        <initializer>	<ref refid="Macros_8h_1afc21f29c5cf2d76aab227e33233cf357" kindref="member">FIELD_GET</ref>(<ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tdef, address), mask, shift)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="19" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="define" id="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" prot="public" static="no">
        <name>TMC4361A_FIELD_WRITE</name>
        <param><defname>tdef</defname></param>
        <param><defname>address</defname></param>
        <param><defname>mask</defname></param>
        <param><defname>shift</defname></param>
        <param><defname>value</defname></param>
        <initializer>	(<ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tdef, address, <ref refid="Macros_8h_1a39ccda3204632fdd991deed3c65cf568" kindref="member">FIELD_SET</ref>(<ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tdef, address), mask, shift, value)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="21" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="define" id="TMC4361A_8h_1a48106da52f76c4ac1faceeff79eb1949" prot="public" static="no">
        <name>R10</name>
        <initializer>0x00040001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="42" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC4361A_8h_1aad597234b2b9107fd4b85042ebf7d227" prot="public" static="no">
        <name>R20</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="43" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" bodystart="43" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="TMC4361A_8h_1a414bd96a0662dfef1c683380b0aec0c9" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tmc4361A_callback) (TMC4361ATypeDef *, ConfigState)</definition>
        <argsstring>)(TMC4361ATypeDef *, ConfigState)</argsstring>
        <name>tmc4361A_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="39" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="TMC4361A_8h_1af01c70463643fc432b10b1a033a18ccc" prot="public" static="yes" mutable="no">
        <type>const int32_t</type>
        <definition>const int32_t tmc4361A_defaultRegisterResetState[TMC4361A_REGISTER_COUNT]</definition>
        <argsstring>[TMC4361A_REGISTER_COUNT]</argsstring>
        <name>tmc4361A_defaultRegisterResetState</name>
        <initializer>=
{

	<ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   0,   0,   0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   0,   0,   
	<ref refid="TMC2130_8h_1a48106da52f76c4ac1faceeff79eb1949" kindref="member">R10</ref>, 0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 
	<ref refid="TMC4330_8h_1aad597234b2b9107fd4b85042ebf7d227" kindref="member">R20</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
	0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
	0,   0,   0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   0,   0,   0,   0,   0,   
	0,   0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   
	<ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0    
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="45" column="22" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" bodystart="45" bodyend="56"/>
      </memberdef>
      <memberdef kind="variable" id="TMC4361A_8h_1aea4d2d9159afed513a1b03949fac0644" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t tmc4361A_defaultRegisterAccess[TMC4361A_REGISTER_COUNT]</definition>
        <argsstring>[TMC4361A_REGISTER_COUNT]</argsstring>
        <name>tmc4361A_defaultRegisterAccess</name>
        <initializer>=
{

	0x43, 0x03, 0x03, 0x03, 0x03, 0x03, 0x43, 0x43, 0x03, 0x03, 0x43, 0x43, 0x03, 0x03, 0x23, 0x01, 
	0x03, 0x03, 0x43, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x43, 0x03, 0x03, 0x43, 
	0x03, 0x03, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 
	0x03, 0x43, 0x03, 0x03, 0x03, 0x03, 0x13, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 
	0x03, 0x13, 0x13, 0x42, 0x13, 0x02, 0x42, 0x42, 0x42, 0x03, 0x13, 0x13, 0x02, 0x13, 0x02, 0x02, 
	0x02, 0x02, 0x42, 0x02, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 0x01, 0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x13, 0x13, 0x01, 0x01, 
	0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x13, 0x01, 0x13, 0x13, 0x02, 0x42, 0x01  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="73" column="22" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" bodystart="73" bodyend="84"/>
      </memberdef>
      <memberdef kind="variable" id="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structTMCRegisterConstant" kindref="compound">TMCRegisterConstant</ref></type>
        <definition>const TMCRegisterConstant tmc4361A_RegisterConstants[]</definition>
        <argsstring>[]</argsstring>
        <name>tmc4361A_RegisterConstants</name>
        <initializer>=
{		
		{ 0x53, 0xFFFFFFFF }, 
		{ 0x56, 0x00A000A0 }, 
		{ 0x57, 0x00F00000 }, 
		{ 0x58, 0x00000190 }, 
		{ 0x62, 0x00FFFFFF }, 
		{ 0x70, 0xAAAAB554 }, 
		{ 0x71, 0x4A9554AA }, 
		{ 0x72, 0x24492929 }, 
		{ 0x73, 0x10104222 }, 
		{ 0x74, 0xFBFFFFFF }, 
		{ 0x75, 0xB5BB777D }, 
		{ 0x76, 0x49295556 }, 
		{ 0x77, 0x00404222 }, 
		{ 0x78, 0xFFFF8056 }, 
		{ 0x7E, 0x00F70000 }, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="90" column="34" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" bodystart="90" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC4361A_8h_1ae0b48eb8f564a7a57968f65782fba2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_writeDatagram</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)</argsstring>
        <name>tmc4361A_writeDatagram</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="113" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="19" bodyend="34" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a24e445fe2a9a630d60dfb55dcbe42c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_writeInt</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t address, int32_t value)</argsstring>
        <name>tmc4361A_writeInt</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="114" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="36" bodyend="39" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="114" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1aaa387254f330dad5e35a1d31ee3c547a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc4361A_readInt</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t address)</argsstring>
        <name>tmc4361A_readInt</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="115" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="41" bodyend="61" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="115" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a6312dc9b5c944cc5b70428ce94956c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_readWriteCover</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t *data, size_t length)</argsstring>
        <name>tmc4361A_readWriteCover</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="116" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="65" bodyend="118" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a27fcec3fd6dd689fa20e2450efe069d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_init</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t channel, ConfigurationTypeDef *config, const int32_t *registerResetState)</argsstring>
        <name>tmc4361A_init</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="119" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="122" bodyend="140" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="119" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1ae9d6e420ba2d283541f69959e40f256f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_fillShadowRegisters</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_fillShadowRegisters</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="120" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="145" bodyend="173" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a59de3dce7caad13334048229fb6aa9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc4361A_reset</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_reset</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="121" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="175" bodyend="190" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="121" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a13354981317fcd1d299e8fdedc03c535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc4361A_restore</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_restore</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="122" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="192" bodyend="201" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="122" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a13f4672813b41819f431b8cdb7e1ba4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_setRegisterResetState</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, const int32_t *resetState)</argsstring>
        <name>tmc4361A_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="123" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="203" bodyend="208" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a7cdbfef821d403936981475bc9c5cefe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_setCallback</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, tmc4361A_callback callback)</argsstring>
        <name>tmc4361A_setCallback</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type><ref refid="TMC4361A_8h_1a414bd96a0662dfef1c683380b0aec0c9" kindref="member">tmc4361A_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="124" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="210" bodyend="213" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a9ee994f88ca5e297ba9e832e65b0200b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_periodicJob</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint32_t tick)</argsstring>
        <name>tmc4361A_periodicJob</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="125" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="250" bodyend="263" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1ae056fff57942958d2ae12b23de1b813e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_rotate</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t velocity)</argsstring>
        <name>tmc4361A_rotate</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="128" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="265" bodyend="271" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a7b15988c92b8df55f6e7073fbffacadb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_right</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t velocity)</argsstring>
        <name>tmc4361A_right</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="129" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="273" bodyend="276" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a2c75830b56d1a8b6d5a53848a65337ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_left</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t velocity)</argsstring>
        <name>tmc4361A_left</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="130" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="278" bodyend="281" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="130" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1ac24ee00568f672d11a9e1e2cf2a54728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_stop</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_stop</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="131" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="283" bodyend="286" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a34ac4e981b59ede2f4ac8af4bd30ce6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_moveTo</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc4361A_moveTo</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="132" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="288" bodyend="296" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a0272ee98d59ec2969c793686607de4f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_moveBy</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t *ticks, uint32_t velocityMax)</argsstring>
        <name>tmc4361A_moveBy</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="133" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="299" bodyend="305" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a5adf64fcb388fc1449dfbb1cbd062d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc4361A_discardVelocityDecimals</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>tmc4361A_discardVelocityDecimals</name>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="136" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="307" bodyend="314" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="136" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8h_1a245a387f8b545a228ffc2db9aa8d8e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc4361A_calibrateClosedLoop</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t worker0master1)</argsstring>
        <name>tmc4361A_calibrateClosedLoop</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>worker0master1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" line="137" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="352" bodyend="415" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h" declline="137" declcolumn="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TMC_IC_TMC4361A_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC_IC_TMC4361A_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="API__Header_8h" kindref="compound">tmc/helpers/API_Header.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC43xx_2TMC4361A__Register_8h" kindref="compound">TMC4361A_Register.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC4361A__Constants_8h" kindref="compound">TMC4361A_Constants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC4361A__Fields_8h" kindref="compound">TMC4361A_Fields.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="TMC4361A_8h_1a6f19ec15f23c105b57239f224a06375d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC4361A_FIELD_READ(tdef,<sp/>address,<sp/>mask,<sp/>shift)<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>FIELD_GET(tmc4361A_readInt(tdef,<sp/>address),<sp/>mask,<sp/>shift)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC4361A_FIELD_WRITE(tdef,<sp/>address,<sp/>mask,<sp/>shift,<sp/>value)<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(tmc4361A_writeInt(tdef,<sp/>address,<sp/>FIELD_SET(tmc4361A_readInt(tdef,<sp/>address),<sp/>mask,<sp/>shift,<sp/>value)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Typedefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structTMC4361ATypeDef" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27" refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="28" refid="structTMC4361ATypeDef_1afb5a931713d01f04810734247f81c27e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structTMC4361ATypeDef_1afb5a931713d01f04810734247f81c27e" kindref="member">velocity</ref>;</highlight></codeline>
<codeline lineno="29" refid="structTMC4361ATypeDef_1a85c3f8628f25b9e962ea8b4c155ee561" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structTMC4361ATypeDef_1a85c3f8628f25b9e962ea8b4c155ee561" kindref="member">oldX</ref>;</highlight></codeline>
<codeline lineno="30" refid="structTMC4361ATypeDef_1aa0b16b84812fdff95a8b83a21da94760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structTMC4361ATypeDef_1aa0b16b84812fdff95a8b83a21da94760" kindref="member">oldTick</ref>;</highlight></codeline>
<codeline lineno="31" refid="structTMC4361ATypeDef_1a7fe82e2dc0f8cc7b4f6a95e01bedd79c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>registerResetState[<ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>];</highlight></codeline>
<codeline lineno="32" refid="structTMC4361ATypeDef_1a9a73313346b7e0f98529944a09b0099a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>registerAccess[<ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TMotorConfig<sp/>motorConfig;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TClosedLoopConfig<sp/>closedLoopConfig;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structTMC4361ATypeDef_1a950eeb14d57ab315f18bedb28e3b7626" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structTMC4361ATypeDef_1a950eeb14d57ab315f18bedb28e3b7626" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="36" refid="structTMC4361ATypeDef_1a49de6839e508666b46cfb2e32ccb4300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*<ref refid="structTMC4361ATypeDef_1a49de6839e508666b46cfb2e32ccb4300" kindref="member">cover</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="TMC4361A_8h_1a414bd96a0662dfef1c683380b0aec0c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="TMC4361A_8h_1a414bd96a0662dfef1c683380b0aec0c9" kindref="member">tmc4361A_callback</ref>)(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref>*,<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837f" kindref="member">ConfigState</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>Register<sp/>Values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="TMC4361A_8h_1a48106da52f76c4ac1faceeff79eb1949" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R10<sp/>0x00040001<sp/><sp/></highlight><highlight class="comment">//<sp/>STP_LENGTH_ADD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="TMC4361A_8h_1aad597234b2b9107fd4b85042ebf7d227" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R20<sp/>0x00000001<sp/><sp/></highlight><highlight class="comment">//<sp/>RAMPMODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="TMC4361A_8h_1af01c70463643fc432b10b1a033a18ccc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="TMC4361A_8h_1af01c70463643fc432b10b1a033a18ccc" kindref="member">tmc4361A_defaultRegisterResetState</ref>[<ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>0,<sp/><sp/><sp/>1,<sp/><sp/><sp/>2,<sp/><sp/><sp/>3,<sp/><sp/><sp/>4,<sp/><sp/><sp/>5,<sp/><sp/><sp/>6,<sp/><sp/><sp/>7,<sp/><sp/><sp/>8,<sp/><sp/><sp/>9,<sp/><sp/><sp/>A,<sp/><sp/><sp/>B,<sp/><sp/><sp/>C,<sp/><sp/><sp/>D,<sp/><sp/><sp/>E,<sp/><sp/><sp/>F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x00<sp/>-<sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1a48106da52f76c4ac1faceeff79eb1949" kindref="member">R10</ref>,<sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x10<sp/>-<sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1aad597234b2b9107fd4b85042ebf7d227" kindref="member">R20</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x20<sp/>-<sp/>0x2F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x30<sp/>-<sp/>0x3F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x40<sp/>-<sp/>0x4F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x50<sp/>-<sp/>0x5F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x60<sp/>-<sp/>0x6F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x70<sp/>-<sp/>0x7F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undefine<sp/>the<sp/>default<sp/>register<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>warnings<sp/>in<sp/>case<sp/>multiple<sp/>TMC-API<sp/>chip<sp/>headers<sp/>are<sp/>included<sp/>at<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>access<sp/>permissions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x00:<sp/>none<sp/>(reserved)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x01:<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x02:<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x03:<sp/>read/write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x13:<sp/>read/write,<sp/>separate<sp/>functions/values<sp/>for<sp/>reading<sp/>or<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x23:<sp/>read/write,<sp/>holds<sp/>read<sp/>or<sp/>write<sp/>to<sp/>clear<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x42:<sp/>write,<sp/>has<sp/>hardware<sp/>presets<sp/>on<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x43:<sp/>read/write,<sp/>has<sp/>hardware<sp/>presets<sp/>on<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>0x53:<sp/>read/write,<sp/>has<sp/>hardware<sp/>presets<sp/>on<sp/>reset,<sp/>separate<sp/>functions/values<sp/>for<sp/>reading<sp/>or<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="TMC4361A_8h_1aea4d2d9159afed513a1b03949fac0644" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="TMC4361A_8h_1aea4d2d9159afed513a1b03949fac0644" kindref="member">tmc4361A_defaultRegisterAccess</ref>[<ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/>A<sp/><sp/><sp/><sp/><sp/>B<sp/><sp/><sp/><sp/><sp/>C<sp/><sp/><sp/><sp/><sp/>D<sp/><sp/><sp/><sp/><sp/>E<sp/><sp/><sp/><sp/><sp/>F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>0x43,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x43,<sp/>0x43,<sp/>0x03,<sp/>0x03,<sp/>0x43,<sp/>0x43,<sp/>0x03,<sp/>0x03,<sp/>0x23,<sp/>0x01,<sp/></highlight><highlight class="comment">//<sp/>0x00<sp/>-<sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x03,<sp/>0x43,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x43,<sp/>0x03,<sp/>0x03,<sp/>0x43,<sp/></highlight><highlight class="comment">//<sp/>0x10<sp/>-<sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x03,<sp/>0x01,<sp/>0x01,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/></highlight><highlight class="comment">//<sp/>0x20<sp/>-<sp/>0x2F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x43,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x13,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/></highlight><highlight class="comment">//<sp/>0x30<sp/>-<sp/>0x3F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/>0x03,<sp/></highlight><highlight class="comment">//<sp/>0x40<sp/>-<sp/>0x4F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x13,<sp/>0x13,<sp/>0x42,<sp/>0x13,<sp/>0x02,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x03,<sp/>0x13,<sp/>0x13,<sp/>0x02,<sp/>0x13,<sp/>0x02,<sp/>0x02,<sp/></highlight><highlight class="comment">//<sp/>0x50<sp/>-<sp/>0x5F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>0x02,<sp/>0x02,<sp/>0x42,<sp/>0x02,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/>0x01,<sp/>0x01,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x01,<sp/>0x01,<sp/>0x13,<sp/>0x13,<sp/>0x01,<sp/>0x01,<sp/></highlight><highlight class="comment">//<sp/>0x60<sp/>-<sp/>0x6F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x13,<sp/>0x01,<sp/>0x13,<sp/>0x13,<sp/>0x02,<sp/>0x42,<sp/>0x01<sp/><sp/></highlight><highlight class="comment">//<sp/>0x70<sp/>-<sp/>0x7F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>constants<sp/>(only<sp/>required<sp/>for<sp/>0x42<sp/>registers,<sp/>since<sp/>we<sp/>do<sp/>not<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>any<sp/>way<sp/>to<sp/>find<sp/>out<sp/>the<sp/>content<sp/>but<sp/>want<sp/>to<sp/>hold<sp/>the<sp/>actual<sp/>value<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shadow<sp/>register<sp/>so<sp/>an<sp/>application<sp/>(i.e.<sp/>the<sp/>TMCL<sp/>IDE)<sp/>can<sp/>still<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>values.<sp/>This<sp/>only<sp/>works<sp/>when<sp/>the<sp/>register<sp/>content<sp/>is<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTMCRegisterConstant" kindref="compound">TMCRegisterConstant</ref><sp/><ref refid="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" kindref="member">tmc4361A_RegisterConstants</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ascending<sp/>addresses!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x53,<sp/>0xFFFFFFFF<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ENC_POS_DEV_TOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x56,<sp/>0x00A000A0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>SER_CLK_IN_HIGH,<sp/>SER_CLK_IN_LOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x57,<sp/>0x00F00000<sp/>},<sp/></highlight><highlight class="comment">//<sp/>SSI_IN_CLK_DELAY,<sp/>SSI_IN_WTIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x58,<sp/>0x00000190<sp/>},<sp/></highlight><highlight class="comment">//<sp/>SER_PTIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x62,<sp/>0x00FFFFFF<sp/>},<sp/></highlight><highlight class="comment">//<sp/>ENC_VEL_ZERO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x70,<sp/>0xAAAAB554<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x71,<sp/>0x4A9554AA<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x72,<sp/>0x24492929<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x73,<sp/>0x10104222<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x74,<sp/>0xFBFFFFFF<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x75,<sp/>0xB5BB777D<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x76,<sp/>0x49295556<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[6]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x77,<sp/>0x00404222<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[7]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x78,<sp/>0xFFFF8056<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUTSEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x7E,<sp/>0x00F70000<sp/>},<sp/></highlight><highlight class="comment">//<sp/>START_SIN,<sp/>START_SIN_90_120,<sp/>DAC_OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>API<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>functions<sp/>act<sp/>on<sp/>one<sp/>IC<sp/>given<sp/>by<sp/>the<sp/>TMC4361ATypeDef<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPI<sp/>Communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1ae0b48eb8f564a7a57968f65782fba2f6" kindref="member">tmc4361A_writeDatagram</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">int32_t<sp/><ref refid="TMC4361A_8h_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>address);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a6312dc9b5c944cc5b70428ce94956c6e" kindref="member">tmc4361A_readWriteCover</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a27fcec3fd6dd689fa20e2450efe069d7" kindref="member">tmc4361A_init</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1ae9d6e420ba2d283541f69959e40f256f" kindref="member">tmc4361A_fillShadowRegisters</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">uint8_t<sp/><ref refid="TMC4361A_8h_1a59de3dce7caad13334048229fb6aa9d8" kindref="member">tmc4361A_reset</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">uint8_t<sp/><ref refid="TMC4361A_8h_1a13354981317fcd1d299e8fdedc03c535" kindref="member">tmc4361A_restore</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a13f4672813b41819f431b8cdb7e1ba4f" kindref="member">tmc4361A_setRegisterResetState</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a7cdbfef821d403936981475bc9c5cefe" kindref="member">tmc4361A_setCallback</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/><ref refid="TMC4361A_8h_1a414bd96a0662dfef1c683380b0aec0c9" kindref="member">tmc4361A_callback</ref><sp/>callback);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a9ee994f88ca5e297ba9e832e65b0200b" kindref="member">tmc4361A_periodicJob</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint32_t<sp/>tick);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Motion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1ae056fff57942958d2ae12b23de1b813e" kindref="member">tmc4361A_rotate</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a7b15988c92b8df55f6e7073fbffacadb" kindref="member">tmc4361A_right</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a2c75830b56d1a8b6d5a53848a65337ae" kindref="member">tmc4361A_left</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1ac24ee00568f672d11a9e1e2cf2a54728" kindref="member">tmc4361A_stop</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a34ac4e981b59ede2f4ac8af4bd30ce6e" kindref="member">tmc4361A_moveTo</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8h_1a0272ee98d59ec2969c793686607de4f4" kindref="member">tmc4361A_moveBy</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>*ticks,<sp/>uint32_t<sp/>velocityMax);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">int32_t<sp/><ref refid="TMC4361A_8h_1a5adf64fcb388fc1449dfbb1cbd062d0a" kindref="member">tmc4361A_discardVelocityDecimals</ref>(int32_t<sp/>value);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">uint8_t<sp/><ref refid="TMC4361A_8h_1a245a387f8b545a228ffc2db9aa8d8e8d" kindref="member">tmc4361A_calibrateClosedLoop</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>worker0master1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TMC_IC_TMC4361A_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.h"/>
  </compounddef>
</doxygen>
