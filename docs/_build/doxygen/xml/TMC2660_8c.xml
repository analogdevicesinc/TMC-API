<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC2660_8c" kind="file" language="C++">
    <compoundname>TMC2660.c</compoundname>
    <includes refid="TMC2660_8h" local="yes">TMC2660.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC2660.c</label>
        <link refid="TMC2660_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC2660.h</label>
        <link refid="TMC2660_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC2660_Constants.h</label>
        <link refid="TMC2660__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TMC2660_Fields.h</label>
        <link refid="TMC2660__Fields_8h"/>
      </node>
      <node id="15">
        <label>TMC2660_Register.h</label>
        <link refid="TMC2660__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="TMC2660_8c_1af1ee2a92d9747f12f87782a3f90ec40e" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t tmc2660_defaultRegisterAccess[TMC2660_REGISTER_COUNT]</definition>
        <argsstring>[TMC2660_REGISTER_COUNT]</argsstring>
        <name>tmc2660_defaultRegisterAccess</name>
        <initializer>=
{
	<ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>,  
	<ref refid="RegisterAccess_8h_1ab44971b415fd1bd8fd16b85f3a7de84e" kindref="member">TMC_ACCESS_NONE</ref>,   
	<ref refid="RegisterAccess_8h_1ab44971b415fd1bd8fd16b85f3a7de84e" kindref="member">TMC_ACCESS_NONE</ref>,   
	<ref refid="RegisterAccess_8h_1ab44971b415fd1bd8fd16b85f3a7de84e" kindref="member">TMC_ACCESS_NONE</ref>,   
	<ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>,  
	<ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>,  
	<ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>,  
	<ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>   
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="12" column="15" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="12" bodyend="22"/>
      </memberdef>
      <memberdef kind="variable" id="TMC2660_8c_1a07ad397e63d3d24a4a77ab1c80445bc6" prot="public" static="no" mutable="no">
        <type>const int32_t</type>
        <definition>const int32_t tmc2660_defaultRegisterResetState[TMC2660_REGISTER_COUNT]</definition>
        <argsstring>[TMC2660_REGISTER_COUNT]</argsstring>
        <name>tmc2660_defaultRegisterResetState</name>
        <initializer>=
{
	0x00000000,  
	0x00000000,  
	0x00000000,  
	0x00000000,  
	0x00091935,  
	0x000A0000,  
	0x000D0505,  
	0x000EF040   
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="24" column="15" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="24" bodyend="34"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc2660_writeInt</definition>
        <argsstring>(uint8_t motor, uint8_t address, int32_t value)</argsstring>
        <name>tmc2660_writeInt</name>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="37" column="13" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" declline="37" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1a86f023a1a699b0321b97e2942b2c2813" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t tmc2660_readInt</definition>
        <argsstring>(uint8_t motor, uint8_t address)</argsstring>
        <name>tmc2660_readInt</name>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="38" column="17" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" declline="38" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1a35fd84fa44489333782f981859adcc4a" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc2660_readWrite</definition>
        <argsstring>(uint8_t motor, uint32_t value)</argsstring>
        <name>tmc2660_readWrite</name>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="39" column="13" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" declline="39" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1a748a47a37a41b00ffe5422967651ced0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void standStillCurrentLimitation</definition>
        <argsstring>(TMC2660TypeDef *TMC2660)</argsstring>
        <name>standStillCurrentLimitation</name>
        <param>
          <type><ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref> *</type>
          <declname>TMC2660</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="43" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="43" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1a8afcc070e9b42b291c3b7726afaa753e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void continousSync</definition>
        <argsstring>(ConfigurationTypeDef *TMC2660_config)</argsstring>
        <name>continousSync</name>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>TMC2660_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="72" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="72" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1ab9b27cca32528649e63bcf37fbc255a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc2660_initConfig</definition>
        <argsstring>(TMC2660TypeDef *tmc2660)</argsstring>
        <name>tmc2660_initConfig</name>
        <param>
          <type><ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref> *</type>
          <declname>tmc2660</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="99" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="99" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1a6e7f7610d4386d0e813f894f71e183ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc2660_writeConfiguration</definition>
        <argsstring>(TMC2660TypeDef *tmc2660, ConfigurationTypeDef *TMC2660_config)</argsstring>
        <name>tmc2660_writeConfiguration</name>
        <param>
          <type><ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref> *</type>
          <declname>tmc2660</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>TMC2660_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="123" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="123" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1aed99dea7f4b5d5fcdb119177f462e4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc2660_periodicJob</definition>
        <argsstring>(uint8_t motor, uint32_t tick, TMC2660TypeDef *tmc2660, ConfigurationTypeDef *TMC2660_config)</argsstring>
        <name>tmc2660_periodicJob</name>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <param>
          <type><ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref> *</type>
          <declname>tmc2660</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>TMC2660_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="146" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="146" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1a032ad4e76423e3def4cce8d8aacc586f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc2660_reset</definition>
        <argsstring>(TMC2660TypeDef *TMC2660, ConfigurationTypeDef *TMC2660_config)</argsstring>
        <name>tmc2660_reset</name>
        <param>
          <type><ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref> *</type>
          <declname>TMC2660</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>TMC2660_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="162" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="162" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="TMC2660_8c_1ae623b6ba7db3f9a00a72be201f57b23a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc2660_restore</definition>
        <argsstring>(ConfigurationTypeDef *TMC2660_config)</argsstring>
        <name>tmc2660_restore</name>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>TMC2660_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" line="175" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c" bodystart="175" bodyend="184"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC2660_8h" kindref="compound">TMC2660.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="TMC2660_8c_1af1ee2a92d9747f12f87782a3f90ec40e" kindref="member">tmc2660_defaultRegisterAccess</ref>[<ref refid="TMC2660__Constants_8h_1a1e17acee83fb2696e23b6e1150071512" kindref="member">TMC2660_REGISTER_COUNT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>0:<sp/>DRVCTRL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1ab44971b415fd1bd8fd16b85f3a7de84e" kindref="member">TMC_ACCESS_NONE</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1:<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1ab44971b415fd1bd8fd16b85f3a7de84e" kindref="member">TMC_ACCESS_NONE</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2:<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1ab44971b415fd1bd8fd16b85f3a7de84e" kindref="member">TMC_ACCESS_NONE</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3:<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>4:<sp/>CHOPCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>5:<sp/>SMARTEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>6:<sp/>SGCSCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a9bbc17f9c25f656ded4987d46ef6fe48" kindref="member">TMC_ACCESS_WRITE</ref><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7:<sp/>DRVCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="TMC2660_8c_1a07ad397e63d3d24a4a77ab1c80445bc6" kindref="member">tmc2660_defaultRegisterResetState</ref>[<ref refid="TMC2660__Constants_8h_1a1e17acee83fb2696e23b6e1150071512" kindref="member">TMC2660_REGISTER_COUNT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>0:<sp/>DRVCTRL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>1:<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>2:<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>3:<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00091935,<sp/><sp/></highlight><highlight class="comment">//<sp/>4:<sp/>CHOPCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>0x000A0000,<sp/><sp/></highlight><highlight class="comment">//<sp/>5:<sp/>SMARTEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>0x000D0505,<sp/><sp/></highlight><highlight class="comment">//<sp/>6:<sp/>SGCSCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>0x000EF040<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7:<sp/>DRVCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=&gt;<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(uint8_t<sp/>motor,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="TMC2660_8c_1a86f023a1a699b0321b97e2942b2c2813" kindref="member">tmc2660_readInt</ref>(uint8_t<sp/>motor,<sp/>uint8_t<sp/>address);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC2660_8c_1a35fd84fa44489333782f981859adcc4a" kindref="member">tmc2660_readWrite</ref>(uint8_t<sp/>motor,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//extern<sp/>void<sp/>tmc2660_setField(uint8_t<sp/>motor,<sp/>uint8_t<sp/>address,<sp/>uint32_t<sp/>clearMask,<sp/>uint32_t<sp/>field);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC2660_8c_1a748a47a37a41b00ffe5422967651ced0" kindref="member">standStillCurrentLimitation</ref>(<ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref><sp/>*TMC2660)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>mark<sp/>if<sp/>current<sp/>should<sp/>be<sp/>reduced<sp/>in<sp/>stand<sp/>still<sp/>if<sp/>too<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>errorTimer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>standstill<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="TMC2660__Register_8h_1ae486c0ba649d6ec52bc60b5f39d44374" kindref="member">TMC2660_GET_STST</ref>(<ref refid="TMC2660_8c_1a86f023a1a699b0321b97e2942b2c2813" kindref="member">tmc2660_readInt</ref>(0,<sp/><ref refid="TMC2660__Constants_8h_1a77526f00e14a71e948443f919e3339a9" kindref="member">TMC2660_RESPONSE_LATEST</ref>)))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>current<sp/>reduction<sp/>is<sp/>neccessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a06ec4373dfba80308d3d2310bec5e3f0" kindref="member">runCurrentScale</ref><sp/>&gt;<sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a8b481e7baf8df21a771ab717ce45609a" kindref="member">standStillCurrentScale</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a1aa6071c76051e83d6ccaa4324fac394" kindref="member">isStandStillOverCurrent</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errorTimer++<sp/>&gt;<sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1ae2cc3dd66277a812441cb5f29a9aef8d" kindref="member">standStillTimeout</ref>/10)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>current<sp/>limitation<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1ae1e778373253425371f632d1c1295257" kindref="member">isStandStillCurrentLimit</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorTimer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>standstill<sp/>or<sp/>overcurrent<sp/>-&gt;<sp/>reset<sp/>flags<sp/>&amp;<sp/>error<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a1aa6071c76051e83d6ccaa4324fac394" kindref="member">isStandStillOverCurrent</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1ae1e778373253425371f632d1c1295257" kindref="member">isStandStillCurrentLimit</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>errorTimer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC2660_8c_1a8afcc070e9b42b291c3b7726afaa753e" kindref="member">continousSync</ref>(<ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*TMC2660_config)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>refreshes<sp/>settings<sp/>to<sp/>prevent<sp/>chip<sp/>from<sp/>loosing<sp/>settings<sp/>on<sp/>brownout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>write<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>read<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>rdsel<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rotational<sp/>reading<sp/>all<sp/>replys<sp/>to<sp/>keep<sp/>values<sp/>up<sp/>to<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>value,<sp/>drvConf;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>additional<sp/>reading<sp/>to<sp/>keep<sp/>all<sp/>replies<sp/>up<sp/>to<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>drvConf<sp/>=<sp/><ref refid="TMC2660_8c_1a86f023a1a699b0321b97e2942b2c2813" kindref="member">tmc2660_readInt</ref>(0,<sp/><ref refid="TMC2660__Constants_8h_1abb9cbb5f54a5e60e21f23b1592fba0f7" kindref="member">TMC2660_WRITE_BIT</ref><sp/>|<sp/><ref refid="TMC2660__Register_8h_1a60e677dd1b463ce6fce850b1cad80530" kindref="member">TMC2660_DRVCONF</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>value<sp/>amd<sp/><sp/>drvConf<sp/>to<sp/>write<sp/>back<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>&amp;=<sp/>~TMC2660_SET_RDSEL(-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>RDSEL<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>|=<sp/><ref refid="TMC2660__Register_8h_1aa6ed648efe6de22be4b319def45fac11" kindref="member">TMC2660_SET_RDSEL</ref>(rdsel<sp/>%<sp/>3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>set<sp/>rdsel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a35fd84fa44489333782f981859adcc4a" kindref="member">tmc2660_readWrite</ref>(0,<sp/>value);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a35fd84fa44489333782f981859adcc4a" kindref="member">tmc2660_readWrite</ref>(0,<sp/>drvConf);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>next<sp/>read<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>read<sp/>=<sp/>(read<sp/>+<sp/>1)<sp/>%<sp/>3;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>settings<sp/>from<sp/>shadow<sp/>register<sp/>to<sp/>chip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//readWrite(TMC2660_config-&gt;shadowRegister[TMC2660_WRITE<sp/>|<sp/>write]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a35fd84fa44489333782f981859adcc4a" kindref="member">tmc2660_readWrite</ref>(0,<sp/>TMC2660_config-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC2660__Constants_8h_1abb9cbb5f54a5e60e21f23b1592fba0f7" kindref="member">TMC2660_WRITE_BIT</ref><sp/>|<sp/>write]);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>next<sp/>write<sp/>address<sp/>-<sp/>skip<sp/>unused<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>write<sp/>=<sp/>(write<sp/>==<sp/><ref refid="TMC2660__Register_8h_1a241db19b6e28afbfb637a369b07f3e8d" kindref="member">TMC2660_DRVCTRL</ref>)<sp/>?<sp/><ref refid="TMC2660__Register_8h_1a68d02b6cce9078655b62e3988bf06d99" kindref="member">TMC2660_CHOPCONF</ref><sp/>:<sp/>((write<sp/>+<sp/>1)<sp/>%<sp/><ref refid="TMC2660__Constants_8h_1a1e17acee83fb2696e23b6e1150071512" kindref="member">TMC2660_REGISTER_COUNT</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC2660_8c_1ab9b27cca32528649e63bcf37fbc255a3" kindref="member">tmc2660_initConfig</ref>(<ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref><sp/>*tmc2660)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a5d63af9bbe4bcdaacb2f7e3d13bafc4e" kindref="member">velocity</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1af3f6938855ce71ba886a8d01c64440e3" kindref="member">oldTick</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a74dc753b3c72510a24bb283f2847d4ba" kindref="member">oldX</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1af2f57cef62b01c0463cfbd8dde328562" kindref="member">continuousModeEnable</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1ae1e778373253425371f632d1c1295257" kindref="member">isStandStillCurrentLimit</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a1aa6071c76051e83d6ccaa4324fac394" kindref="member">isStandStillOverCurrent</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a06ec4373dfba80308d3d2310bec5e3f0" kindref="member">runCurrentScale</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a1511869a12d704645cb89e2a4c26dbbd" kindref="member">coolStepActiveValue</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a693ca064728e4265573c6b98d7b4c233" kindref="member">coolStepInactiveValue</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a97478218222620d97069f5b8d39b889d" kindref="member">coolStepThreshold</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a8b481e7baf8df21a771ab717ce45609a" kindref="member">standStillCurrentScale</ref><sp/><sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1ae2cc3dd66277a812441cb5f29a9aef8d" kindref="member">standStillTimeout</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC2660__Constants_8h_1a1e17acee83fb2696e23b6e1150071512" kindref="member">TMC2660_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a29170c75e13797e9e5ee85193b0bcdae" kindref="member">registerAccess</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="TMC2660_8c_1af1ee2a92d9747f12f87782a3f90ec40e" kindref="member">tmc2660_defaultRegisterAccess</ref>[i];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1a79abf0850268697dea9fa402c11d2da7" kindref="member">registerResetState</ref>[i]<sp/><sp/>=<sp/><ref refid="TMC2660_8c_1a07ad397e63d3d24a4a77ab1c80445bc6" kindref="member">tmc2660_defaultRegisterResetState</ref>[i];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently<sp/>unused,<sp/>we<sp/>write<sp/>the<sp/>whole<sp/>configuration<sp/>as<sp/>part<sp/>of<sp/>the<sp/>reset/restore<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC2660_8c_1a6e7f7610d4386d0e813f894f71e183ce" kindref="member">tmc2660_writeConfiguration</ref>(<ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref><sp/>*tmc2660,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*TMC2660_config)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>one<sp/>writeable<sp/>register<sp/>at<sp/>a<sp/>time<sp/>-<sp/>backwards<sp/>to<sp/>hit<sp/>DRVCONF<sp/>before<sp/>DRVCTRL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Macros_8h_1a86d500a34c624c2cae56bc25a31b12f3" kindref="member">UNUSED</ref>(tmc2660);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Macros_8h_1a86d500a34c624c2cae56bc25a31b12f3" kindref="member">UNUSED</ref>(TMC2660_config);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>*ptr<sp/>=<sp/>&amp;TMC2660_config-&gt;configIndex;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>int32_t<sp/>*settings<sp/>=<sp/>(TMC2660_config-&gt;state<sp/>==<sp/>CONFIG_RESTORE)<sp/>?<sp/>TMC2660_config-&gt;shadowRegister<sp/>:<sp/>tmc2660-&gt;registerResetState;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while((*ptr<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>!IS_WRITEABLE(tmc2660-&gt;registerAccess[*ptr]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(*ptr)--;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(*ptr<sp/>&gt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tmc2660_writeInt(0,<sp/>*ptr,<sp/>settings[*ptr]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(*ptr)--;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TMC2660_config-&gt;state<sp/>=<sp/>CONFIG_READY;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC2660_8c_1aed99dea7f4b5d5fcdb119177f462e4ad" kindref="member">tmc2660_periodicJob</ref>(uint8_t<sp/>motor,<sp/>uint32_t<sp/>tick,<sp/><ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref><sp/>*tmc2660,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*TMC2660_config)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Macros_8h_1a86d500a34c624c2cae56bc25a31b12f3" kindref="member">UNUSED</ref>(motor);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tick<sp/>-<sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1af3f6938855ce71ba886a8d01c64440e3" kindref="member">oldTick</ref><sp/>&gt;=<sp/>10)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a748a47a37a41b00ffe5422967651ced0" kindref="member">standStillCurrentLimitation</ref>(tmc2660);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc2660-&gt;<ref refid="structTMC2660TypeDef_1af3f6938855ce71ba886a8d01c64440e3" kindref="member">oldTick</ref><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc2660-&gt;<ref refid="structTMC2660TypeDef_1af2f57cef62b01c0463cfbd8dde328562" kindref="member">continuousModeEnable</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>continuously<sp/>write<sp/>settings<sp/>to<sp/>chip<sp/>and<sp/>rotate<sp/>through<sp/>all<sp/>reply<sp/>types<sp/>to<sp/>keep<sp/>data<sp/>up<sp/>to<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a8afcc070e9b42b291c3b7726afaa753e" kindref="member">continousSync</ref>(TMC2660_config);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">uint8_t<sp/><ref refid="TMC2660_8c_1a032ad4e76423e3def4cce8d8aacc586f" kindref="member">tmc2660_reset</ref>(<ref refid="structTMC2660TypeDef" kindref="compound">TMC2660TypeDef</ref><sp/>*TMC2660,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*TMC2660_config)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Macros_8h_1a86d500a34c624c2cae56bc25a31b12f3" kindref="member">UNUSED</ref>(TMC2660_config);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1a60e677dd1b463ce6fce850b1cad80530" kindref="member">TMC2660_DRVCONF</ref>,<sp/><sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a79abf0850268697dea9fa402c11d2da7" kindref="member">registerResetState</ref>[<ref refid="TMC2660__Register_8h_1a60e677dd1b463ce6fce850b1cad80530" kindref="member">TMC2660_DRVCONF</ref>]);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1a241db19b6e28afbfb637a369b07f3e8d" kindref="member">TMC2660_DRVCTRL</ref>,<sp/><sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a79abf0850268697dea9fa402c11d2da7" kindref="member">registerResetState</ref>[<ref refid="TMC2660__Register_8h_1a241db19b6e28afbfb637a369b07f3e8d" kindref="member">TMC2660_DRVCTRL</ref>]);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1a68d02b6cce9078655b62e3988bf06d99" kindref="member">TMC2660_CHOPCONF</ref>,<sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a79abf0850268697dea9fa402c11d2da7" kindref="member">registerResetState</ref>[<ref refid="TMC2660__Register_8h_1a68d02b6cce9078655b62e3988bf06d99" kindref="member">TMC2660_CHOPCONF</ref>]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1a05085c9ea6228788c462a9cf4bf2df27" kindref="member">TMC2660_SMARTEN</ref>,<sp/><sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a79abf0850268697dea9fa402c11d2da7" kindref="member">registerResetState</ref>[<ref refid="TMC2660__Register_8h_1a05085c9ea6228788c462a9cf4bf2df27" kindref="member">TMC2660_SMARTEN</ref>]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1ad5aa65f835d9ad58da2f7db15784e573" kindref="member">TMC2660_SGCSCONF</ref>,<sp/>TMC2660-&gt;<ref refid="structTMC2660TypeDef_1a79abf0850268697dea9fa402c11d2da7" kindref="member">registerResetState</ref>[<ref refid="TMC2660__Register_8h_1ad5aa65f835d9ad58da2f7db15784e573" kindref="member">TMC2660_SGCSCONF</ref>]);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">uint8_t<sp/><ref refid="TMC2660_8c_1ae623b6ba7db3f9a00a72be201f57b23a" kindref="member">tmc2660_restore</ref>(<ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*TMC2660_config)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1a60e677dd1b463ce6fce850b1cad80530" kindref="member">TMC2660_DRVCONF</ref>,<sp/><sp/>TMC2660_config-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC2660__Register_8h_1a60e677dd1b463ce6fce850b1cad80530" kindref="member">TMC2660_DRVCONF</ref><sp/>|<sp/><ref refid="TMC2660__Constants_8h_1abb9cbb5f54a5e60e21f23b1592fba0f7" kindref="member">TMC2660_WRITE_BIT</ref>]);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1a241db19b6e28afbfb637a369b07f3e8d" kindref="member">TMC2660_DRVCTRL</ref>,<sp/><sp/>TMC2660_config-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC2660__Register_8h_1a241db19b6e28afbfb637a369b07f3e8d" kindref="member">TMC2660_DRVCTRL</ref><sp/>|<sp/><ref refid="TMC2660__Constants_8h_1abb9cbb5f54a5e60e21f23b1592fba0f7" kindref="member">TMC2660_WRITE_BIT</ref>]);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1a68d02b6cce9078655b62e3988bf06d99" kindref="member">TMC2660_CHOPCONF</ref>,<sp/>TMC2660_config-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC2660__Register_8h_1a68d02b6cce9078655b62e3988bf06d99" kindref="member">TMC2660_CHOPCONF</ref><sp/>|<sp/><ref refid="TMC2660__Constants_8h_1abb9cbb5f54a5e60e21f23b1592fba0f7" kindref="member">TMC2660_WRITE_BIT</ref>]);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1a05085c9ea6228788c462a9cf4bf2df27" kindref="member">TMC2660_SMARTEN</ref>,<sp/><sp/>TMC2660_config-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC2660__Register_8h_1a05085c9ea6228788c462a9cf4bf2df27" kindref="member">TMC2660_SMARTEN</ref><sp/>|<sp/><ref refid="TMC2660__Constants_8h_1abb9cbb5f54a5e60e21f23b1592fba0f7" kindref="member">TMC2660_WRITE_BIT</ref>]);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC2660_8c_1a316671eb5608b972f27bae031dd527d6" kindref="member">tmc2660_writeInt</ref>(0,<sp/><ref refid="TMC2660__Register_8h_1ad5aa65f835d9ad58da2f7db15784e573" kindref="member">TMC2660_SGCSCONF</ref>,<sp/>TMC2660_config-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC2660__Register_8h_1ad5aa65f835d9ad58da2f7db15784e573" kindref="member">TMC2660_SGCSCONF</ref><sp/>|<sp/><ref refid="TMC2660__Constants_8h_1abb9cbb5f54a5e60e21f23b1592fba0f7" kindref="member">TMC2660_WRITE_BIT</ref>]);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC2660/TMC2660.c"/>
  </compounddef>
</doxygen>
