<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC4331_8c" kind="file" language="C++">
    <compoundname>TMC4331.c</compoundname>
    <includes refid="TMC4331_8h" local="yes">TMC4331.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC4331.c</label>
        <link refid="TMC4331_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC4331.h</label>
        <link refid="TMC4331_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC4331_Constants.h</label>
        <link refid="TMC4331__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TMC4331_Fields.h</label>
        <link refid="TMC4331__Fields_8h"/>
      </node>
      <node id="15">
        <label>TMC4331_Register.h</label>
        <link refid="TMC4331__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC4331_8c_1a02744e521722b8acb3c1f5acdc6d6fc9" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_readWriteArray</definition>
        <argsstring>(uint8_t channel, uint8_t *data, size_t length)</argsstring>
        <name>tmc4331_readWriteArray</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="15" column="13" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" declline="15" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1ab94fce262f88fbe9aa89f9a17d1c3850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_writeDatagram</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)</argsstring>
        <name>tmc4331_writeDatagram</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="19" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="19" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a9a96795aa6ad1fe39fa7061393883778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_writeInt</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, uint8_t address, int32_t value)</argsstring>
        <name>tmc4331_writeInt</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="36" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a126323827c23d3e01b008ace494d4eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc4331_readInt</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, uint8_t address)</argsstring>
        <name>tmc4331_readInt</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="41" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="41" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a8798414dc5c163d06f25b869ed4389c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_readWriteCover</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, uint8_t *data, size_t length)</argsstring>
        <name>tmc4331_readWriteCover</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="65" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="65" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a9924448864f0bae46f0907ac7dcfb4cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_init</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, uint8_t channel, ConfigurationTypeDef *config, const int32_t *registerResetState)</argsstring>
        <name>tmc4331_init</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="122" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="122" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1ac5edc0b37813aabf7d4623d863613279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc4331_reset</definition>
        <argsstring>(TMC4331TypeDef *tmc4331)</argsstring>
        <name>tmc4331_reset</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="142" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="142" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a4cdea621288bfb23d70c0c97f8ca2004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc4331_restore</definition>
        <argsstring>(TMC4331TypeDef *tmc4331)</argsstring>
        <name>tmc4331_restore</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="159" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="159" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a98ce034624852617581375c084a269e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_setRegisterResetState</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, const int32_t *resetState)</argsstring>
        <name>tmc4331_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="170" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="170" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a5eb30a89d3cfe6ba56d12565da7fcd56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_setCallback</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, tmc4331_callback callback)</argsstring>
        <name>tmc4331_setCallback</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type><ref refid="TMC4331_8h_1acd81769031e0617a61ba1c66c64a44d9" kindref="member">tmc4331_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="177" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a8a28b5567c67c8d7f1ff0fbcca700e77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tmc4331_writeConfiguration</definition>
        <argsstring>(TMC4331TypeDef *tmc4331)</argsstring>
        <name>tmc4331_writeConfiguration</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="182" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="182" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1af6d322045bf95251f97ad30f9b8ae40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_periodicJob</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, uint32_t tick)</argsstring>
        <name>tmc4331_periodicJob</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="217" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="217" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1af63ed89b0da5b31455bc3fd1f0e0bd66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_rotate</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, int32_t velocity)</argsstring>
        <name>tmc4331_rotate</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="231" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="231" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a8d63191bfa17e8c278712af8715f59ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_right</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, int32_t velocity)</argsstring>
        <name>tmc4331_right</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="239" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a53a7363f1c46c4cf8a92c0fc959d1380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_left</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, int32_t velocity)</argsstring>
        <name>tmc4331_left</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="244" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a53c78b8e047686a4d019281b37f5c872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_stop</definition>
        <argsstring>(TMC4331TypeDef *tmc4331)</argsstring>
        <name>tmc4331_stop</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="249" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a7d52a2f08818e00ae7871c26d63f07cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_moveTo</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc4331_moveTo</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="254" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="254" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1a36abf46da02d043635cdf9594ae75f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4331_moveBy</definition>
        <argsstring>(TMC4331TypeDef *tmc4331, int32_t *ticks, uint32_t velocityMax)</argsstring>
        <name>tmc4331_moveBy</name>
        <param>
          <type><ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref> *</type>
          <declname>tmc4331</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="265" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="265" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="TMC4331_8c_1adf0cd826a2de0388aafaca87619b6a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc4331_discardVelocityDecimals</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>tmc4331_discardVelocityDecimals</name>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" line="273" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c" bodystart="273" bodyend="280"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC4331_8h" kindref="compound">TMC4331.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=&gt;<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Send<sp/>[length]<sp/>bytes<sp/>stored<sp/>in<sp/>the<sp/>[data]<sp/>array<sp/>over<sp/>SPI<sp/>and<sp/>overwrite<sp/>[data]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>replies.<sp/>data[0]<sp/>is<sp/>the<sp/>first<sp/>byte<sp/>sent<sp/>and<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a02744e521722b8acb3c1f5acdc6d6fc9" kindref="member">tmc4331_readWriteArray</ref>(uint8_t<sp/>channel,<sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>(x1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(x2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(x3<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>x4<sp/>to<sp/>the<sp/>given<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1ab94fce262f88fbe9aa89f9a17d1c3850" kindref="member">tmc4331_writeDatagram</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5]<sp/>=<sp/>{<sp/>address<sp/>|<sp/><ref refid="TMC4331__Constants_8h_1aa01e9475c39d96d3954aefa1255f299b" kindref="member">TMC4331_WRITE_BIT</ref>,<sp/>x1,<sp/>x2,<sp/>x3,<sp/>x4<sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a02744e521722b8acb3c1f5acdc6d6fc9" kindref="member">tmc4331_readWriteArray</ref>(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1a1ca5f8ff361a28d170f6d2d1cb87fc3d" kindref="member">status</ref><sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((uint32_t)x1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)x2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(x3<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>x4;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>the<sp/>shadow<sp/>register<sp/>and<sp/>mark<sp/>the<sp/>register<sp/>dirty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aaf5223f27e9d35d314e5833fbfe70bf0" kindref="member">registerAccess</ref>[address]<sp/>|=<sp/><ref refid="RegisterAccess_8h_1ab7bf3c3ea0569faa301549892d541c37" kindref="member">TMC_ACCESS_DIRTY</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a9a96795aa6ad1fe39fa7061393883778" kindref="member">tmc4331_writeInt</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1ab94fce262f88fbe9aa89f9a17d1c3850" kindref="member">tmc4331_writeDatagram</ref>(tmc4331,<sp/>address,<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>3),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>2),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>1),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>0));</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">int32_t<sp/><ref refid="TMC4331_8c_1a126323827c23d3e01b008ace494d4eb2" kindref="member">tmc4331_readInt</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>uint8_t<sp/>address)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="RegisterAccess_8h_1af08f0d12a2110808e943d969103914a8" kindref="member">TMC_IS_READABLE</ref>(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aaf5223f27e9d35d314e5833fbfe70bf0" kindref="member">registerAccess</ref>[address]))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a02744e521722b8acb3c1f5acdc6d6fc9" kindref="member">tmc4331_readWriteArray</ref>(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a02744e521722b8acb3c1f5acdc6d6fc9" kindref="member">tmc4331_readWriteArray</ref>(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1a1ca5f8ff361a28d170f6d2d1cb87fc3d" kindref="member">status</ref><sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((uint32_t)data[1]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)data[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[4];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Send<sp/>[length]<sp/>bytes<sp/>stored<sp/>in<sp/>the<sp/>[data]<sp/>array<sp/>to<sp/>a<sp/>driver<sp/>attached<sp/>to<sp/>the<sp/>TMC4331</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>overwrite<sp/>[data]<sp/>with<sp/>the<sp/>replies.<sp/>data[0]<sp/>is<sp/>the<sp/>first<sp/>byte<sp/>sent<sp/>and<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a8798414dc5c163d06f25b869ed4389c4" kindref="member">tmc4331_readWriteCover</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffering<sp/>old<sp/>values<sp/>to<sp/>not<sp/>interrupt<sp/>manual<sp/>covering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>old_high<sp/>=<sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC4331__Register_8h_1a93931a3a05b9bed181fd96d5623fadd4" kindref="member">TMC4331_COVER_HIGH_WR</ref>];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>old_low<sp/>=<sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC4331__Register_8h_1a4758a956c7f1dd68b35934b42c118d85" kindref="member">TMC4331_COVER_LOW_WR</ref>];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>datagram<sp/>length<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>==<sp/>0<sp/>||<sp/>length<sp/>&gt;<sp/>8)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bytes[8]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tmp;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>data<sp/>into<sp/>buffer<sp/>of<sp/>maximum<sp/>cover<sp/>datagram<sp/>length<sp/>(8<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[i]<sp/>=<sp/>data[length-i-1];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>datagram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1ab94fce262f88fbe9aa89f9a17d1c3850" kindref="member">tmc4331_writeDatagram</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1a93931a3a05b9bed181fd96d5623fadd4" kindref="member">TMC4331_COVER_HIGH_WR</ref>,<sp/>bytes[7],<sp/>bytes[6],<sp/>bytes[5],<sp/>bytes[4]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1ab94fce262f88fbe9aa89f9a17d1c3850" kindref="member">tmc4331_writeDatagram</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1a4758a956c7f1dd68b35934b42c118d85" kindref="member">TMC4331_COVER_LOW_WR</ref>,<sp/>bytes[3],<sp/>bytes[2],<sp/>bytes[1],<sp/>bytes[0]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>datagram<sp/>completion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>CHECK<sp/>3:<sp/>Get<sp/>the<sp/>waiting<sp/>for<sp/>cover<sp/>completion<sp/>done<sp/>properly<sp/>(LH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>i++)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="Macros_8h_1a17941fdfe190c9268d99642ae9b101ca" kindref="member">ACCESS_ONCE</ref>(i);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="TMC4331_8c_1a126323827c23d3e01b008ace494d4eb2" kindref="member">tmc4331_readInt</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1a24529f6cfd01064bc26fb020530315f1" kindref="member">TMC4331_COVER_DRV_HIGH_RD</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[4]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[5]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[6]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[7]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>3);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="TMC4331_8c_1a126323827c23d3e01b008ace494d4eb2" kindref="member">tmc4331_readInt</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1ada7eefdb9c6f6e213f61fa87bb763359" kindref="member">TMC4331_COVER_DRV_LOW_RD</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[0]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[1]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[2]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>2);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[3]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>3);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>reply<sp/>to<sp/>the<sp/>data<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[length-i-1]<sp/>=<sp/>bytes[i];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rewriting<sp/>old<sp/>values<sp/>to<sp/>prevent<sp/>interrupting<sp/>manual<sp/>covering.<sp/>Imitating<sp/>unchanged<sp/>values<sp/>and<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a9a96795aa6ad1fe39fa7061393883778" kindref="member">tmc4331_writeInt</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1a93931a3a05b9bed181fd96d5623fadd4" kindref="member">TMC4331_COVER_HIGH_WR</ref>,<sp/>old_high);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC4331__Register_8h_1a4758a956c7f1dd68b35934b42c118d85" kindref="member">TMC4331_COVER_LOW_WR</ref>]<sp/>=<sp/>old_low;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provide<sp/>the<sp/>init<sp/>function<sp/>with<sp/>a<sp/>channel<sp/>index<sp/>(sent<sp/>back<sp/>in<sp/>the<sp/>SPI<sp/>callback),<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>ConfigurationTypeDef<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>int32_t<sp/>array<sp/>(size<sp/>128)<sp/>holding<sp/>the<sp/>reset<sp/>values<sp/>that<sp/>shall<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a9924448864f0bae46f0907ac7dcfb4cc" kindref="member">tmc4331_init</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1ab9916d8ca4ed29fafa7ea537e62402a7" kindref="member">velocity</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1af6dfab7844b0afa22702be90d9e1d2d0" kindref="member">oldTick</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1ade2f329e7549bc0c3bfc44b52938024a" kindref="member">oldX</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref><sp/><sp/><sp/><sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC4331__Constants_8h_1a783bf3156214d963197e62b726cf5187" kindref="member">TMC4331_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aaf5223f27e9d35d314e5833fbfe70bf0" kindref="member">registerAccess</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="TMC4331_8h_1ab6ed087f2298f4399bd7b43d787bef42" kindref="member">tmc4331_defaultRegisterAccess</ref>[i];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1a438f1ba53d328498ef2a886afe00fa68" kindref="member">registerResetState</ref>[i]<sp/><sp/>=<sp/>registerResetState[i];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">uint8_t<sp/><ref refid="TMC4331_8c_1ac5edc0b37813aabf7d4623d863613279" kindref="member">tmc4331_reset</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>dirty<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC4331__Constants_8h_1a783bf3156214d963197e62b726cf5187" kindref="member">TMC4331_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aaf5223f27e9d35d314e5833fbfe70bf0" kindref="member">registerAccess</ref>[i]<sp/>&amp;=<sp/>~<ref refid="RegisterAccess_8h_1ab7bf3c3ea0569faa301549892d541c37" kindref="member">TMC_ACCESS_DIRTY</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837faf4b7eabf7d198b2f9b47d8c7a36c7d0f" kindref="member">CONFIG_RESET</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">uint8_t<sp/><ref refid="TMC4331_8c_1a4cdea621288bfb23d70c0c97f8ca2004" kindref="member">tmc4331_restore</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a98ce034624852617581375c084a269e3" kindref="member">tmc4331_setRegisterResetState</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC4331__Constants_8h_1a783bf3156214d963197e62b726cf5187" kindref="member">TMC4331_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1a438f1ba53d328498ef2a886afe00fa68" kindref="member">registerResetState</ref>[i]<sp/>=<sp/>resetState[i];</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a5eb30a89d3cfe6ba56d12565da7fcd56" kindref="member">tmc4331_setCallback</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/><ref refid="TMC4331_8h_1acd81769031e0617a61ba1c66c64a44d9" kindref="member">tmc4331_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/>=<sp/>(<ref refid="Config_8h_1a4f94914f5c7a97833e65a3d10eedfdee" kindref="member">tmc_callback_config</ref>)<sp/>callback;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a8a28b5567c67c8d7f1ff0fbcca700e77" kindref="member">tmc4331_writeConfiguration</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*ptr<sp/>=<sp/>&amp;tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*settings;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>==<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>&amp;tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[0];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>restorable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC4331__Constants_8h_1a783bf3156214d963197e62b726cf5187" kindref="member">TMC4331_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a70866cbed8c69a330b4aebc9a1e8287e" kindref="member">TMC_IS_RESTORABLE</ref>(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aaf5223f27e9d35d314e5833fbfe70bf0" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>&amp;tmc4331-&gt;<ref refid="structTMC4331TypeDef_1a438f1ba53d328498ef2a886afe00fa68" kindref="member">registerResetState</ref>[0];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>resettable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC4331__Constants_8h_1a783bf3156214d963197e62b726cf5187" kindref="member">TMC4331_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a08cbb9fb1db72595e25b38131ee3dba0" kindref="member">TMC_IS_RESETTABLE</ref>(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aaf5223f27e9d35d314e5833fbfe70bf0" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>&lt;<sp/><ref refid="TMC4331__Constants_8h_1a783bf3156214d963197e62b726cf5187" kindref="member">TMC4331_REGISTER_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a9a96795aa6ad1fe39fa7061393883778" kindref="member">tmc4331_writeInt</ref>(tmc4331,<sp/>*ptr,<sp/>settings[*ptr]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="TMC4331_8h_1acd81769031e0617a61ba1c66c64a44d9" kindref="member">tmc4331_callback</ref>)tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)(tmc4331,<sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1af6d322045bf95251f97ad30f9b8ae40b" kindref="member">tmc4331_periodicJob</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4331-&gt;<ref refid="structTMC4331TypeDef_1aadbccc0d6d21bda886674beac04d20e1" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a8a28b5567c67c8d7f1ff0fbcca700e77" kindref="member">tmc4331_writeConfiguration</ref>(tmc4331);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tick<sp/>-<sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1af6dfab7844b0afa22702be90d9e1d2d0" kindref="member">oldTick</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4331-&gt;<ref refid="structTMC4331TypeDef_1af6dfab7844b0afa22702be90d9e1d2d0" kindref="member">oldTick</ref><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1af63ed89b0da5b31455bc3fd1f0e0bd66" kindref="member">tmc4331_rotate</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>Position<sp/>Mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8h_1aea45277da4d7e6d7599b47ecc102acce" kindref="member">TMC4331_FIELD_WRITE</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1a2d48d7e666167481fd5eaa64cad16727" kindref="member">TMC4331_RAMPMODE</ref>,<sp/><ref refid="TMC4331__Fields_8h_1a4a1b5321d2c97434a236d2feca23f59f" kindref="member">TMC4331_OPERATION_MODE_MASK</ref>,<sp/><ref refid="TMC4331__Fields_8h_1a7479592348ae3152bec354ad2ae4fab3" kindref="member">TMC4331_OPERATION_MODE_SHIFT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a9a96795aa6ad1fe39fa7061393883778" kindref="member">tmc4331_writeInt</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1add2cde451878d3ea9fda8c1a0c002aab" kindref="member">TMC4331_VMAX</ref>,<sp/><ref refid="TMC4331_8c_1adf0cd826a2de0388aafaca87619b6a26" kindref="member">tmc4331_discardVelocityDecimals</ref>(velocity));</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a8d63191bfa17e8c278712af8715f59ab" kindref="member">tmc4331_right</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1af63ed89b0da5b31455bc3fd1f0e0bd66" kindref="member">tmc4331_rotate</ref>(tmc4331,<sp/>velocity);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a53a7363f1c46c4cf8a92c0fc959d1380" kindref="member">tmc4331_left</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1af63ed89b0da5b31455bc3fd1f0e0bd66" kindref="member">tmc4331_rotate</ref>(tmc4331,<sp/>-velocity);</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a53c78b8e047686a4d019281b37f5c872" kindref="member">tmc4331_stop</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1af63ed89b0da5b31455bc3fd1f0e0bd66" kindref="member">tmc4331_rotate</ref>(tmc4331,<sp/>0);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a7d52a2f08818e00ae7871c26d63f07cf" kindref="member">tmc4331_moveTo</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>Position<sp/>Mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8h_1aea45277da4d7e6d7599b47ecc102acce" kindref="member">TMC4331_FIELD_WRITE</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1a2d48d7e666167481fd5eaa64cad16727" kindref="member">TMC4331_RAMPMODE</ref>,<sp/><ref refid="TMC4331__Fields_8h_1a4a1b5321d2c97434a236d2feca23f59f" kindref="member">TMC4331_OPERATION_MODE_MASK</ref>,<sp/><ref refid="TMC4331__Fields_8h_1a7479592348ae3152bec354ad2ae4fab3" kindref="member">TMC4331_OPERATION_MODE_SHIFT</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a9a96795aa6ad1fe39fa7061393883778" kindref="member">tmc4331_writeInt</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1add2cde451878d3ea9fda8c1a0c002aab" kindref="member">TMC4331_VMAX</ref>,<sp/><ref refid="TMC4331_8c_1adf0cd826a2de0388aafaca87619b6a26" kindref="member">tmc4331_discardVelocityDecimals</ref>(velocityMax));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a9a96795aa6ad1fe39fa7061393883778" kindref="member">tmc4331_writeInt</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1a52b1e158b05998b59e1eabb348785583" kindref="member">TMC4331_X_TARGET</ref>,<sp/>position);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>function<sp/>will<sp/>write<sp/>the<sp/>absolute<sp/>target<sp/>position<sp/>to<sp/>*ticks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4331_8c_1a36abf46da02d043635cdf9594ae75f76" kindref="member">tmc4331_moveBy</ref>(<ref refid="structTMC4331TypeDef" kindref="compound">TMC4331TypeDef</ref><sp/>*tmc4331,<sp/>int32_t<sp/>*ticks,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>actual<sp/>position<sp/>and<sp/>add<sp/>numbers<sp/>of<sp/>ticks<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>*ticks<sp/>+=<sp/><ref refid="TMC4331_8c_1a126323827c23d3e01b008ace494d4eb2" kindref="member">tmc4331_readInt</ref>(tmc4331,<sp/><ref refid="TMC4331__Register_8h_1a84a8b3411699750a2b795385778edb35" kindref="member">TMC4331_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4331_8c_1a7d52a2f08818e00ae7871c26d63f07cf" kindref="member">tmc4331_moveTo</ref>(tmc4331,<sp/>*ticks,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">int32_t<sp/><ref refid="TMC4331_8c_1adf0cd826a2de0388aafaca87619b6a26" kindref="member">tmc4331_discardVelocityDecimals</ref>(int32_t<sp/>value)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(value)<sp/>&gt;<sp/>8000000)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(value<sp/>&lt;<sp/>0)<sp/>?<sp/>-8000000<sp/>:<sp/>8000000;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4331/TMC4331.c"/>
  </compounddef>
</doxygen>
