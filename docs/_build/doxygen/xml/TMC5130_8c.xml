<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC5130_8c" kind="file" language="C++">
    <compoundname>TMC5130.c</compoundname>
    <includes refid="TMC5130_8h" local="yes">TMC5130.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC5130.c</label>
        <link refid="TMC5130_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC5130.h</label>
        <link refid="TMC5130_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC5130_Constants.h</label>
        <link refid="TMC5130__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TMC5130_Fields.h</label>
        <link refid="TMC5130__Fields_8h"/>
      </node>
      <node id="15">
        <label>TMC5130_Register.h</label>
        <link refid="TMC5130__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC5130_8c_1aa97eae9ef6728a0677dde8f05d3b7b53" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_readWriteArray</definition>
        <argsstring>(uint8_t channel, uint8_t *data, size_t length)</argsstring>
        <name>tmc5130_readWriteArray</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="15" column="13" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" declline="15" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a9ba96208adfd333de7542a9b7846c451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_writeDatagram</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)</argsstring>
        <name>tmc5130_writeDatagram</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="19" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="19" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_writeInt</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint8_t address, int32_t value)</argsstring>
        <name>tmc5130_writeInt</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="33" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1ac99f647cd8870440329ace7af28ebc14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc5130_readInt</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint8_t address)</argsstring>
        <name>tmc5130_readInt</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="39" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="39" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a39c0c11d1bc8cdd1c373edd2c98c897a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_init</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint8_t channel, ConfigurationTypeDef *config, const int32_t *registerResetState)</argsstring>
        <name>tmc5130_init</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="64" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="64" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a0910aa17a75d65c02519066335a4b440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_fillShadowRegisters</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>tmc5130_fillShadowRegisters</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="87" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="87" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1aabc19a985cd58c10a6b821f15e53f622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5130_reset</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>tmc5130_reset</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="120" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="120" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1acdd4c2d1494333ba4b5874026ccf7605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5130_restore</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>tmc5130_restore</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="141" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="141" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1aa682aa96b9602e3d419f59d912827fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_setRegisterResetState</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, const int32_t *resetState)</argsstring>
        <name>tmc5130_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="153" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="153" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a09fc9fb597db2e86f80810a213479ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_setCallback</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, tmc5130_callback callback)</argsstring>
        <name>tmc5130_setCallback</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type><ref refid="TMC5130_8h_1a4de991a0740398639d1b4f653df327cf" kindref="member">tmc5130_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="163" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a7241840baa25ad640ef4e9c23c352cf8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writeConfiguration</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>writeConfiguration</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="169" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="169" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1ae5fca8a25ad8b49acd75fb010d20fc00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_periodicJob</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint32_t tick)</argsstring>
        <name>tmc5130_periodicJob</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="210" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="210" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1ad15de21c64ffdee805034004df610776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_rotate</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, int32_t velocity)</argsstring>
        <name>tmc5130_rotate</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="234" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="234" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a2c1dd9b110b6d79661e3700da535970a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_right</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint32_t velocity)</argsstring>
        <name>tmc5130_right</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="243" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1af9dda9b743cea54300e0b11bb1402745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_left</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, uint32_t velocity)</argsstring>
        <name>tmc5130_left</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="249" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a674f00b7208b811e3db26ec39a855a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_stop</definition>
        <argsstring>(TMC5130TypeDef *tmc5130)</argsstring>
        <name>tmc5130_stop</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="255" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a48943251dbb307aec0463019e98b1ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_moveTo</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc5130_moveTo</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="261" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="261" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="TMC5130_8c_1a6e4bc1a494b05606452b41d04d4d632d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5130_moveBy</definition>
        <argsstring>(TMC5130TypeDef *tmc5130, int32_t *ticks, uint32_t velocityMax)</argsstring>
        <name>tmc5130_moveBy</name>
        <param>
          <type><ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref> *</type>
          <declname>tmc5130</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" line="274" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c" bodystart="274" bodyend="280"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5130_8h" kindref="compound">TMC5130.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=&gt;<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Send<sp/>[length]<sp/>bytes<sp/>stored<sp/>in<sp/>the<sp/>[data]<sp/>array<sp/>over<sp/>SPI<sp/>and<sp/>overwrite<sp/>[data]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>reply.<sp/>The<sp/>first<sp/>byte<sp/>sent/received<sp/>is<sp/>data[0].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1aa97eae9ef6728a0677dde8f05d3b7b53" kindref="member">tmc5130_readWriteArray</ref>(uint8_t<sp/>channel,<sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>(x1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(x2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(x3<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>x4<sp/>to<sp/>the<sp/>given<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a9ba96208adfd333de7542a9b7846c451" kindref="member">tmc5130_writeDatagram</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5]<sp/>=<sp/>{<sp/>address<sp/>|<sp/><ref refid="TMC5130__Constants_8h_1a31cd72f3866a37a4a10e434ee2d160d0" kindref="member">TMC5130_WRITE_BIT</ref>,<sp/>x1,<sp/>x2,<sp/>x3,<sp/>x4<sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1aa97eae9ef6728a0677dde8f05d3b7b53" kindref="member">tmc5130_readWriteArray</ref>(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value<sp/>=<sp/>((uint32_t)x1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)x2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(x3<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>x4;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>the<sp/>shadow<sp/>register<sp/>and<sp/>mark<sp/>the<sp/>register<sp/>dirty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1aa50653b7380927f7bf6a843633bbcb1c" kindref="member">registerAccess</ref>[address]<sp/>|=<sp/><ref refid="RegisterAccess_8h_1ab7bf3c3ea0569faa301549892d541c37" kindref="member">TMC_ACCESS_DIRTY</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Write<sp/>an<sp/>integer<sp/>to<sp/>the<sp/>given<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a9ba96208adfd333de7542a9b7846c451" kindref="member">tmc5130_writeDatagram</ref>(tmc5130,<sp/>address,<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>3),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>2),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>1),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>0));</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>an<sp/>integer<sp/>from<sp/>the<sp/>given<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">int32_t<sp/><ref refid="TMC5130_8c_1ac99f647cd8870440329ace7af28ebc14" kindref="member">tmc5130_readInt</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint8_t<sp/>address)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>not<sp/>readable<sp/>-&gt;<sp/>shadow<sp/>register<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="RegisterAccess_8h_1af08f0d12a2110808e943d969103914a8" kindref="member">TMC_IS_READABLE</ref>(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1aa50653b7380927f7bf6a843633bbcb1c" kindref="member">registerAccess</ref>[address]))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1aa97eae9ef6728a0677dde8f05d3b7b53" kindref="member">tmc5130_readWriteArray</ref>(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1aa97eae9ef6728a0677dde8f05d3b7b53" kindref="member">tmc5130_readWriteArray</ref>(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)data[1]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)data[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[4];</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>a<sp/>TMC5130<sp/>IC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>requires:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>tmc5130:<sp/>The<sp/>pointer<sp/>to<sp/>a<sp/>TMC5130TypeDef<sp/>struct,<sp/>which<sp/>represents<sp/>one<sp/>IC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>channel:<sp/>The<sp/>channel<sp/>index,<sp/>which<sp/>will<sp/>be<sp/>sent<sp/>back<sp/>in<sp/>the<sp/>SPI<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>config:<sp/>A<sp/>ConfigurationTypeDef<sp/>struct,<sp/>which<sp/>will<sp/>be<sp/>used<sp/>by<sp/>the<sp/>IC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>registerResetState:<sp/>An<sp/>int32_t<sp/>array<sp/>with<sp/>128<sp/>elements.<sp/>This<sp/>holds<sp/>the<sp/>values<sp/>to<sp/>be<sp/>used<sp/>for<sp/>a<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a39c0c11d1bc8cdd1c373edd2c98c897a" kindref="member">tmc5130_init</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a3b6b6661a890521eb73e9ec203522fe4" kindref="member">velocity</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a42f604ce98731b0dffbac991c40266a2" kindref="member">oldTick</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a52cdb51ad01258c6a920df1a9954c5dd" kindref="member">oldX</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1aa50653b7380927f7bf6a843633bbcb1c" kindref="member">registerAccess</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="TMC5130_8h_1ae9551aaea5306e84799d6c63f1b3584a" kindref="member">tmc5130_defaultRegisterAccess</ref>[i];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a04d8a8b744d9785e6d91001a032984f9" kindref="member">registerResetState</ref>[i]<sp/><sp/>=<sp/>registerResetState[i];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>shadow<sp/>registers<sp/>of<sp/>hardware<sp/>preset<sp/>non-readable<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Only<sp/>needed<sp/>if<sp/>you<sp/>want<sp/>to<sp/>&apos;read&apos;<sp/>those<sp/>registers<sp/>e.g<sp/>to<sp/>display<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>TMCL<sp/>IDE<sp/>register<sp/>browser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a0910aa17a75d65c02519066335a4b440" kindref="member">tmc5130_fillShadowRegisters</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>have<sp/>constants<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" kindref="member">tmc5130_RegisterConstants</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>to<sp/>worry<sp/>about<sp/>hardware<sp/>preset,<sp/>write-only<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>not<sp/>yet<sp/>been<sp/>written<sp/>(no<sp/>dirty<sp/>bit)<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1aa50653b7380927f7bf6a843633bbcb1c" kindref="member">registerAccess</ref>[i]<sp/>!=<sp/><ref refid="RegisterAccess_8h_1a0a68eeac67d2149074f3f6191d60b80c" kindref="member">TMC_ACCESS_W_PRESET</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>constant<sp/>list<sp/>for<sp/>the<sp/>current<sp/>address.<sp/>With<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>being<sp/>sorted<sp/>in<sp/>ascended<sp/>order,<sp/>we<sp/>can<sp/>walk<sp/>through<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>the<sp/>entry<sp/>with<sp/>an<sp/>address<sp/>equal<sp/>or<sp/>greater<sp/>than<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/><ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" kindref="member">tmc5130_RegisterConstants</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" kindref="member">tmc5130_RegisterConstants</ref>[j].address<sp/>&lt;<sp/>i))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abort<sp/>when<sp/>we<sp/>reach<sp/>the<sp/>end<sp/>of<sp/>the<sp/>constant<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/><ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" kindref="member">tmc5130_RegisterConstants</ref>))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>an<sp/>entry<sp/>for<sp/>our<sp/>current<sp/>address,<sp/>write<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" kindref="member">tmc5130_RegisterConstants</ref>[j].address<sp/>==<sp/>i)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[i]<sp/>=<sp/><ref refid="TMC5130_8h_1ad5cab65d8b57cff105453da7f967a179" kindref="member">tmc5130_RegisterConstants</ref>[j].<ref refid="structTMCRegisterConstant_1a8ee397638840f4461cd9b559fde7fc30" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>TMC5130.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">uint8_t<sp/><ref refid="TMC5130_8c_1aabc19a985cd58c10a6b821f15e53f622" kindref="member">tmc5130_reset</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>dirty<sp/>bits<sp/>and<sp/>wipe<sp/>the<sp/>shadow<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1aa50653b7380927f7bf6a843633bbcb1c" kindref="member">registerAccess</ref>[i]<sp/>&amp;=<sp/>~TMC_ACCESS_DIRTY;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837faf4b7eabf7d198b2f9b47d8c7a36c7d0f" kindref="member">CONFIG_RESET</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>TMC5130<sp/>to<sp/>the<sp/>state<sp/>stored<sp/>in<sp/>the<sp/>shadow<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>recover<sp/>the<sp/>IC<sp/>configuration<sp/>after<sp/>a<sp/>VM<sp/>power<sp/>loss.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">uint8_t<sp/><ref refid="TMC5130_8c_1acdd4c2d1494333ba4b5874026ccf7605" kindref="member">tmc5130_restore</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>values<sp/>the<sp/>IC<sp/>will<sp/>be<sp/>configured<sp/>with<sp/>when<sp/>performing<sp/>a<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1aa682aa96b9602e3d419f59d912827fcb" kindref="member">tmc5130_setRegisterResetState</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a04d8a8b744d9785e6d91001a032984f9" kindref="member">registerResetState</ref>[i]<sp/>=<sp/>resetState[i];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>a<sp/>function<sp/>to<sp/>be<sp/>called<sp/>after<sp/>completion<sp/>of<sp/>the<sp/>configuration<sp/>mechanism</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a09fc9fb597db2e86f80810a213479ac3" kindref="member">tmc5130_setCallback</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/><ref refid="TMC5130_8h_1a4de991a0740398639d1b4f653df327cf" kindref="member">tmc5130_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/>=<sp/>(<ref refid="Config_8h_1a4f94914f5c7a97833e65a3d10eedfdee" kindref="member">tmc_callback_config</ref>)<sp/>callback;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function:<sp/>Configure<sp/>the<sp/>next<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a7241840baa25ad640ef4e9c23c352cf8" kindref="member">writeConfiguration</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*ptr<sp/>=<sp/>&amp;tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*settings;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>==<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>restorable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a70866cbed8c69a330b4aebc9a1e8287e" kindref="member">TMC_IS_RESTORABLE</ref>(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1aa50653b7380927f7bf6a843633bbcb1c" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a04d8a8b744d9785e6d91001a032984f9" kindref="member">registerResetState</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>resettable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a08cbb9fb1db72595e25b38131ee3dba0" kindref="member">TMC_IS_RESETTABLE</ref>(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1aa50653b7380927f7bf6a843633bbcb1c" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*ptr<sp/>&lt;<sp/><ref refid="TMC5130__Constants_8h_1a2b9c9bf25180060c66f685e213021767" kindref="member">TMC5130_REGISTER_COUNT</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(tmc5130,<sp/>*ptr,<sp/>settings[*ptr]);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Finished<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="TMC5130_8h_1a4de991a0740398639d1b4f653df327cf" kindref="member">tmc5130_callback</ref>)tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)(tmc5130,<sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>this<sp/>periodically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1ae5fca8a25ad8b49acd75fb010d20fc00" kindref="member">tmc5130_periodicJob</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a369a5a42883c3f2f118d42d6e512c4cb" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a7241840baa25ad640ef4e9c23c352cf8" kindref="member">writeConfiguration</ref>(tmc5130);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>XActual;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tickDiff;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>velocity<sp/>v<sp/>=<sp/>dx/dt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tickDiff<sp/>=<sp/>tick<sp/>-<sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a42f604ce98731b0dffbac991c40266a2" kindref="member">oldTick</ref>)<sp/>&gt;=<sp/>5)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XActual<sp/>=<sp/><ref refid="TMC5130_8c_1ac99f647cd8870440329ace7af28ebc14" kindref="member">tmc5130_readInt</ref>(tmc5130,<sp/><ref refid="TMC5130__Register_8h_1a6a68dadfc8b2e36e4d078c1c57dc5489" kindref="member">TMC5130_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ToDo<sp/>CHECK<sp/>2:<sp/>API<sp/>Compatibility<sp/>-<sp/>write<sp/>alternative<sp/>algorithm<sp/>w/o<sp/>floating<sp/>point?<sp/>(LH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a3b6b6661a890521eb73e9ec203522fe4" kindref="member">velocity</ref><sp/>=<sp/>(uint32_t)<sp/>((<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>((XActual<sp/>-<sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a52cdb51ad01258c6a920df1a9954c5dd" kindref="member">oldX</ref>)<sp/>/<sp/>(<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>tickDiff)<sp/>*<sp/>(<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>1048.576);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a52cdb51ad01258c6a920df1a9954c5dd" kindref="member">oldX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>XActual;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5130-&gt;<ref refid="structTMC5130TypeDef_1a42f604ce98731b0dffbac991c40266a2" kindref="member">oldTick</ref><sp/><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate<sp/>with<sp/>a<sp/>given<sp/>velocity<sp/>(to<sp/>the<sp/>right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1ad15de21c64ffdee805034004df610776" kindref="member">tmc5130_rotate</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>absolute<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(tmc5130,<sp/><ref refid="TMC5130__Register_8h_1a394d085bfcb1e3f249167acd456fa81e" kindref="member">TMC5130_VMAX</ref>,<sp/>abs(velocity));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(tmc5130,<sp/><ref refid="TMC5130__Register_8h_1ae8080635ee327fdc0c923a27e7a70cb9" kindref="member">TMC5130_RAMPMODE</ref>,<sp/>(velocity<sp/>&gt;=<sp/>0)<sp/>?<sp/><ref refid="TMC5130__Constants_8h_1ab603eee4fdee09a6fad829af40b0eaa7" kindref="member">TMC5130_MODE_VELPOS</ref><sp/>:<sp/><ref refid="TMC5130__Constants_8h_1aea64e508b661c2528b271b33e434652f" kindref="member">TMC5130_MODE_VELNEG</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a2c1dd9b110b6d79661e3700da535970a" kindref="member">tmc5130_right</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1ad15de21c64ffdee805034004df610776" kindref="member">tmc5130_rotate</ref>(tmc5130,<sp/>velocity);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1af9dda9b743cea54300e0b11bb1402745" kindref="member">tmc5130_left</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>uint32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1ad15de21c64ffdee805034004df610776" kindref="member">tmc5130_rotate</ref>(tmc5130,<sp/>-velocity);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stop<sp/>moving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a674f00b7208b811e3db26ec39a855a19" kindref="member">tmc5130_stop</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1ad15de21c64ffdee805034004df610776" kindref="member">tmc5130_rotate</ref>(tmc5130,<sp/>0);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>a<sp/>specified<sp/>position<sp/>with<sp/>a<sp/>given<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a48943251dbb307aec0463019e98b1ecd" kindref="member">tmc5130_moveTo</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(tmc5130,<sp/><ref refid="TMC5130__Register_8h_1ae8080635ee327fdc0c923a27e7a70cb9" kindref="member">TMC5130_RAMPMODE</ref>,<sp/><ref refid="TMC5130__Constants_8h_1ab193557ca8f052ceea3b43c27623acb3" kindref="member">TMC5130_MODE_POSITION</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VMAX<sp/>also<sp/>holds<sp/>the<sp/>target<sp/>velocity<sp/>in<sp/>velocity<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-write<sp/>the<sp/>position<sp/>mode<sp/>maximum<sp/>velocity<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(tmc5130,<sp/><ref refid="TMC5130__Register_8h_1a394d085bfcb1e3f249167acd456fa81e" kindref="member">TMC5130_VMAX</ref>,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a0ff2ec79a9fd2ef4a5f482c3bfa811bf" kindref="member">tmc5130_writeInt</ref>(tmc5130,<sp/><ref refid="TMC5130__Register_8h_1a88fbebe614bd417d360195b0de600786" kindref="member">TMC5130_XTARGET</ref>,<sp/>position);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Move<sp/>by<sp/>a<sp/>given<sp/>amount<sp/>with<sp/>a<sp/>given<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>write<sp/>the<sp/>absolute<sp/>target<sp/>position<sp/>to<sp/>*ticks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5130_8c_1a6e4bc1a494b05606452b41d04d4d632d" kindref="member">tmc5130_moveBy</ref>(<ref refid="structTMC5130TypeDef" kindref="compound">TMC5130TypeDef</ref><sp/>*tmc5130,<sp/>int32_t<sp/>*ticks,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>actual<sp/>position<sp/>and<sp/>add<sp/>numbers<sp/>of<sp/>ticks<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>*ticks<sp/>+=<sp/><ref refid="TMC5130_8c_1ac99f647cd8870440329ace7af28ebc14" kindref="member">tmc5130_readInt</ref>(tmc5130,<sp/><ref refid="TMC5130__Register_8h_1a6a68dadfc8b2e36e4d078c1c57dc5489" kindref="member">TMC5130_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5130_8c_1a48943251dbb307aec0463019e98b1ecd" kindref="member">tmc5130_moveTo</ref>(tmc5130,<sp/>*ticks,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5130/TMC5130.c"/>
  </compounddef>
</doxygen>
