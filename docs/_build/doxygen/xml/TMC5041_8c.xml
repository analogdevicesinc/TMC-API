<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC5041_8c" kind="file" language="C++">
    <compoundname>TMC5041.c</compoundname>
    <includes refid="TMC5041_8h" local="yes">TMC5041.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC5041.c</label>
        <link refid="TMC5041_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC5041.h</label>
        <link refid="TMC5041_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC5041_Constants.h</label>
        <link refid="TMC5041__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TMC5041_Fields.h</label>
        <link refid="TMC5041__Fields_8h"/>
      </node>
      <node id="15">
        <label>TMC5041_Register.h</label>
        <link refid="TMC5041__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC5041_8c_1a8342c0f614fc16e80e588eb0230527f2" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5041_readWriteArray</definition>
        <argsstring>(uint8_t channel, uint8_t *data, size_t length)</argsstring>
        <name>tmc5041_readWriteArray</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="13" column="13" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" declline="13" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC5041_8c_1a47a29014b09ae8cbd0f449ca35166229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5041_writeDatagram</definition>
        <argsstring>(TMC5041TypeDef *tmc5041, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)</argsstring>
        <name>tmc5041_writeDatagram</name>
        <param>
          <type><ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref> *</type>
          <declname>tmc5041</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="16" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" bodystart="16" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="TMC5041_8c_1ac3fdc803c1ec40f9788d913ed83a1dc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5041_writeInt</definition>
        <argsstring>(TMC5041TypeDef *tmc5041, uint8_t address, int32_t value)</argsstring>
        <name>tmc5041_writeInt</name>
        <param>
          <type><ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref> *</type>
          <declname>tmc5041</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="29" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="TMC5041_8c_1a63638260c81e8b712864c8840011a531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc5041_readInt</definition>
        <argsstring>(TMC5041TypeDef *tmc5041, uint8_t address)</argsstring>
        <name>tmc5041_readInt</name>
        <param>
          <type><ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref> *</type>
          <declname>tmc5041</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="34" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" bodystart="34" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="TMC5041_8c_1a33b88b0ddebbb65682a8a8d01cb6050e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5041_init</definition>
        <argsstring>(TMC5041TypeDef *tmc5041, uint8_t channel, ConfigurationTypeDef *config, const int32_t *registerResetState)</argsstring>
        <name>tmc5041_init</name>
        <param>
          <type><ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref> *</type>
          <declname>tmc5041</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="53" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" bodystart="53" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="TMC5041_8c_1a3a5b091e46dd080626586d2144a79dec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tmc5041_writeConfiguration</definition>
        <argsstring>(TMC5041TypeDef *tmc5041)</argsstring>
        <name>tmc5041_writeConfiguration</name>
        <param>
          <type><ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref> *</type>
          <declname>tmc5041</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="77" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" bodystart="77" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="TMC5041_8c_1ad5e65ab5caf62751c86657eb259307c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5041_periodicJob</definition>
        <argsstring>(TMC5041TypeDef *tmc5041, uint32_t tick)</argsstring>
        <name>tmc5041_periodicJob</name>
        <param>
          <type><ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref> *</type>
          <declname>tmc5041</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="96" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" bodystart="96" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="TMC5041_8c_1ab658a37a5a1a94e29b8d1025d3eb7f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5041_reset</definition>
        <argsstring>(TMC5041TypeDef *tmc5041)</argsstring>
        <name>tmc5041_reset</name>
        <param>
          <type><ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref> *</type>
          <declname>tmc5041</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="121" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" bodystart="121" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="TMC5041_8c_1a0ed606c0342a75d404775f0e4164ed35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5041_restore</definition>
        <argsstring>(TMC5041TypeDef *tmc5041)</argsstring>
        <name>tmc5041_restore</name>
        <param>
          <type><ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref> *</type>
          <declname>tmc5041</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" line="132" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c" bodystart="132" bodyend="141"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5041_8h" kindref="compound">TMC5041.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=&gt;<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5041_8c_1a8342c0f614fc16e80e588eb0230527f2" kindref="member">tmc5041_readWriteArray</ref>(uint8_t<sp/>channel,<sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5041_8c_1a47a29014b09ae8cbd0f449ca35166229" kindref="member">tmc5041_writeDatagram</ref>(<ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref><sp/>*tmc5041,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5]<sp/>=<sp/>{address<sp/>|<sp/><ref refid="TMC5041__Constants_8h_1aaff65b9fb3a3dce7091772b1853a8932" kindref="member">TMC5041_WRITE_BIT</ref>,<sp/>x1,<sp/>x2,<sp/>x3,<sp/>x4<sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5041_8c_1a8342c0f614fc16e80e588eb0230527f2" kindref="member">tmc5041_readWriteArray</ref>(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value<sp/>=<sp/>((uint32_t)x1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)x2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(x3<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>x4;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>the<sp/>shadow<sp/>register<sp/>and<sp/>mark<sp/>the<sp/>register<sp/>dirty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a5e4c3e9999e7ea3c204a1d1e140a1f18" kindref="member">registerAccess</ref>[address]<sp/>|=<sp/><ref refid="RegisterAccess_8h_1ab7bf3c3ea0569faa301549892d541c37" kindref="member">TMC_ACCESS_DIRTY</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5041_8c_1ac3fdc803c1ec40f9788d913ed83a1dc6" kindref="member">tmc5041_writeInt</ref>(<ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref><sp/>*tmc5041,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5041_8c_1a47a29014b09ae8cbd0f449ca35166229" kindref="member">tmc5041_writeDatagram</ref>(tmc5041,<sp/>address,<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>3),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>2),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>1),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>0));</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">int32_t<sp/><ref refid="TMC5041_8c_1a63638260c81e8b712864c8840011a531" kindref="member">tmc5041_readInt</ref>(<ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref><sp/>*tmc5041,<sp/>uint8_t<sp/>address)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>not<sp/>readable<sp/>-&gt;<sp/>shadow<sp/>register<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="RegisterAccess_8h_1af08f0d12a2110808e943d969103914a8" kindref="member">TMC_IS_READABLE</ref>(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a5e4c3e9999e7ea3c204a1d1e140a1f18" kindref="member">registerAccess</ref>[address]))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5041_8c_1a8342c0f614fc16e80e588eb0230527f2" kindref="member">tmc5041_readWriteArray</ref>(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5041_8c_1a8342c0f614fc16e80e588eb0230527f2" kindref="member">tmc5041_readWriteArray</ref>(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)data[1]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)data[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[4];</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5041_8c_1a33b88b0ddebbb65682a8a8d01cb6050e" kindref="member">tmc5041_init</ref>(<ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref><sp/>*tmc5041,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a33da67fbaad18727258c6567a4a94bc5" kindref="member">velocity</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a33da67fbaad18727258c6567a4a94bc5" kindref="member">velocity</ref>[1]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a9eee52f454ef16a92a5a636ed84521df" kindref="member">oldTick</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1ad496a9a724870052b17e044fbcbc7eb6" kindref="member">oldX</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1ad496a9a724870052b17e044fbcbc7eb6" kindref="member">oldX</ref>[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a2c0ebbaf07aad48f2f98fa9f0998a53a" kindref="member">vMaxModified</ref>[0]<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a2c0ebbaf07aad48f2f98fa9f0998a53a" kindref="member">vMaxModified</ref>[1]<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5041__Constants_8h_1a224762b9805f14bafbfa396eb499abd6" kindref="member">TMC5041_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a5e4c3e9999e7ea3c204a1d1e140a1f18" kindref="member">registerAccess</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="TMC5041_8h_1a25c1c7dad9e1fc82840e90dbd5320186" kindref="member">tmc5041_defaultRegisterAccess</ref>[i];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a36846e9c7fe7920ea75726d874f13a28" kindref="member">registerResetState</ref>[i]<sp/><sp/>=<sp/>registerResetState[i];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5041_8c_1a3a5b091e46dd080626586d2144a79dec" kindref="member">tmc5041_writeConfiguration</ref>(<ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref><sp/>*tmc5041)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*ptr<sp/>=<sp/>&amp;tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*settings<sp/>=<sp/>(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>==<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>)<sp/>?<sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref><sp/>:<sp/>tmc5041-&gt;registerResetState;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC5041__Constants_8h_1a224762b9805f14bafbfa396eb499abd6" kindref="member">TMC5041_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a9ed149c96912c0b202d8326509d7e923" kindref="member">TMC_IS_WRITABLE</ref>(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a5e4c3e9999e7ea3c204a1d1e140a1f18" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*ptr<sp/>&lt;<sp/><ref refid="TMC5041__Constants_8h_1a224762b9805f14bafbfa396eb499abd6" kindref="member">TMC5041_REGISTER_COUNT</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5041_8c_1ac3fdc803c1ec40f9788d913ed83a1dc6" kindref="member">tmc5041_writeInt</ref>(tmc5041,<sp/>*ptr,<sp/>settings[*ptr]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5041_8c_1ad5e65ab5caf62751c86657eb259307c9" kindref="member">tmc5041_periodicJob</ref>(<ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref><sp/>*tmc5041,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>xActual;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tickDiff;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5041_8c_1a3a5b091e46dd080626586d2144a79dec" kindref="member">tmc5041_writeConfiguration</ref>(tmc5041);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tickDiff<sp/>=<sp/>tick<sp/>-<sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a9eee52f454ef16a92a5a636ed84521df" kindref="member">oldTick</ref>)<sp/>&gt;=<sp/>5)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>i;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5041__Constants_8h_1afffff02204410fda1f1366883c49a0fd" kindref="member">TMC5041_MOTORS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xActual<sp/>=<sp/><ref refid="TMC5041_8c_1a63638260c81e8b712864c8840011a531" kindref="member">tmc5041_readInt</ref>(tmc5041,<sp/><ref refid="TMC5041__Register_8h_1aa7a9b182420348b14f53ae13cadbc2ac" kindref="member">TMC5041_XACTUAL</ref>(i));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC5041__Register_8h_1aa7a9b182420348b14f53ae13cadbc2ac" kindref="member">TMC5041_XACTUAL</ref>(i)]<sp/>=<sp/>xActual;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a33da67fbaad18727258c6567a4a94bc5" kindref="member">velocity</ref>[i]<sp/>=<sp/>(int32_t)<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(abs(xActual-tmc5041-&gt;<ref refid="structTMC5041TypeDef_1ad496a9a724870052b17e044fbcbc7eb6" kindref="member">oldX</ref>[i])<sp/>/<sp/>(float)<sp/>tickDiff)<sp/>*<sp/>(float)<sp/>1048.576);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1ad496a9a724870052b17e044fbcbc7eb6" kindref="member">oldX</ref>[i]<sp/>=<sp/>xActual;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1a9eee52f454ef16a92a5a636ed84521df" kindref="member">oldTick</ref><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">uint8_t<sp/><ref refid="TMC5041_8c_1ab658a37a5a1a94e29b8d1025d3eb7f91" kindref="member">tmc5041_reset</ref>(<ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref><sp/>*tmc5041)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837faf4b7eabf7d198b2f9b47d8c7a36c7d0f" kindref="member">CONFIG_RESET</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">uint8_t<sp/><ref refid="TMC5041_8c_1a0ed606c0342a75d404775f0e4164ed35" kindref="member">tmc5041_restore</ref>(<ref refid="structTMC5041TypeDef" kindref="compound">TMC5041TypeDef</ref><sp/>*tmc5041)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5041-&gt;<ref refid="structTMC5041TypeDef_1af6653ebed1c14f9c0c896e95bcd8619b" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5041/TMC5041.c"/>
  </compounddef>
</doxygen>
