<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC5072_8c" kind="file" language="C++">
    <compoundname>TMC5072.c</compoundname>
    <includes refid="TMC5072_8h" local="yes">TMC5072.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC5072.c</label>
        <link refid="TMC5072_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC5072.h</label>
        <link refid="TMC5072_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC5072_Constants.h</label>
        <link refid="TMC5072__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TMC5072_Fields.h</label>
        <link refid="TMC5072__Fields_8h"/>
      </node>
      <node id="15">
        <label>TMC5072_Register.h</label>
        <link refid="TMC5072__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC5072_8c_1a0fb0e3b5ca63e80020e29fd8d0c14073" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_readWriteArray</definition>
        <argsstring>(uint8_t channel, uint8_t *data, size_t length)</argsstring>
        <name>tmc5072_readWriteArray</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="13" column="13" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" declline="13" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a5dec3c1ad2cbdd6931ce998d82e685a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_writeDatagram</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)</argsstring>
        <name>tmc5072_writeDatagram</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="16" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="16" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a87591d35e5442c19bdd34f1aa6fd0fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_writeInt</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t address, int32_t value)</argsstring>
        <name>tmc5072_writeInt</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="29" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1ab6cb35144594b23eed8c2ac555a06521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc5072_readInt</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t address)</argsstring>
        <name>tmc5072_readInt</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="34" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="34" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a089c7550b2a5c511e38ad359611a6168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_init</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t channel, ConfigurationTypeDef *tmc5072_config, const int32_t *registerResetState)</argsstring>
        <name>tmc5072_init</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>tmc5072_config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="105" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="105" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1ac8dbfdb34f4a8abc2c59947d904ea835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_fillShadowRegisters</definition>
        <argsstring>(TMC5072TypeDef *tmc5072)</argsstring>
        <name>tmc5072_fillShadowRegisters</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="152" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="152" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1af161674d708b5c55a557d1200f502bd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writeConfiguration</definition>
        <argsstring>(TMC5072TypeDef *tmc5072)</argsstring>
        <name>writeConfiguration</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="182" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="182" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1acfdfc559a93399512eae10bbbcf000fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_periodicJob</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint32_t tick)</argsstring>
        <name>tmc5072_periodicJob</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="239" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="239" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a6894d03d86d4a6b2c0dd5b72dd98f81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5072_reset</definition>
        <argsstring>(TMC5072TypeDef *tmc5072)</argsstring>
        <name>tmc5072_reset</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="298" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="298" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1aec8777ca3dc5307187a63f9f3651528f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5072_restore</definition>
        <argsstring>(TMC5072TypeDef *tmc5072)</argsstring>
        <name>tmc5072_restore</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="327" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="327" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a8e0747f63337cb242b2001c9855defbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_setRegisterResetState</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, const int32_t *resetState)</argsstring>
        <name>tmc5072_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="338" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1aa841199a5091f0142d0dfd341bdcd759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_setCallback</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, tmc5072_callback callback)</argsstring>
        <name>tmc5072_setCallback</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type><ref refid="TMC5072_8h_1ad9b283bb473f83b9f30b6cfd32258434" kindref="member">tmc5072_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="344" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="344" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a1941f00597d640d03655b0ff3a99d116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_rotate</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5072_rotate</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="349" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="349" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a000af3db8e021c994ea136d731d90e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_right</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5072_right</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="358" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="358" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a57346536de62206e5264e812eaf1f1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_left</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5072_left</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="363" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1ad2e0cc6f00cc7f8ce83d4b34b9cee204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_stop</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t motor)</argsstring>
        <name>tmc5072_stop</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="368" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a822af24aedde43a8d1b07642ae5180bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_moveTo</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t motor, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc5072_moveTo</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="373" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="373" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="TMC5072_8c_1a99f492437faff86451ad786199674d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5072_moveBy</definition>
        <argsstring>(TMC5072TypeDef *tmc5072, uint8_t motor, uint32_t velocityMax, int32_t *ticks)</argsstring>
        <name>tmc5072_moveBy</name>
        <param>
          <type><ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref> *</type>
          <declname>tmc5072</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" line="383" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c" bodystart="383" bodyend="389"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5072_8h" kindref="compound">TMC5072.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=&gt;<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a0fb0e3b5ca63e80020e29fd8d0c14073" kindref="member">tmc5072_readWriteArray</ref>(uint8_t<sp/>channel,<sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a5dec3c1ad2cbdd6931ce998d82e685a5" kindref="member">tmc5072_writeDatagram</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5]<sp/>=<sp/>{<sp/>address<sp/>|<sp/><ref refid="TMC5072__Constants_8h_1a0d43d04692c456758157cf2b29b79416" kindref="member">TMC5072_WRITE_BIT</ref>,<sp/>x1,<sp/>x2,<sp/>x3,<sp/>x4<sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a0fb0e3b5ca63e80020e29fd8d0c14073" kindref="member">tmc5072_readWriteArray</ref>(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value<sp/>=<sp/>((uint32_t)x1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)x2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(x3<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>x4;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>the<sp/>shadow<sp/>register<sp/>and<sp/>mark<sp/>the<sp/>register<sp/>dirty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a163c950355896fce5680702580aaefe9" kindref="member">registerAccess</ref>[address]<sp/>|=<sp/><ref refid="RegisterAccess_8h_1ab7bf3c3ea0569faa301549892d541c37" kindref="member">TMC_ACCESS_DIRTY</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a87591d35e5442c19bdd34f1aa6fd0fbe" kindref="member">tmc5072_writeInt</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a5dec3c1ad2cbdd6931ce998d82e685a5" kindref="member">tmc5072_writeDatagram</ref>(tmc5072,<sp/>address,<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>3),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>2),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>1),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>0));</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">int32_t<sp/><ref refid="TMC5072_8c_1ab6cb35144594b23eed8c2ac555a06521" kindref="member">tmc5072_readInt</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>address)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>not<sp/>readable<sp/>-&gt;<sp/>shadow<sp/>register<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="RegisterAccess_8h_1af08f0d12a2110808e943d969103914a8" kindref="member">TMC_IS_READABLE</ref>(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a163c950355896fce5680702580aaefe9" kindref="member">registerAccess</ref>[address]))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5]<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a0fb0e3b5ca63e80020e29fd8d0c14073" kindref="member">tmc5072_readWriteArray</ref>(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a0fb0e3b5ca63e80020e29fd8d0c14073" kindref="member">tmc5072_readWriteArray</ref>(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)data[1]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)data[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[4];</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>tmc5072_writeDatagram(TMC5072TypeDef<sp/>*tmc5072,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>address<sp/>|<sp/>TMC5072_WRITE_BIT,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>x1,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>x2,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>x3,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>x4,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int32_t<sp/>value<sp/>=<sp/>x1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>|=<sp/>x2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>|=<sp/>x3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>|=<sp/>x4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;shadowRegister[address<sp/>&amp;<sp/>0x7F]<sp/>=<sp/>value;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>tmc5072_writeInt(TMC5072TypeDef<sp/>*tmc5072,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_writeDatagram(tmc5072,<sp/><sp/>address,<sp/>0xFF<sp/>&amp;<sp/>(value&gt;&gt;24),<sp/>0xFF<sp/>&amp;<sp/>(value&gt;&gt;16),<sp/>0xFF<sp/>&amp;<sp/>(value&gt;&gt;8),<sp/>0xFF<sp/>&amp;<sp/>(value&gt;&gt;0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//int32_t<sp/>tmc5072_readInt(TMC5072TypeDef<sp/>*tmc5072,<sp/>uint8_t<sp/>address)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>address<sp/>&amp;=<sp/>0x7F;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>register<sp/>not<sp/>readable<sp/>-&gt;<sp/>shadow<sp/>register<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(!TMC_IS_READABLE(tmc5072-&gt;registerAccess[address]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>tmc5072-&gt;shadowRegister[address];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>address,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>0,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>0,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel<sp/>,0,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>0,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>address,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int32_t<sp/>value<sp/>=<sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>0,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>|=<sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>0,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>|=<sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>0,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>value<sp/>|=<sp/>tmc5072_readWrite(tmc5072-&gt;channel,<sp/>0,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>value;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provide<sp/>the<sp/>init<sp/>function<sp/>with<sp/>a<sp/>channel<sp/>index<sp/>(sent<sp/>back<sp/>in<sp/>the<sp/>SPI<sp/>callback),<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>ConfigurationTypeDef<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>int32_t<sp/>array<sp/>(size<sp/>128)<sp/>holding<sp/>the<sp/>reset<sp/>values<sp/>that<sp/>shall<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a089c7550b2a5c511e38ad359611a6168" kindref="member">tmc5072_init</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*tmc5072_config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>motor<sp/>=<sp/>0;<sp/>motor<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a0798039482847c420f1b6a248d8c19e8" kindref="member">TMC5072_MOTORS</ref>;<sp/>motor++)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a038cc0205eb08173ffd41c76e635e542" kindref="member">velocity</ref>[motor]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1ae62091f61a65f4777102a6402d216afd" kindref="member">oldX</ref>[motor]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a892c65c93a3688d600976566d4340936" kindref="member">oldTick</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref><sp/><sp/><sp/>=<sp/>tmc5072_config;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TODO:<sp/>Config<sp/>initialization</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>can<sp/>either<sp/>explicitly<sp/>initialize<sp/>in<sp/>each<sp/>IC&apos;s<sp/>init<sp/>respectively,</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>or<sp/>do<sp/>that<sp/>with<sp/>a<sp/>separate<sp/>function<sp/>config_init<sp/>where<sp/>also<sp/>the<sp/>channel<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a7f67a91e9f6e4eb72ff6d0650f8a5fc8" kindref="member">TMC5072_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a163c950355896fce5680702580aaefe9" kindref="member">registerAccess</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="TMC5072_8h_1a7338062ca7f9aee4b3aa9abe8f987bee" kindref="member">tmc5072_defaultRegisterAccess</ref>[i];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1ae37ba366f7a2b67877638539136c37fa" kindref="member">registerResetState</ref>[i]<sp/><sp/>=<sp/>registerResetState[i];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>tmc5072_initConfig(TMC5072TypeDef<sp/>*tmc5072)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;velocity[0]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;velocity[1]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;oldTick<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;oldX[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;oldX[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;vMaxModified[0]<sp/><sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;vMaxModified[1]<sp/><sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int32_t<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>for(i=0;<sp/>i<sp/>&lt;<sp/>TMC5072_REGISTER_COUNT;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;registerAccess[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tmc5072_defaultRegisterAccess[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;registerResetState[i]<sp/><sp/>=<sp/>tmc5072_defaultRegisterResetState[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1ac8dbfdb34f4a8abc2c59947d904ea835" kindref="member">tmc5072_fillShadowRegisters</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>have<sp/>constants<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5072_8h_1a21d6655a8253e1f7f0b2df5756e008c8" kindref="member">tmc5072_RegisterConstants</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a7f67a91e9f6e4eb72ff6d0650f8a5fc8" kindref="member">TMC5072_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>to<sp/>worry<sp/>about<sp/>hardware<sp/>preset,<sp/>write-only<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>not<sp/>yet<sp/>been<sp/>written<sp/>(no<sp/>dirty<sp/>bit)<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a163c950355896fce5680702580aaefe9" kindref="member">registerAccess</ref>[i]<sp/>!=<sp/><ref refid="RegisterAccess_8h_1a0a68eeac67d2149074f3f6191d60b80c" kindref="member">TMC_ACCESS_W_PRESET</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>constant<sp/>list<sp/>for<sp/>the<sp/>current<sp/>address.<sp/>With<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>being<sp/>sorted<sp/>in<sp/>ascended<sp/>order,<sp/>we<sp/>can<sp/>walk<sp/>through<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>the<sp/>entry<sp/>with<sp/>an<sp/>address<sp/>equal<sp/>or<sp/>greater<sp/>than<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/><ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5072_8h_1a21d6655a8253e1f7f0b2df5756e008c8" kindref="member">tmc5072_RegisterConstants</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="TMC5072_8h_1a21d6655a8253e1f7f0b2df5756e008c8" kindref="member">tmc5072_RegisterConstants</ref>[j].address<sp/>&lt;<sp/>i))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abort<sp/>when<sp/>we<sp/>reach<sp/>the<sp/>end<sp/>of<sp/>the<sp/>constant<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/><ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5072_8h_1a21d6655a8253e1f7f0b2df5756e008c8" kindref="member">tmc5072_RegisterConstants</ref>))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>an<sp/>entry<sp/>for<sp/>our<sp/>current<sp/>address,<sp/>write<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="TMC5072_8h_1a21d6655a8253e1f7f0b2df5756e008c8" kindref="member">tmc5072_RegisterConstants</ref>[j].address<sp/>==<sp/>i)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[i]<sp/>=<sp/><ref refid="TMC5072_8h_1a21d6655a8253e1f7f0b2df5756e008c8" kindref="member">tmc5072_RegisterConstants</ref>[j].<ref refid="structTMCRegisterConstant_1a8ee397638840f4461cd9b559fde7fc30" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1af161674d708b5c55a557d1200f502bd7" kindref="member">writeConfiguration</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*ptr<sp/>=<sp/>&amp;tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*settings;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>==<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>restorable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a7f67a91e9f6e4eb72ff6d0650f8a5fc8" kindref="member">TMC5072_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a70866cbed8c69a330b4aebc9a1e8287e" kindref="member">TMC_IS_RESTORABLE</ref>(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a163c950355896fce5680702580aaefe9" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1ae37ba366f7a2b67877638539136c37fa" kindref="member">registerResetState</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>resettable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a7f67a91e9f6e4eb72ff6d0650f8a5fc8" kindref="member">TMC5072_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a08cbb9fb1db72595e25b38131ee3dba0" kindref="member">TMC_IS_RESETTABLE</ref>(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a163c950355896fce5680702580aaefe9" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*ptr<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a7f67a91e9f6e4eb72ff6d0650f8a5fc8" kindref="member">TMC5072_REGISTER_COUNT</ref>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a87591d35e5442c19bdd34f1aa6fd0fbe" kindref="member">tmc5072_writeInt</ref>(tmc5072,<sp/>*ptr,<sp/>settings[*ptr]);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Finished<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="TMC5072_8h_1ad9b283bb473f83b9f30b6cfd32258434" kindref="member">tmc5072_callback</ref>)tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)(tmc5072,<sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>tmc5072_writeConfiguration(TMC5072TypeDef<sp/>*tmc5072,<sp/>ConfigurationTypeDef<sp/>*TMC5072_config)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uint8_t<sp/>*ptr<sp/>=<sp/>&amp;TMC5072_config-&gt;configIndex;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>const<sp/>int32_t<sp/>*settings<sp/>=<sp/>(TMC5072_config-&gt;state<sp/>==<sp/>CONFIG_RESTORE)<sp/>?<sp/>TMC5072_config-&gt;shadowRegister<sp/>:<sp/>tmc5072-&gt;registerResetState;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tmc5072-&gt;shadowRegister<sp/>=<sp/>TMC5072_config-&gt;shadowRegister;<sp/>//<sp/>TODO<sp/>API<sp/>2:<sp/>Find<sp/>better<sp/>position<sp/>(LK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>while((*ptr<sp/>&lt;<sp/>TMC5072_REGISTER_COUNT)<sp/>&amp;&amp;<sp/>!TMC_IS_WRITABLE(tmc5072-&gt;registerAccess[*ptr]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(*ptr<sp/>&lt;<sp/>TMC5072_REGISTER_COUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072_writeInt(tmc5072,<sp/>*ptr,<sp/>settings[*ptr]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TMC5072_config-&gt;state<sp/>=<sp/>CONFIG_READY;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1acfdfc559a93399512eae10bbbcf000fe" kindref="member">tmc5072_periodicJob</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tickDiff;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1af161674d708b5c55a557d1200f502bd7" kindref="member">writeConfiguration</ref>(tmc5072);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>x;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>velocity<sp/>v<sp/>=<sp/>dx/dt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tickDiff<sp/>=<sp/>tick<sp/>-<sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a892c65c93a3688d600976566d4340936" kindref="member">oldTick</ref>)<sp/>&gt;=<sp/>5)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>motor<sp/>=<sp/>0;<sp/>motor<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a0798039482847c420f1b6a248d8c19e8" kindref="member">TMC5072_MOTORS</ref>;<sp/>motor++)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="TMC5072_8c_1ab6cb35144594b23eed8c2ac555a06521" kindref="member">tmc5072_readInt</ref>(tmc5072,<sp/><ref refid="TMC5072__Register_8h_1a709432acf77a5087ce39185af71ba6aa" kindref="member">TMC5072_XACTUAL</ref>(motor));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a038cc0205eb08173ffd41c76e635e542" kindref="member">velocity</ref>[motor]<sp/>=<sp/>(uint32_t)<sp/>((<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>(abs(x<sp/>-<sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1ae62091f61a65f4777102a6402d216afd" kindref="member">oldX</ref>[motor])<sp/>/<sp/>(<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>tickDiff)<sp/>*<sp/>(<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>1048.576);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1ae62091f61a65f4777102a6402d216afd" kindref="member">oldX</ref>[motor]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a892c65c93a3688d600976566d4340936" kindref="member">oldTick</ref><sp/><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>tmc5072_periodicJob(uint8_t<sp/>motor,<sp/>uint32_t<sp/>tick,<sp/>TMC5072TypeDef<sp/>*tmc5072,<sp/>ConfigurationTypeDef<sp/>*TMC5072_config)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int32_t<sp/>xActual;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uint32_t<sp/>tickDiff;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(TMC5072_config-&gt;state<sp/>!=<sp/>CONFIG_READY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072_writeConfiguration(tmc5072,<sp/>TMC5072_config);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if((tickDiff<sp/>=<sp/>tick<sp/>-<sp/>tmc5072-&gt;oldTick)<sp/>&gt;=<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>xActual<sp/>=<sp/>tmc5072_readInt(0,<sp/>TMC5072_XACTUAL(motor));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TMC5072_config-&gt;shadowRegister[TMC5072_XACTUAL(motor)]<sp/>=<sp/>xActual;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;velocity[motor]<sp/>=<sp/>(int32_t)<sp/>((float)<sp/>(abs(xActual-tmc5072-&gt;oldX[motor])<sp/>/<sp/>(float)<sp/>tickDiff)<sp/>*<sp/>(float)<sp/>1048.576);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;oldX[motor]<sp/>=<sp/>xActual;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Not<sp/>per<sp/>motor:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>/*xActual<sp/>=<sp/>tmc5072_readInt(motor,<sp/>TMC5072_XACTUAL_1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TMC562v3_config-&gt;shadowRegister[TMC5072_XACTUAL_1]<sp/>=<sp/>xActual;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TMC562V3.velocityMotor1<sp/>=<sp/>(int32_t)<sp/>((float)<sp/>(abs(xActual-oldX[0])<sp/>/<sp/>(float)<sp/>t)<sp/>*<sp/>(float)<sp/>1048.576);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;oldX<sp/>=<sp/>xActual;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>xActual<sp/>=<sp/>readInt(TMC5072_XACTUAL_2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TMC562v3_config-&gt;shadowRegister[TMC5072_XACTUAL_2]<sp/>=<sp/>xActual;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TMC562V3.velocityMotor2<sp/>=<sp/>(int32_t)<sp/>((float)<sp/>(abs(xActual-oldX[1])<sp/>/<sp/>(float)<sp/>t)<sp/>*<sp/>(float)<sp/>1048.576);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;oldX<sp/>=<sp/>xActual;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;oldTick<sp/>=<sp/>tick;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">uint8_t<sp/><ref refid="TMC5072_8c_1a6894d03d86d4a6b2c0dd5b72dd98f81b" kindref="member">tmc5072_reset</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>dirty<sp/>bits<sp/>and<sp/>wipe<sp/>the<sp/>shadow<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a7f67a91e9f6e4eb72ff6d0650f8a5fc8" kindref="member">TMC5072_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a163c950355896fce5680702580aaefe9" kindref="member">registerAccess</ref>[i]<sp/>&amp;=<sp/>~TMC_ACCESS_DIRTY;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837faf4b7eabf7d198b2f9b47d8c7a36c7d0f" kindref="member">CONFIG_RESET</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//uint8_t<sp/>tmc5072_reset(ConfigurationTypeDef<sp/>*TMC5072_config)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(TMC5072_config-&gt;state<sp/>!=<sp/>CONFIG_READY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TMC5072_config-&gt;state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CONFIG_RESET;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TMC5072_config-&gt;configIndex<sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">uint8_t<sp/><ref refid="TMC5072_8c_1aec8777ca3dc5307187a63f9f3651528f" kindref="member">tmc5072_restore</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a8e0747f63337cb242b2001c9855defbd" kindref="member">tmc5072_setRegisterResetState</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5072__Constants_8h_1a7f67a91e9f6e4eb72ff6d0650f8a5fc8" kindref="member">TMC5072_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1ae37ba366f7a2b67877638539136c37fa" kindref="member">registerResetState</ref>[i]<sp/>=<sp/>resetState[i];</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1aa841199a5091f0142d0dfd341bdcd759" kindref="member">tmc5072_setCallback</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/><ref refid="TMC5072_8h_1ad9b283bb473f83b9f30b6cfd32258434" kindref="member">tmc5072_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5072-&gt;<ref refid="structTMC5072TypeDef_1a2fc0581a781107ce8fede42df394011e" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/>=<sp/>(<ref refid="Config_8h_1a4f94914f5c7a97833e65a3d10eedfdee" kindref="member">tmc_callback_config</ref>)<sp/>callback;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a1941f00597d640d03655b0ff3a99d116" kindref="member">tmc5072_rotate</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(motor<sp/>&gt;=<sp/><ref refid="TMC5072__Constants_8h_1a0798039482847c420f1b6a248d8c19e8" kindref="member">TMC5072_MOTORS</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a87591d35e5442c19bdd34f1aa6fd0fbe" kindref="member">tmc5072_writeInt</ref>(tmc5072,<sp/><ref refid="TMC5072__Register_8h_1a694b1234014424492d55f73d668ed511" kindref="member">TMC5072_VMAX</ref>(motor),<sp/>abs(velocity));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a5dec3c1ad2cbdd6931ce998d82e685a5" kindref="member">tmc5072_writeDatagram</ref>(tmc5072,<sp/><ref refid="TMC5072__Register_8h_1a396ce04442c7b36cc93cddada762e895" kindref="member">TMC5072_RAMPMODE</ref>(motor),<sp/>0,<sp/>0,<sp/>0,<sp/>(velocity<sp/>&gt;=<sp/>0)<sp/>?<sp/><ref refid="TMC5072__Constants_8h_1a68391537bd085af4ad8bf5b72dd5a349" kindref="member">TMC5072_MODE_VELPOS</ref><sp/>:<sp/><ref refid="TMC5072__Constants_8h_1ab6736229726e097a996d72a0455e27c8" kindref="member">TMC5072_MODE_VELNEG</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a000af3db8e021c994ea136d731d90e21" kindref="member">tmc5072_right</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a1941f00597d640d03655b0ff3a99d116" kindref="member">tmc5072_rotate</ref>(tmc5072,<sp/>motor,<sp/>velocity);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a57346536de62206e5264e812eaf1f1aa" kindref="member">tmc5072_left</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a1941f00597d640d03655b0ff3a99d116" kindref="member">tmc5072_rotate</ref>(tmc5072,<sp/>motor,<sp/>-velocity);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1ad2e0cc6f00cc7f8ce83d4b34b9cee204" kindref="member">tmc5072_stop</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>motor)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a1941f00597d640d03655b0ff3a99d116" kindref="member">tmc5072_rotate</ref>(tmc5072,<sp/>motor,<sp/>0);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a822af24aedde43a8d1b07642ae5180bd" kindref="member">tmc5072_moveTo</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(motor<sp/>&gt;=<sp/><ref refid="TMC5072__Constants_8h_1a0798039482847c420f1b6a248d8c19e8" kindref="member">TMC5072_MOTORS</ref>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a87591d35e5442c19bdd34f1aa6fd0fbe" kindref="member">tmc5072_writeInt</ref>(tmc5072,<sp/><ref refid="TMC5072__Register_8h_1a396ce04442c7b36cc93cddada762e895" kindref="member">TMC5072_RAMPMODE</ref>(motor),<sp/><ref refid="TMC5072__Constants_8h_1a2d0cf7b8edf8cb17f4d85e05877e26f4" kindref="member">TMC5072_MODE_POSITION</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a87591d35e5442c19bdd34f1aa6fd0fbe" kindref="member">tmc5072_writeInt</ref>(tmc5072,<sp/><ref refid="TMC5072__Register_8h_1a694b1234014424492d55f73d668ed511" kindref="member">TMC5072_VMAX</ref>(motor),<sp/>velocityMax);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5072_8c_1a87591d35e5442c19bdd34f1aa6fd0fbe" kindref="member">tmc5072_writeInt</ref>(tmc5072,<sp/><ref refid="TMC5072__Register_8h_1a3b985a8bcc9bda3ac4f3bb552acfad0e" kindref="member">TMC5072_XTARGET</ref>(motor),<sp/>position);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a99f492437faff86451ad786199674d2e" kindref="member">tmc5072_moveBy</ref>(<ref refid="structTMC5072TypeDef" kindref="compound">TMC5072TypeDef</ref><sp/>*tmc5072,<sp/>uint8_t<sp/>motor,<sp/>uint32_t<sp/>velocityMax,<sp/>int32_t<sp/>*ticks)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>actual<sp/>position<sp/>and<sp/>add<sp/>numbers<sp/>of<sp/>ticks<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>*ticks<sp/>+=<sp/><ref refid="TMC5072_8c_1ab6cb35144594b23eed8c2ac555a06521" kindref="member">tmc5072_readInt</ref>(tmc5072,<sp/><ref refid="TMC5072__Register_8h_1a709432acf77a5087ce39185af71ba6aa" kindref="member">TMC5072_XACTUAL</ref>(motor));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5072_8c_1a822af24aedde43a8d1b07642ae5180bd" kindref="member">tmc5072_moveTo</ref>(tmc5072,<sp/>motor,<sp/>*ticks,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5072/TMC5072.c"/>
  </compounddef>
</doxygen>
