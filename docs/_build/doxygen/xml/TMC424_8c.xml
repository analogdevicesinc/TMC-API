<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC424_8c" kind="file" language="C++">
    <compoundname>TMC424.c</compoundname>
    <includes refid="TMC424_8h" local="yes">TMC424.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC424.c</label>
        <link refid="TMC424_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC424.h</label>
        <link refid="TMC424_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>TMC424_Register.h</label>
        <link refid="TMC424__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC424_8c_1ae800026909aadccf8f8a8c46d75db2fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>ReadWrite424</definition>
        <argsstring>(uint8_t *Read, uint8_t *Write)</argsstring>
        <name>ReadWrite424</name>
        <param>
          <type>uint8_t *</type>
          <declname>Read</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>Write</declname>
        </param>
        <briefdescription>
<para>32 bit SPI communication with TMC424 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Read</parametername>
</parameternamelist>
<parameterdescription>
<para>four byte array holding the data read from the TMC424 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Write</parametername>
</parameternamelist>
<parameterdescription>
<para>four byte array holding the data to write to the TMC424</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This is the low-level function that does all SPI communication with the TMC424. It sends a 32 bit SPI telegramme to the TMC424 and receives the 32 bit answer telegramme from the TMC424. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" line="39" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" bodystart="39" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="TMC424_8c_1ac8631568a0822d6b3ad3f8d283143589" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>Write424Bytes</definition>
        <argsstring>(uint8_t Address, uint8_t HiByte, uint8_t MidByte, uint8_t LoByte)</argsstring>
        <name>Write424Bytes</name>
        <param>
          <type>uint8_t</type>
          <declname>Address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>HiByte</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>MidByte</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>LoByte</declname>
        </param>
        <briefdescription>
<para>Write to TMC424 register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Address</parametername>
</parameternamelist>
<parameterdescription>
<para>TMC424 register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HiByte</parametername>
</parameternamelist>
<parameterdescription>
<para>MSB to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MidByte</parametername>
</parameternamelist>
<parameterdescription>
<para>Middle byte to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LoByte</parametername>
</parameternamelist>
<parameterdescription>
<para>LSB to be writteb</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Write to the three single bytes of a TMC424 register. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" line="58" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="TMC424_8c_1a844afb3ba7d61c6a5298404c486c91d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>SetEncoderPrescaler</definition>
        <argsstring>(uint8_t Index, uint32_t Prescaler, uint8_t SpecialFunctionBits)</argsstring>
        <name>SetEncoderPrescaler</name>
        <param>
          <type>uint8_t</type>
          <declname>Index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>Prescaler</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>SpecialFunctionBits</declname>
        </param>
        <briefdescription>
<para>Index TMC424 encoder channel (0, 1 or 2) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Prescaler</parametername>
</parameternamelist>
<parameterdescription>
<para>Encooder pre-scaler (see TMC424 data sheet) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SpecialFunctionBits</parametername>
</parameternamelist>
<parameterdescription>
<para>special encoder functions (see TMC424 data sheet)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function sets the pre-scaler and the special functions of an encoder channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" line="76" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" bodystart="76" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="TMC424_8c_1aaf336f8a12b8f1e5c94b79403728a0f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>ReadEncoder</definition>
        <argsstring>(uint8_t Index)</argsstring>
        <name>ReadEncoder</name>
        <param>
          <type>uint8_t</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
<para>Read encoder counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Index</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the encoder (0, 1 or 2) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Encoder positon counter value</para>
</simplesect>
This function reads an encoder counter and returns its value as a 32 bit signed value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" line="114" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" bodystart="114" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="TMC424_8c_1ae1537c6f15460db20a277e6e823bbc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>WriteEncoder</definition>
        <argsstring>(uint8_t Index, int32_t Value)</argsstring>
        <name>WriteEncoder</name>
        <param>
          <type>uint8_t</type>
          <declname>Index</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Change encoder counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Index</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the encoder (0, 1 or 2) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be written</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Change an encoder counter register to the given value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" line="155" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" bodystart="155" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="TMC424_8c_1ab30f0f6edbb8e674c1aef4c8e5df204d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>ReadEncoderNullChannel</definition>
        <argsstring>(uint8_t Index)</argsstring>
        <name>ReadEncoderNullChannel</name>
        <param>
          <type>uint8_t</type>
          <declname>Index</declname>
        </param>
        <briefdescription>
<para>Check null channel of an encoder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Index</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the encoer (0, 1 or 2) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>State of the N input for the given encoder</para>
</simplesect>
This function reads the state of the null channel input for an encoder. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" line="187" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" bodystart="187" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="TMC424_8c_1aa6ec3023ae02c5b6692d22b74749f7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>Init424</definition>
        <argsstring>(void)</argsstring>
        <name>Init424</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the TMC424. </para>
        </briefdescription>
        <detaileddescription>
<para>This function does the basic initialization of the TMC424. The encoder prescalers are set to some example values, and the encoder counters are cleared. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" line="232" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c" bodystart="232" bodyend="246"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2019<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>provides<sp/>all<sp/>functions<sp/>needed<sp/>for<sp/>easy</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>access<sp/>to<sp/>the<sp/>TMC424<sp/>encoder<sp/>interface<sp/>IC.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>Please<sp/>not<sp/>that<sp/>functions<sp/>for<sp/>communication<sp/>over<sp/>SPI<sp/>must<sp/>be<sp/>added<sp/>by<sp/>the<sp/>user,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>because<sp/>this<sp/>is<sp/>specific<sp/>to<sp/>the<sp/>MCU<sp/>that<sp/>is<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>ReadWriteSPI<sp/>function<sp/>with<sp/>the<sp/>following<sp/>parameters<sp/>and<sp/>functionality:</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>First<sp/>parameter:<sp/>indentifies<sp/>the<sp/>SPI<sp/>device</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>Second<sp/>parameter:<sp/>byte<sp/>to<sp/>be<sp/>sent<sp/>to<sp/>the<sp/>SPI<sp/>device</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>Third<sp/>parameter:<sp/>FALSE<sp/>means<sp/>that<sp/>more<sp/>bytes<sp/>will<sp/>follow,<sp/>so<sp/>do<sp/>not<sp/>relase<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>chip<sp/>select<sp/>line.<sp/>TRUE<sp/>means<sp/>that<sp/>this<sp/>was<sp/>the<sp/>last<sp/>byte,<sp/>so<sp/>release<sp/>the<sp/>chip</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>select<sp/>line<sp/>after<sp/>this<sp/>byte<sp/>has<sp/>been<sp/>sent<sp/>and<sp/>the<sp/>answer<sp/>has<sp/>been<sp/>fully<sp/>received.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>shall<sp/>return<sp/>the<sp/>byte<sp/>that<sp/>has<sp/>been<sp/>received<sp/>via<sp/>SPI.</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC424_8h" kindref="compound">TMC424.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC424_8c_1ae800026909aadccf8f8a8c46d75db2fa" kindref="member">ReadWrite424</ref>(uint8_t<sp/>*Read,<sp/>uint8_t<sp/>*Write)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Read[0]<sp/>=<sp/><ref refid="TMC429_8h_1a41ad442f5b8bd6cbc9f85525097a4554" kindref="member">ReadWriteSPI</ref>(SPI_DEV_ENCODER,<sp/>Write[0],<sp/><ref refid="Types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Read[1]<sp/>=<sp/><ref refid="TMC429_8h_1a41ad442f5b8bd6cbc9f85525097a4554" kindref="member">ReadWriteSPI</ref>(SPI_DEV_ENCODER,<sp/>Write[1],<sp/><ref refid="Types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>Read[2]<sp/>=<sp/><ref refid="TMC429_8h_1a41ad442f5b8bd6cbc9f85525097a4554" kindref="member">ReadWriteSPI</ref>(SPI_DEV_ENCODER,<sp/>Write[2],<sp/><ref refid="Types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Read[3]<sp/>=<sp/><ref refid="TMC429_8h_1a41ad442f5b8bd6cbc9f85525097a4554" kindref="member">ReadWriteSPI</ref>(SPI_DEV_ENCODER,<sp/>Write[3],<sp/><ref refid="Types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC424_8c_1ac8631568a0822d6b3ad3f8d283143589" kindref="member">Write424Bytes</ref>(uint8_t<sp/>Address,<sp/>uint8_t<sp/>HiByte,<sp/>uint8_t<sp/>MidByte,<sp/>uint8_t<sp/>LoByte)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC429_8h_1a41ad442f5b8bd6cbc9f85525097a4554" kindref="member">ReadWriteSPI</ref>(SPI_DEV_ENCODER,<sp/>Address|<ref refid="TMC424__Register_8h_1ab60e5b71b284574d8cced62ae65db029" kindref="member">TMC424_WRITE</ref>,<sp/><ref refid="Types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC429_8h_1a41ad442f5b8bd6cbc9f85525097a4554" kindref="member">ReadWriteSPI</ref>(SPI_DEV_ENCODER,<sp/>HiByte,<sp/><ref refid="Types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC429_8h_1a41ad442f5b8bd6cbc9f85525097a4554" kindref="member">ReadWriteSPI</ref>(SPI_DEV_ENCODER,<sp/>MidByte,<sp/><ref refid="Types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC429_8h_1a41ad442f5b8bd6cbc9f85525097a4554" kindref="member">ReadWriteSPI</ref>(SPI_DEV_ENCODER,<sp/>LoByte,<sp/><ref refid="Types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC424_8c_1a844afb3ba7d61c6a5298404c486c91d2" kindref="member">SetEncoderPrescaler</ref>(uint8_t<sp/>Index,<sp/>uint32_t<sp/>Prescaler,<sp/>uint8_t<sp/>SpecialFunctionBits)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>RegAddr;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ps;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sf;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(Index)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegAddr<sp/>=<sp/>TMC423_ENC_CONF_1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegAddr<sp/>=<sp/>TMC423_ENC_CONF_2;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegAddr<sp/>=<sp/>TMC423_ENC_CONF_3;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>((Prescaler<sp/>&amp;<sp/>0xFFFFFFF0)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(Prescaler<sp/>&amp;<sp/>0x0000000F);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>SpecialFunctionBits;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>sf<sp/>&lt;&lt;=<sp/>7;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ps<sp/>|=<sp/>sf;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Write423Bytes(RegAddr,<sp/>0,<sp/>ps<sp/>&gt;&gt;<sp/>16,<sp/>ps<sp/>&gt;&gt;<sp/>8,<sp/>(uint8_t)<sp/>ps);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">int32_t<sp/><ref refid="TMC424_8c_1aaf336f8a12b8f1e5c94b79403728a0f1" kindref="member">ReadEncoder</ref>(uint8_t<sp/>Index)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Read424[5],<sp/>Write424[5];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>Position;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(Index)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write424[0]<sp/>=<sp/>TMC423_ENC_DATA_1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write424[0]<sp/>=<sp/>TMC423_ENC_DATA_2;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write424[0]<sp/>=<sp/>TMC423_ENC_DATA_3;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>Write424[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>Write424[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Write424[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>Write424[4]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC424_8c_1ae800026909aadccf8f8a8c46d75db2fa" kindref="member">ReadWrite424</ref>(Read424,<sp/>Write424);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>Position<sp/>=<sp/>(Read424[1]&lt;&lt;16)<sp/>|<sp/>(Read424[2]&lt;&lt;8)<sp/>|<sp/>Read424[3];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Read424[1]<sp/>&amp;<sp/>0x80)<sp/></highlight><highlight class="comment">//<sp/>Sign<sp/>extend<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Position<sp/>|=<sp/>0xFF000000;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Position;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC424_8c_1ae1537c6f15460db20a277e6e823bbc3b" kindref="member">WriteEncoder</ref>(uint8_t<sp/>Index,<sp/>int32_t<sp/>Value)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>RegAddr;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(Index)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegAddr<sp/>=<sp/>TMC423_ENC_DATA_1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegAddr<sp/>=<sp/>TMC423_ENC_DATA_2;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegAddr<sp/>=<sp/>TMC423_ENC_DATA_3;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC424_8c_1ac8631568a0822d6b3ad3f8d283143589" kindref="member">Write424Bytes</ref>(RegAddr,<sp/>Value<sp/>&gt;&gt;<sp/>16,<sp/>Value<sp/>&gt;&gt;<sp/>8,<sp/>(uint8_t)<sp/>Value);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">uint8_t<sp/><ref refid="TMC424_8c_1ab30f0f6edbb8e674c1aef4c8e5df204d" kindref="member">ReadEncoderNullChannel</ref>(uint8_t<sp/>Index)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Read424[4],<sp/>Write424[4];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>Write424[0]<sp/>=<sp/>0x12;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>Write424[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>Write424[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>Write424[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC424_8c_1ae800026909aadccf8f8a8c46d75db2fa" kindref="member">ReadWrite424</ref>(Write424,<sp/>Read424);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(Index)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Read424[1]<sp/>&amp;<sp/>0x04))</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Read424[1]<sp/>&amp;<sp/>0x08))</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Read424[1]<sp/>&amp;<sp/>0x10))</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC424_8c_1aa6ec3023ae02c5b6692d22b74749f7c5" kindref="member">Init424</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>encoder<sp/>prescalers<sp/>to<sp/>12.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC424_8c_1a844afb3ba7d61c6a5298404c486c91d2" kindref="member">SetEncoderPrescaler</ref>(0,<sp/>0xC8,<sp/>0);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC424_8c_1a844afb3ba7d61c6a5298404c486c91d2" kindref="member">SetEncoderPrescaler</ref>(1,<sp/>0xC8,<sp/>0);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC424_8c_1a844afb3ba7d61c6a5298404c486c91d2" kindref="member">SetEncoderPrescaler</ref>(2,<sp/>0xC8,<sp/>0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>off<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>Write423Bytes(<ref refid="TMC424__Register_8h_1a24724fbe61249f0b04252c8d10a2d4e5" kindref="member">TMC424_INT_CTRL</ref>,<sp/>0,<sp/><ref refid="TMC424__Register_8h_1a3e86b29bc131a87c5282aa470e6c90c3" kindref="member">TMC424_CLR_FLAGS</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>encoder<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>Write423Bytes(<ref refid="TMC424__Register_8h_1a99478dea73419efa921279f9d115e540" kindref="member">TMC424_ENC_DATA_1</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>Write423Bytes(<ref refid="TMC424__Register_8h_1ad1c64d8686a3cae38d810cc3ef523a61" kindref="member">TMC424_ENC_DATA_2</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>Write423Bytes(<ref refid="TMC424__Register_8h_1a6084b39bd7adf9903bef7bcc6c0dd533" kindref="member">TMC424_ENC_DATA_3</ref>,<sp/>0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC424/TMC424.c"/>
  </compounddef>
</doxygen>
