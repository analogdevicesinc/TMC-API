<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC5240_8c" kind="file" language="C++">
    <compoundname>TMC5240.c</compoundname>
    <includes refid="TMC5240_8h" local="yes">TMC5240.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC5240.c</label>
        <link refid="TMC5240_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC5240.h</label>
        <link refid="TMC5240_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC5240_Constants.h</label>
        <link refid="TMC5240__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>../TMC5240/TMC5240_Fields.h</label>
        <link refid="TMC5240__Fields_8h"/>
      </node>
      <node id="15">
        <label>../TMC5240/TMC5240_Register.h</label>
        <link refid="TMC5240__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC5240_8c_1afe9511f4635c81a678fe534e5577e1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_init</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, uint8_t channel, ConfigurationTypeDef *config, const int32_t *registerResetState)</argsstring>
        <name>tmc5240_init</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="19" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="19" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a2f6de11aa00e4a71f20f4788835e1b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5240_reset</definition>
        <argsstring>(TMC5240TypeDef *tmc5240)</argsstring>
        <name>tmc5240_reset</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="40" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a6d348c4202c2ce24da51f9a2cb6d4ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5240_restore</definition>
        <argsstring>(TMC5240TypeDef *tmc5240)</argsstring>
        <name>tmc5240_restore</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="54" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a47b979dd820b6ef26732bb4bcbee4994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_setRegisterResetState</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, const int32_t *resetState)</argsstring>
        <name>tmc5240_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="66" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a91f3e4ef56641104f0d88e49ad81dfd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_setCallback</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, tmc5240_callback callback)</argsstring>
        <name>tmc5240_setCallback</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type><ref refid="TMC5240_8h_1aa379e01e48a96a01e542986a5988d02c" kindref="member">tmc5240_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="76" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1aa96a0c5063132d4ffc74856f27972f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5240_getSlaveAddress</definition>
        <argsstring>(TMC5240TypeDef *tmc5240)</argsstring>
        <name>tmc5240_getSlaveAddress</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="80" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a0d7c131b0eb7e157ed1c55e1c391a06d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_setSlaveAddress</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, uint8_t slaveAddress)</argsstring>
        <name>tmc5240_setSlaveAddress</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slaveAddress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="85" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1acb6e637e8785ae005d334f36f720a967" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writeConfiguration</definition>
        <argsstring>(TMC5240TypeDef *tmc5240)</argsstring>
        <name>writeConfiguration</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="90" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="90" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1acb083ef77cea38bb790fbea09451b5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_periodicJob</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, uint32_t tick)</argsstring>
        <name>tmc5240_periodicJob</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="120" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="120" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a5ada932099b3418c6147f287907c8f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_rotate</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, int32_t velocity)</argsstring>
        <name>tmc5240_rotate</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="144" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a9bea7d79fb996927e0f4b0c867fc650d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_right</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, uint32_t velocity)</argsstring>
        <name>tmc5240_right</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="153" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1ac8c06f317a23bd942794327bf97c0d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_left</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, uint32_t velocity)</argsstring>
        <name>tmc5240_left</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="159" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1aaaeecf1ad5cb43cb5f7cfafb97136b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_stop</definition>
        <argsstring>(TMC5240TypeDef *tmc5240)</argsstring>
        <name>tmc5240_stop</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="165" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a702d04620f61614c3b5440496bffe2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_moveTo</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc5240_moveTo</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="171" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="171" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="TMC5240_8c_1a6f00716e01977abfecaa2313db565f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5240_moveBy</definition>
        <argsstring>(TMC5240TypeDef *tmc5240, int32_t *ticks, uint32_t velocityMax)</argsstring>
        <name>tmc5240_moveBy</name>
        <param>
          <type><ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref> *</type>
          <declname>tmc5240</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" line="184" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c" bodystart="184" bodyend="190"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5240_8h" kindref="compound">TMC5240.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>a<sp/>TMC5240<sp/>IC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>requires:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>tmc5240:<sp/>The<sp/>pointer<sp/>to<sp/>a<sp/>TMC5240TypeDef<sp/>struct,<sp/>which<sp/>represents<sp/>one<sp/>IC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>channel:<sp/>The<sp/>channel<sp/>index,<sp/>which<sp/>will<sp/>be<sp/>sent<sp/>back<sp/>in<sp/>the<sp/>SPI<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>config:<sp/>A<sp/>ConfigurationTypeDef<sp/>struct,<sp/>which<sp/>will<sp/>be<sp/>used<sp/>by<sp/>the<sp/>IC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>registerResetState:<sp/>An<sp/>int32_t<sp/>array<sp/>with<sp/>128<sp/>elements.<sp/>This<sp/>holds<sp/>the<sp/>values<sp/>to<sp/>be<sp/>used<sp/>for<sp/>a<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1afe9511f4635c81a678fe534e5577e1b6" kindref="member">tmc5240_init</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a752d17bb362e1f22251acb8f29dbf6da" kindref="member">velocity</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a496c00a8b22bed7e2023507ab01d47e0" kindref="member">oldTick</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a7a83527c9d1d3b487f5d08226f3dc4d9" kindref="member">oldX</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5240__Constants_8h_1a6734d8367ae46049a05d4cc780eec27e" kindref="member">TMC5240_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1ad92117b68c93ecc48189766f648bcf87" kindref="member">registerAccess</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="TMC5240_8h_1ab48b1f5afd3289b45ae216474a388c82" kindref="member">tmc5240_defaultRegisterAccess</ref>[i];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a513e6004288636c3ebde0b89161cc0ef" kindref="member">registerResetState</ref>[i]<sp/><sp/>=<sp/>registerResetState[i];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>TMC5240.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">uint8_t<sp/><ref refid="TMC5240_8c_1a2f6de11aa00e4a71f20f4788835e1b9e" kindref="member">tmc5240_reset</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837faf4b7eabf7d198b2f9b47d8c7a36c7d0f" kindref="member">CONFIG_RESET</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>TMC5240<sp/>to<sp/>the<sp/>state<sp/>stored<sp/>in<sp/>the<sp/>shadow<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>recover<sp/>the<sp/>IC<sp/>configuration<sp/>after<sp/>a<sp/>VM<sp/>power<sp/>loss.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">uint8_t<sp/><ref refid="TMC5240_8c_1a6d348c4202c2ce24da51f9a2cb6d4ed7" kindref="member">tmc5240_restore</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>values<sp/>the<sp/>IC<sp/>will<sp/>be<sp/>configured<sp/>with<sp/>when<sp/>performing<sp/>a<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1a47b979dd820b6ef26732bb4bcbee4994" kindref="member">tmc5240_setRegisterResetState</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5240__Constants_8h_1a6734d8367ae46049a05d4cc780eec27e" kindref="member">TMC5240_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a513e6004288636c3ebde0b89161cc0ef" kindref="member">registerResetState</ref>[i]<sp/>=<sp/>resetState[i];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>a<sp/>function<sp/>to<sp/>be<sp/>called<sp/>after<sp/>completion<sp/>of<sp/>the<sp/>configuration<sp/>mechanism</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1a91f3e4ef56641104f0d88e49ad81dfd4" kindref="member">tmc5240_setCallback</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/><ref refid="TMC5240_8h_1aa379e01e48a96a01e542986a5988d02c" kindref="member">tmc5240_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/>=<sp/>(<ref refid="Config_8h_1a4f94914f5c7a97833e65a3d10eedfdee" kindref="member">tmc_callback_config</ref>)<sp/>callback;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">uint8_t<sp/><ref refid="TMC5240_8c_1aa96a0c5063132d4ffc74856f27972f76" kindref="member">tmc5240_getSlaveAddress</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a65b6a9562e8db1fefb3d9b542c697588" kindref="member">slaveAddress</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1a0d7c131b0eb7e157ed1c55e1c391a06d" kindref="member">tmc5240_setSlaveAddress</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/>uint8_t<sp/>slaveAddress)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a65b6a9562e8db1fefb3d9b542c697588" kindref="member">slaveAddress</ref><sp/>=<sp/>slaveAddress;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function:<sp/>Configure<sp/>the<sp/>next<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1acb6e637e8785ae005d334f36f720a967" kindref="member">writeConfiguration</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*ptr<sp/>=<sp/>&amp;tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*settings;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a513e6004288636c3ebde0b89161cc0ef" kindref="member">registerResetState</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>resettable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC5240__Constants_8h_1a6734d8367ae46049a05d4cc780eec27e" kindref="member">TMC5240_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a08cbb9fb1db72595e25b38131ee3dba0" kindref="member">TMC_IS_RESETTABLE</ref>(tmc5240-&gt;<ref refid="structTMC5240TypeDef_1ad92117b68c93ecc48189766f648bcf87" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*ptr<sp/>&lt;<sp/><ref refid="TMC5240__Constants_8h_1a6734d8367ae46049a05d4cc780eec27e" kindref="member">TMC5240_REGISTER_COUNT</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5240_8h_1a6d6c24342a22b5d4b79e9475c41856d4" kindref="member">tmc5240_writeInt</ref>(tmc5240,<sp/>*ptr,<sp/>settings[*ptr]);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Finished<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="TMC5240_8h_1aa379e01e48a96a01e542986a5988d02c" kindref="member">tmc5240_callback</ref>)tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)(tmc5240,<sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>this<sp/>periodically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1acb083ef77cea38bb790fbea09451b5f0" kindref="member">tmc5240_periodicJob</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a0951588a12745a486f714916d920f409" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5240_8c_1acb6e637e8785ae005d334f36f720a967" kindref="member">writeConfiguration</ref>(tmc5240);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>XActual;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tickDiff;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>velocity<sp/>v<sp/>=<sp/>dx/dt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tickDiff<sp/>=<sp/>tick<sp/>-<sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a496c00a8b22bed7e2023507ab01d47e0" kindref="member">oldTick</ref>)<sp/>&gt;=<sp/>5)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XActual<sp/>=<sp/><ref refid="TMC5240_8h_1a0d20523098870ed54144470b13902dd5" kindref="member">tmc5240_readInt</ref>(tmc5240,<sp/><ref refid="TMC5240__Register_8h_1a954192effc46bfae3392f27a87499a1b" kindref="member">TMC5240_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ToDo<sp/>CHECK<sp/>2:<sp/>API<sp/>Compatibility<sp/>-<sp/>write<sp/>alternative<sp/>algorithm<sp/>w/o<sp/>floating<sp/>point?<sp/>(LH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a752d17bb362e1f22251acb8f29dbf6da" kindref="member">velocity</ref><sp/>=<sp/>(uint32_t)<sp/>((<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>((XActual<sp/>-<sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a7a83527c9d1d3b487f5d08226f3dc4d9" kindref="member">oldX</ref>)<sp/>/<sp/>(<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>tickDiff)<sp/>*<sp/>(<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>1048.576);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a7a83527c9d1d3b487f5d08226f3dc4d9" kindref="member">oldX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>XActual;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5240-&gt;<ref refid="structTMC5240TypeDef_1a496c00a8b22bed7e2023507ab01d47e0" kindref="member">oldTick</ref><sp/><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate<sp/>with<sp/>a<sp/>given<sp/>velocity<sp/>(to<sp/>the<sp/>right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1a5ada932099b3418c6147f287907c8f4b" kindref="member">tmc5240_rotate</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>absolute<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8h_1a6d6c24342a22b5d4b79e9475c41856d4" kindref="member">tmc5240_writeInt</ref>(tmc5240,<sp/><ref refid="TMC5240__Register_8h_1afadaec7d20cef075d42ff933b2e65c0c" kindref="member">TMC5240_VMAX</ref>,<sp/>abs(velocity));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8h_1a6d6c24342a22b5d4b79e9475c41856d4" kindref="member">tmc5240_writeInt</ref>(tmc5240,<sp/><ref refid="TMC5240__Register_8h_1a3aa2dcd7499c3f86d0d620bfd787dc03" kindref="member">TMC5240_RAMPMODE</ref>,<sp/>(velocity<sp/>&gt;=<sp/>0)<sp/>?<sp/><ref refid="TMC5240__Constants_8h_1a9ac7d6b1102b199dbb121e90ab8de344" kindref="member">TMC5240_MODE_VELPOS</ref><sp/>:<sp/><ref refid="TMC5240__Constants_8h_1a2fa5afb9cc70d806346412b7601c7575" kindref="member">TMC5240_MODE_VELNEG</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1a9bea7d79fb996927e0f4b0c867fc650d" kindref="member">tmc5240_right</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/>uint32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8c_1a5ada932099b3418c6147f287907c8f4b" kindref="member">tmc5240_rotate</ref>(tmc5240,<sp/>velocity);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1ac8c06f317a23bd942794327bf97c0d00" kindref="member">tmc5240_left</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/>uint32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8c_1a5ada932099b3418c6147f287907c8f4b" kindref="member">tmc5240_rotate</ref>(tmc5240,<sp/>-velocity);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stop<sp/>moving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1aaaeecf1ad5cb43cb5f7cfafb97136b19" kindref="member">tmc5240_stop</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8c_1a5ada932099b3418c6147f287907c8f4b" kindref="member">tmc5240_rotate</ref>(tmc5240,<sp/>0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>a<sp/>specified<sp/>position<sp/>with<sp/>a<sp/>given<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1a702d04620f61614c3b5440496bffe2ba" kindref="member">tmc5240_moveTo</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8h_1a6d6c24342a22b5d4b79e9475c41856d4" kindref="member">tmc5240_writeInt</ref>(tmc5240,<sp/><ref refid="TMC5240__Register_8h_1a3aa2dcd7499c3f86d0d620bfd787dc03" kindref="member">TMC5240_RAMPMODE</ref>,<sp/><ref refid="TMC5240__Constants_8h_1a2ab6da5e38d473de2467c64a247dc8fa" kindref="member">TMC5240_MODE_POSITION</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VMAX<sp/>also<sp/>holds<sp/>the<sp/>target<sp/>velocity<sp/>in<sp/>velocity<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-write<sp/>the<sp/>position<sp/>mode<sp/>maximum<sp/>velocity<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8h_1a6d6c24342a22b5d4b79e9475c41856d4" kindref="member">tmc5240_writeInt</ref>(tmc5240,<sp/><ref refid="TMC5240__Register_8h_1afadaec7d20cef075d42ff933b2e65c0c" kindref="member">TMC5240_VMAX</ref>,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8h_1a6d6c24342a22b5d4b79e9475c41856d4" kindref="member">tmc5240_writeInt</ref>(tmc5240,<sp/><ref refid="TMC5240__Register_8h_1a9154a6e65e5814f474a3714d835043bb" kindref="member">TMC5240_XTARGET</ref>,<sp/>position);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Move<sp/>by<sp/>a<sp/>given<sp/>amount<sp/>with<sp/>a<sp/>given<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>write<sp/>the<sp/>absolute<sp/>target<sp/>position<sp/>to<sp/>*ticks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5240_8c_1a6f00716e01977abfecaa2313db565f67" kindref="member">tmc5240_moveBy</ref>(<ref refid="structTMC5240TypeDef" kindref="compound">TMC5240TypeDef</ref><sp/>*tmc5240,<sp/>int32_t<sp/>*ticks,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>actual<sp/>position<sp/>and<sp/>add<sp/>numbers<sp/>of<sp/>ticks<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>*ticks<sp/>+=<sp/><ref refid="TMC5240_8h_1a0d20523098870ed54144470b13902dd5" kindref="member">tmc5240_readInt</ref>(tmc5240,<sp/><ref refid="TMC5240__Register_8h_1a954192effc46bfae3392f27a87499a1b" kindref="member">TMC5240_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5240_8c_1a702d04620f61614c3b5440496bffe2ba" kindref="member">tmc5240_moveTo</ref>(tmc5240,<sp/>*ticks,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5240/TMC5240.c"/>
  </compounddef>
</doxygen>
