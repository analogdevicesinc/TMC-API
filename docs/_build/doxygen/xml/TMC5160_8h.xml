<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC5160_8h" kind="file" language="C++">
    <compoundname>TMC5160.h</compoundname>
    <includes refid="API__Header_8h" local="yes">tmc/helpers/API_Header.h</includes>
    <includes refid="TMC5160__Register_8h" local="yes">TMC5160_Register.h</includes>
    <includes refid="TMC5160__Constants_8h" local="yes">TMC5160_Constants.h</includes>
    <includes refid="TMC5160__Fields_8h" local="yes">TMC5160_Fields.h</includes>
    <includedby refid="TMC5160_8c" local="yes">TMC5160.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="11">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="9">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="12">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="5">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC5160.h</label>
        <link refid="TMC5160_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>TMC5160_Constants.h</label>
        <link refid="TMC5160__Constants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC5160_Fields.h</label>
        <link refid="TMC5160__Fields_8h"/>
      </node>
      <node id="14">
        <label>TMC5160_Register.h</label>
        <link refid="TMC5160__Register_8h"/>
      </node>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>TMC5160.c</label>
        <link refid="TMC5160_8c"/>
      </node>
      <node id="1">
        <label>TMC5160.h</label>
        <link refid="TMC5160_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structTMC5160TypeDef" prot="public">TMC5160TypeDef</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="TMC5160_8h_1a8ac5b0cc1d54425312aabf3361ba178a" prot="public" static="no">
        <name>TMC5160_FIELD_READ</name>
        <param><defname>tdef</defname></param>
        <param><defname>address</defname></param>
        <param><defname>mask</defname></param>
        <param><defname>shift</defname></param>
        <initializer>	<ref refid="Macros_8h_1afc21f29c5cf2d76aab227e33233cf357" kindref="member">FIELD_GET</ref>(<ref refid="TMC5160_8c_1a6eded76f9a83cdc3ee64e95408f68f5d" kindref="member">tmc5160_readInt</ref>(tdef, address), mask, shift)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="19" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1a1644d25eb21db1b44f95f4d9786172a5" prot="public" static="no">
        <name>TMC5160_FIELD_WRITE</name>
        <param><defname>tdef</defname></param>
        <param><defname>address</defname></param>
        <param><defname>mask</defname></param>
        <param><defname>shift</defname></param>
        <param><defname>value</defname></param>
        <initializer>	(<ref refid="TMC5160_8c_1ace8766f89e44d6ab19e6ce7d50620bf8" kindref="member">tmc5160_writeInt</ref>(tdef, address, <ref refid="Macros_8h_1a39ccda3204632fdd991deed3c65cf568" kindref="member">FIELD_SET</ref>(<ref refid="TMC5160_8c_1a6eded76f9a83cdc3ee64e95408f68f5d" kindref="member">tmc5160_readInt</ref>(tdef, address), mask, shift, value)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="21" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1a2131e64583dbc393ccd167bb228d4c85" prot="public" static="no">
        <name>R00</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="41" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1a8c59c1bc1280bcaa7ef9106a359f38f4" prot="public" static="no">
        <name>R09</name>
        <initializer>0x00010606</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="42" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1aaf1bf4b35b11c67d0cf8b2a7d396f5bd" prot="public" static="no">
        <name>R0A</name>
        <initializer>0x00080400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="43" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1a48106da52f76c4ac1faceeff79eb1949" prot="public" static="no">
        <name>R10</name>
        <initializer>0x00070A03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="44" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1ad5379c7f0680774e2e22420b793fd266" prot="public" static="no">
        <name>R11</name>
        <initializer>0x0000000A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="45" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1aae14785c3a6e0b9db814b144d8604a7e" prot="public" static="no">
        <name>R2B</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="46" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1a34579d700931d8c250d1835b34264705" prot="public" static="no">
        <name>R3A</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="47" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1a013e4296fbb7ad84bcf4def3205402b3" prot="public" static="no">
        <name>R6C</name>
        <initializer>0x00410153</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="48" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="TMC5160_8h_1a27e742937d6fb6b74dc8d5dfb9fd56a4" prot="public" static="no">
        <name>R70</name>
        <initializer>0xC40C001E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="49" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="49" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="TMC5160_8h_1a27e50784a6acc508f0bd06fe5910554f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tmc5160_callback) (TMC5160TypeDef *, ConfigState)</definition>
        <argsstring>)(TMC5160TypeDef *, ConfigState)</argsstring>
        <name>tmc5160_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="38" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="TMC5160_8h_1afa2d9d3fccbb75decd78ca26db369e68" prot="public" static="yes" mutable="no">
        <type>const int32_t</type>
        <definition>const int32_t tmc5160_defaultRegisterResetState[TMC5160_REGISTER_COUNT]</definition>
        <argsstring>[TMC5160_REGISTER_COUNT]</argsstring>
        <name>tmc5160_defaultRegisterResetState</name>
        <initializer>=
{

	<ref refid="TMC2208_8h_1a2131e64583dbc393ccd167bb228d4c85" kindref="member">R00</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   <ref refid="TMC5160_8h_1a8c59c1bc1280bcaa7ef9106a359f38f4" kindref="member">R09</ref>, <ref refid="TMC2240_8h_1aaf1bf4b35b11c67d0cf8b2a7d396f5bd" kindref="member">R0A</ref>, 0,   0,   0,   0,   0, 
	<ref refid="TMC2130_8h_1a48106da52f76c4ac1faceeff79eb1949" kindref="member">R10</ref>, <ref refid="TMC2208_8h_1ad5379c7f0680774e2e22420b793fd266" kindref="member">R11</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   <ref refid="TMC2240_8h_1aae14785c3a6e0b9db814b144d8604a7e" kindref="member">R2B</ref>, 0,   0,   0,   0, 
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   <ref refid="TMC2240_8h_1a34579d700931d8c250d1835b34264705" kindref="member">R3A</ref>, 0,   0,   0,   0,   0, 
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
	0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
	<ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, <ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>, 0,   0,   <ref refid="TMC2130_8h_1a013e4296fbb7ad84bcf4def3205402b3" kindref="member">R6C</ref>, 0,   0,   0, 
	<ref refid="TMC2160_8h_1a27e742937d6fb6b74dc8d5dfb9fd56a4" kindref="member">R70</ref>, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="51" column="22" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="variable" id="TMC5160_8h_1abf95541ee90eacce911e65714ea52439" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t tmc5160_defaultRegisterAccess[TMC5160_REGISTER_COUNT]</definition>
        <argsstring>[TMC5160_REGISTER_COUNT]</argsstring>
        <name>tmc5160_defaultRegisterAccess</name>
        <initializer>=
{

	0x03, 0x23, 0x01, 0x02, 0x13, 0x02, 0x02, 0x01, 0x03, 0x02, 0x02, 0x02, 0x01, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	0x02, 0x02, 0x01, 0x02, 0x02, 0x02, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	0x03, 0x03, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 0x02, 0x02, 0x02, 0x03, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	<ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 0x02, 0x03, 0x23, 0x01, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 0x03, 0x03, 0x02, 0x23, 0x01, 0x02, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	<ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	<ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, 
	0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x01, 0x01, 0x03, 0x02, 0x02, 0x01, 
	0x42, 0x01, 0x01, 0x01, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>, <ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="84" column="22" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="84" bodyend="95"/>
      </memberdef>
      <memberdef kind="variable" id="TMC5160_8h_1a32ac73a5ada87c102d344ade367016a8" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structTMCRegisterConstant" kindref="compound">TMCRegisterConstant</ref></type>
        <definition>const TMCRegisterConstant tmc5160_RegisterConstants[]</definition>
        <argsstring>[]</argsstring>
        <name>tmc5160_RegisterConstants</name>
        <initializer>=
{		
		{ 0x60, 0xAAAAB554 }, 
		{ 0x61, 0x4A9554AA }, 
		{ 0x62, 0x24492929 }, 
		{ 0x63, 0x10104222 }, 
		{ 0x64, 0xFBFFFFFF }, 
		{ 0x65, 0xB5BB777D }, 
		{ 0x66, 0x49295556 }, 
		{ 0x67, 0x00404222 }, 
		{ 0x68, 0xFFFF8056 }, 
		{ 0x69, 0x00F70000 }, 
		{ 0x70, 0xC40C001E }  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="101" column="34" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" bodystart="101" bodyend="114"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC5160_8h_1a59ea3ae15a64274287cec030fcd76f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_writeDatagram</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)</argsstring>
        <name>tmc5160_writeDatagram</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="116" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="19" bodyend="30" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1ace8766f89e44d6ab19e6ce7d50620bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_writeInt</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, uint8_t address, int32_t value)</argsstring>
        <name>tmc5160_writeInt</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="117" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="33" bodyend="36" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a6eded76f9a83cdc3ee64e95408f68f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc5160_readInt</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, uint8_t address)</argsstring>
        <name>tmc5160_readInt</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="118" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="39" bodyend="56" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="118" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1ae43f81f364129fba579c34f8ff9fde71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_init</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, uint8_t channel, ConfigurationTypeDef *config, const int32_t *registerResetState)</argsstring>
        <name>tmc5160_init</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="120" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="64" bodyend="82" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1ad95fc24beb0509cecd330090614196fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_fillShadowRegisters</definition>
        <argsstring>(TMC5160TypeDef *tmc5160)</argsstring>
        <name>tmc5160_fillShadowRegisters</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="121" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="87" bodyend="117" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a9888fa4179f1b85f5a8f32dda11a2523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5160_reset</definition>
        <argsstring>(TMC5160TypeDef *tmc5160)</argsstring>
        <name>tmc5160_reset</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="122" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="120" bodyend="137" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="122" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1acc7646425c2d85c0572bb5d9704c33c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5160_restore</definition>
        <argsstring>(TMC5160TypeDef *tmc5160)</argsstring>
        <name>tmc5160_restore</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="123" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="141" bodyend="150" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="123" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1ad871ec9132217715f4f46803b98123ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_setRegisterResetState</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, const int32_t *resetState)</argsstring>
        <name>tmc5160_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="124" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="153" bodyend="160" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a8d40546b3f88cf48f5f60f5aa87249d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_setCallback</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, tmc5160_callback callback)</argsstring>
        <name>tmc5160_setCallback</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type><ref refid="TMC5160_8h_1a27e50784a6acc508f0bd06fe5910554f" kindref="member">tmc5160_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="125" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="163" bodyend="166" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1acb8ea70c2b9ea880bfdc341aee290da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_periodicJob</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, uint32_t tick)</argsstring>
        <name>tmc5160_periodicJob</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="126" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="210" bodyend="231" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a7341c53a599afe8d8fbcb18168262a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_rotate</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, int32_t velocity)</argsstring>
        <name>tmc5160_rotate</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="128" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="234" bodyend="240" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a2a61fd6a8b201d5e931fc80e7340a8dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_right</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, uint32_t velocity)</argsstring>
        <name>tmc5160_right</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="129" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="243" bodyend="246" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a2616ca8064288941c76181d62cd84a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_left</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, uint32_t velocity)</argsstring>
        <name>tmc5160_left</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="130" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="249" bodyend="252" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="130" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a540f4250cfe45445131fc4014959750e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_stop</definition>
        <argsstring>(TMC5160TypeDef *tmc5160)</argsstring>
        <name>tmc5160_stop</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="131" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="255" bodyend="258" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1aece8efc299fc76a0dcb695fce9f5c46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_moveTo</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc5160_moveTo</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="132" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="261" bodyend="270" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a5b646ed24519b9911c81aa945dddf9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5160_moveBy</definition>
        <argsstring>(TMC5160TypeDef *tmc5160, int32_t *ticks, uint32_t velocityMax)</argsstring>
        <name>tmc5160_moveBy</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="133" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="274" bodyend="280" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="TMC5160_8h_1a4cc8dc8b3fc0deb133ac71fde5d8fd1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5160_consistencyCheck</definition>
        <argsstring>(TMC5160TypeDef *tmc5160)</argsstring>
        <name>tmc5160_consistencyCheck</name>
        <param>
          <type><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref> *</type>
          <declname>tmc5160</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" line="135" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.c" bodystart="282" bodyend="295" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h" declline="135" declcolumn="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TMC_IC_TMC5160_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC_IC_TMC5160_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="API__Header_8h" kindref="compound">tmc/helpers/API_Header.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5160__Register_8h" kindref="compound">TMC5160_Register.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5160__Constants_8h" kindref="compound">TMC5160_Constants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5160__Fields_8h" kindref="compound">TMC5160_Fields.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="TMC5160_8h_1a8ac5b0cc1d54425312aabf3361ba178a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC5160_FIELD_READ(tdef,<sp/>address,<sp/>mask,<sp/>shift)<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>FIELD_GET(tmc5160_readInt(tdef,<sp/>address),<sp/>mask,<sp/>shift)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="TMC5160_8h_1a1644d25eb21db1b44f95f4d9786172a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMC5160_FIELD_WRITE(tdef,<sp/>address,<sp/>mask,<sp/>shift,<sp/>value)<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(tmc5160_writeInt(tdef,<sp/>address,<sp/>FIELD_SET(tmc5160_readInt(tdef,<sp/>address),<sp/>mask,<sp/>shift,<sp/>value)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Factor<sp/>between<sp/>10ms<sp/>units<sp/>and<sp/>internal<sp/>units<sp/>for<sp/>16MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>TPOWERDOWN_FACTOR<sp/>(4.17792*100.0/255.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TPOWERDOWN_FACTOR<sp/>=<sp/>k<sp/>*<sp/>100<sp/>/<sp/>255<sp/>where<sp/>k<sp/>=<sp/>2^18<sp/>*<sp/>255<sp/>/<sp/>fClk<sp/>for<sp/>fClk<sp/>=<sp/>16000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Typedefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structTMC5160TypeDef" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31" refid="structTMC5160TypeDef_1a06d2b8e04e11b3b944a2d868f7493b17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*<ref refid="structTMC5160TypeDef_1a06d2b8e04e11b3b944a2d868f7493b17" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="32" refid="structTMC5160TypeDef_1a5b2aa44ef6db9516b79b3af3a19d6833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>velocity,<sp/><ref refid="structTMC5160TypeDef_1a5b2aa44ef6db9516b79b3af3a19d6833" kindref="member">oldX</ref>;</highlight></codeline>
<codeline lineno="33" refid="structTMC5160TypeDef_1a504b777ec6f59cc707af4979c7615af4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structTMC5160TypeDef_1a504b777ec6f59cc707af4979c7615af4" kindref="member">oldTick</ref>;</highlight></codeline>
<codeline lineno="34" refid="structTMC5160TypeDef_1aee03b85a41c18d0e8132e161f0d1711a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>registerResetState[<ref refid="TMC5160__Constants_8h_1a045a2c691f4ba0c974058a812215c5cf" kindref="member">TMC5160_REGISTER_COUNT</ref>];</highlight></codeline>
<codeline lineno="35" refid="structTMC5160TypeDef_1a093eb8fcfcb7ba807e3a560a4e4e1648" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>registerAccess[<ref refid="TMC5160__Constants_8h_1a045a2c691f4ba0c974058a812215c5cf" kindref="member">TMC5160_REGISTER_COUNT</ref>];</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="TMC5160_8h_1a27e50784a6acc508f0bd06fe5910554f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="TMC5160_8h_1a27e50784a6acc508f0bd06fe5910554f" kindref="member">tmc5160_callback</ref>)(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref>*,<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837f" kindref="member">ConfigState</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>Register<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="TMC5160_8h_1a2131e64583dbc393ccd167bb228d4c85" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R00<sp/>0x00000008<sp/><sp/></highlight><highlight class="comment">//<sp/>GCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="TMC5160_8h_1a8c59c1bc1280bcaa7ef9106a359f38f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R09<sp/>0x00010606<sp/><sp/></highlight><highlight class="comment">//<sp/>SHORTCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="TMC5160_8h_1aaf1bf4b35b11c67d0cf8b2a7d396f5bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R0A<sp/>0x00080400<sp/><sp/></highlight><highlight class="comment">//<sp/>DRVCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="TMC5160_8h_1a48106da52f76c4ac1faceeff79eb1949" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R10<sp/>0x00070A03<sp/><sp/></highlight><highlight class="comment">//<sp/>IHOLD_IRUN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="TMC5160_8h_1ad5379c7f0680774e2e22420b793fd266" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R11<sp/>0x0000000A<sp/><sp/></highlight><highlight class="comment">//<sp/>TPOWERDOWN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="TMC5160_8h_1aae14785c3a6e0b9db814b144d8604a7e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R2B<sp/>0x00000001<sp/><sp/></highlight><highlight class="comment">//<sp/>VSTOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="TMC5160_8h_1a34579d700931d8c250d1835b34264705" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R3A<sp/>0x00010000<sp/><sp/></highlight><highlight class="comment">//<sp/>ENC_CONST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="TMC5160_8h_1a013e4296fbb7ad84bcf4def3205402b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R6C<sp/>0x00410153<sp/><sp/></highlight><highlight class="comment">//<sp/>CHOPCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="TMC5160_8h_1a27e742937d6fb6b74dc8d5dfb9fd56a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R70<sp/>0xC40C001E<sp/><sp/></highlight><highlight class="comment">//<sp/>PWMCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="TMC5160_8h_1afa2d9d3fccbb75decd78ca26db369e68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="TMC5160_8h_1afa2d9d3fccbb75decd78ca26db369e68" kindref="member">tmc5160_defaultRegisterResetState</ref>[<ref refid="TMC5160__Constants_8h_1a045a2c691f4ba0c974058a812215c5cf" kindref="member">TMC5160_REGISTER_COUNT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>0,<sp/><sp/><sp/>1,<sp/><sp/><sp/>2,<sp/><sp/><sp/>3,<sp/><sp/><sp/>4,<sp/><sp/><sp/>5,<sp/><sp/><sp/>6,<sp/><sp/><sp/>7,<sp/><sp/><sp/>8,<sp/><sp/><sp/>9,<sp/><sp/><sp/>A,<sp/><sp/><sp/>B,<sp/><sp/><sp/>C,<sp/><sp/><sp/>D,<sp/><sp/><sp/>E,<sp/><sp/><sp/>F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5160_8h_1a2131e64583dbc393ccd167bb228d4c85" kindref="member">R00</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="TMC5160_8h_1a8c59c1bc1280bcaa7ef9106a359f38f4" kindref="member">R09</ref>,<sp/><ref refid="TMC5160_8h_1aaf1bf4b35b11c67d0cf8b2a7d396f5bd" kindref="member">R0A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x00<sp/>-<sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5160_8h_1a48106da52f76c4ac1faceeff79eb1949" kindref="member">R10</ref>,<sp/><ref refid="TMC5160_8h_1ad5379c7f0680774e2e22420b793fd266" kindref="member">R11</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x10<sp/>-<sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="TMC5160_8h_1aae14785c3a6e0b9db814b144d8604a7e" kindref="member">R2B</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x20<sp/>-<sp/>0x2F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="TMC5160_8h_1a34579d700931d8c250d1835b34264705" kindref="member">R3A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x30<sp/>-<sp/>0x3F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x40<sp/>-<sp/>0x4F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x50<sp/>-<sp/>0x5F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/><ref refid="RegisterAccess_8h_1a1db2da50e48d48d6cc41e3ff41071113" kindref="member">N_A</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/><ref refid="TMC5160_8h_1a013e4296fbb7ad84bcf4def3205402b3" kindref="member">R6C</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x60<sp/>-<sp/>0x6F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5160_8h_1a27e742937d6fb6b74dc8d5dfb9fd56a4" kindref="member">R70</ref>,<sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>0x70<sp/>-<sp/>0x7F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undefine<sp/>the<sp/>default<sp/>register<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>prevents<sp/>warnings<sp/>in<sp/>case<sp/>multiple<sp/>TMC-API<sp/>chip<sp/>headers<sp/>are<sp/>included<sp/>at<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R09</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R0A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R2B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R3A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R6C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>R70</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>access<sp/>permissions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x00:<sp/>none<sp/>(reserved)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x01:<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x02:<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x03:<sp/>read/write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x13:<sp/>read/write,<sp/>separate<sp/>functions/values<sp/>for<sp/>reading<sp/>or<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x23:<sp/>read/write,<sp/>flag<sp/>register<sp/>(write<sp/>to<sp/>clear)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>0x42:<sp/>write,<sp/>has<sp/>hardware<sp/>presets<sp/>on<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="TMC5160_8h_1abf95541ee90eacce911e65714ea52439" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="TMC5160_8h_1abf95541ee90eacce911e65714ea52439" kindref="member">tmc5160_defaultRegisterAccess</ref>[<ref refid="TMC5160__Constants_8h_1a045a2c691f4ba0c974058a812215c5cf" kindref="member">TMC5160_REGISTER_COUNT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/>A<sp/><sp/><sp/><sp/><sp/>B<sp/><sp/><sp/><sp/><sp/>C<sp/><sp/><sp/><sp/><sp/>D<sp/><sp/><sp/><sp/><sp/>E<sp/><sp/><sp/><sp/><sp/>F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x23,<sp/>0x01,<sp/>0x02,<sp/>0x13,<sp/>0x02,<sp/>0x02,<sp/>0x01,<sp/>0x03,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x01,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x00<sp/>-<sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>0x02,<sp/>0x02,<sp/>0x01,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x10<sp/>-<sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>0x03,<sp/>0x03,<sp/>0x01,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/>0x02,<sp/>0x02,<sp/>0x02,<sp/>0x03,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x20<sp/>-<sp/>0x2F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/>0x02,<sp/>0x03,<sp/>0x23,<sp/>0x01,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/>0x03,<sp/>0x03,<sp/>0x02,<sp/>0x23,<sp/>0x01,<sp/>0x02,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x30<sp/>-<sp/>0x3F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x40<sp/>-<sp/>0x4F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/></highlight><highlight class="comment">//<sp/>0x50<sp/>-<sp/>0x5F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x42,<sp/>0x01,<sp/>0x01,<sp/>0x03,<sp/>0x02,<sp/>0x02,<sp/>0x01,<sp/></highlight><highlight class="comment">//<sp/>0x60<sp/>-<sp/>0x6F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>0x42,<sp/>0x01,<sp/>0x01,<sp/>0x01,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref>,<sp/><ref refid="RegisterAccess_8h_1a0b4daa7b938d40350dfc124df5dde591" kindref="member">____</ref><sp/><sp/></highlight><highlight class="comment">//<sp/>0x70<sp/>-<sp/>0x7F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>constants<sp/>(only<sp/>required<sp/>for<sp/>0x42<sp/>registers,<sp/>since<sp/>we<sp/>do<sp/>not<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>any<sp/>way<sp/>to<sp/>find<sp/>out<sp/>the<sp/>content<sp/>but<sp/>want<sp/>to<sp/>hold<sp/>the<sp/>actual<sp/>value<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shadow<sp/>register<sp/>so<sp/>an<sp/>application<sp/>(i.e.<sp/>the<sp/>TMCL<sp/>IDE)<sp/>can<sp/>still<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>values.<sp/>This<sp/>only<sp/>works<sp/>when<sp/>the<sp/>register<sp/>content<sp/>is<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="TMC5160_8h_1a32ac73a5ada87c102d344ade367016a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTMCRegisterConstant" kindref="compound">TMCRegisterConstant</ref><sp/><ref refid="TMC5160_8h_1a32ac73a5ada87c102d344ade367016a8" kindref="member">tmc5160_RegisterConstants</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ascending<sp/>addresses!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x60,<sp/>0xAAAAB554<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x61,<sp/>0x4A9554AA<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x62,<sp/>0x24492929<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x63,<sp/>0x10104222<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x64,<sp/>0xFBFFFFFF<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x65,<sp/>0xB5BB777D<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[5]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x66,<sp/>0x49295556<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[6]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x67,<sp/>0x00404222<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUT[7]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x68,<sp/>0xFFFF8056<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUTSEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x69,<sp/>0x00F70000<sp/>},<sp/></highlight><highlight class="comment">//<sp/>MSLUTSTART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x70,<sp/>0xC40C001E<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>PWMCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1a59ea3ae15a64274287cec030fcd76f81" kindref="member">tmc5160_writeDatagram</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1ace8766f89e44d6ab19e6ce7d50620bf8" kindref="member">tmc5160_writeInt</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">int32_t<sp/><ref refid="TMC5160_8h_1a6eded76f9a83cdc3ee64e95408f68f5d" kindref="member">tmc5160_readInt</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>uint8_t<sp/>address);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1ae43f81f364129fba579c34f8ff9fde71" kindref="member">tmc5160_init</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1ad95fc24beb0509cecd330090614196fb" kindref="member">tmc5160_fillShadowRegisters</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">uint8_t<sp/><ref refid="TMC5160_8h_1a9888fa4179f1b85f5a8f32dda11a2523" kindref="member">tmc5160_reset</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">uint8_t<sp/><ref refid="TMC5160_8h_1acc7646425c2d85c0572bb5d9704c33c8" kindref="member">tmc5160_restore</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1ad871ec9132217715f4f46803b98123ce" kindref="member">tmc5160_setRegisterResetState</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1a8d40546b3f88cf48f5f60f5aa87249d4" kindref="member">tmc5160_setCallback</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/><ref refid="TMC5160_8h_1a27e50784a6acc508f0bd06fe5910554f" kindref="member">tmc5160_callback</ref><sp/>callback);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1acb8ea70c2b9ea880bfdc341aee290da4" kindref="member">tmc5160_periodicJob</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>uint32_t<sp/>tick);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1a7341c53a599afe8d8fbcb18168262a36" kindref="member">tmc5160_rotate</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>int32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1a2a61fd6a8b201d5e931fc80e7340a8dc" kindref="member">tmc5160_right</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>uint32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1a2616ca8064288941c76181d62cd84a43" kindref="member">tmc5160_left</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>uint32_t<sp/>velocity);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1a540f4250cfe45445131fc4014959750e" kindref="member">tmc5160_stop</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1aece8efc299fc76a0dcb695fce9f5c46e" kindref="member">tmc5160_moveTo</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5160_8h_1a5b646ed24519b9911c81aa945dddf9b6" kindref="member">tmc5160_moveBy</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160,<sp/>int32_t<sp/>*ticks,<sp/>uint32_t<sp/>velocityMax);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">uint8_t<sp/><ref refid="TMC5160_8h_1a4cc8dc8b3fc0deb133ac71fde5d8fd1c" kindref="member">tmc5160_consistencyCheck</ref>(<ref refid="structTMC5160TypeDef" kindref="compound">TMC5160TypeDef</ref><sp/>*tmc5160);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TMC_IC_TMC5160_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5160/TMC5160.h"/>
  </compounddef>
</doxygen>
