<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC4361A_8c" kind="file" language="C++">
    <compoundname>TMC4361A.c</compoundname>
    <includes refid="TMC4361A_8h" local="yes">TMC4361A.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC4361A.c</label>
        <link refid="TMC4361A_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC4361A.h</label>
        <link refid="TMC4361A_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC4361A_Constants.h</label>
        <link refid="TMC4361A__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TMC4361A_Fields.h</label>
        <link refid="TMC4361A__Fields_8h"/>
      </node>
      <node id="15">
        <label>TMC4361A_Register.h</label>
        <link refid="TMC4361A_2TMC4361A__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC4361A_8c_1a5c02ff8065f2b0e054b47db794af7cbd" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_readWriteArray</definition>
        <argsstring>(uint8_t channel, uint8_t *data, size_t length)</argsstring>
        <name>tmc4361A_readWriteArray</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="15" column="13" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" declline="15" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1ae0b48eb8f564a7a57968f65782fba2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_writeDatagram</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t address, uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)</argsstring>
        <name>tmc4361A_writeDatagram</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="19" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="19" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_writeInt</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t address, int32_t value)</argsstring>
        <name>tmc4361A_writeInt</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="36" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc4361A_readInt</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t address)</argsstring>
        <name>tmc4361A_readInt</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="41" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="41" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a6312dc9b5c944cc5b70428ce94956c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_readWriteCover</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t *data, size_t length)</argsstring>
        <name>tmc4361A_readWriteCover</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="65" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="65" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a27fcec3fd6dd689fa20e2450efe069d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_init</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t channel, ConfigurationTypeDef *config, const int32_t *registerResetState)</argsstring>
        <name>tmc4361A_init</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="122" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="122" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1ae9d6e420ba2d283541f69959e40f256f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_fillShadowRegisters</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_fillShadowRegisters</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="145" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="145" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a59de3dce7caad13334048229fb6aa9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc4361A_reset</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_reset</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="175" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="175" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a13354981317fcd1d299e8fdedc03c535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc4361A_restore</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_restore</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="192" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="192" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a13f4672813b41819f431b8cdb7e1ba4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_setRegisterResetState</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, const int32_t *resetState)</argsstring>
        <name>tmc4361A_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="203" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="203" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a7cdbfef821d403936981475bc9c5cefe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_setCallback</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, tmc4361A_callback callback)</argsstring>
        <name>tmc4361A_setCallback</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type><ref refid="TMC4361A_8h_1a414bd96a0662dfef1c683380b0aec0c9" kindref="member">tmc4361A_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="210" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a178bbeda3257d6df4ef596323789a399" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tmc4361A_writeConfiguration</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_writeConfiguration</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="215" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="215" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a9ee994f88ca5e297ba9e832e65b0200b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_periodicJob</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint32_t tick)</argsstring>
        <name>tmc4361A_periodicJob</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="250" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="250" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1ae056fff57942958d2ae12b23de1b813e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_rotate</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t velocity)</argsstring>
        <name>tmc4361A_rotate</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="265" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="265" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a7b15988c92b8df55f6e7073fbffacadb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_right</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t velocity)</argsstring>
        <name>tmc4361A_right</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="273" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a2c75830b56d1a8b6d5a53848a65337ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_left</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t velocity)</argsstring>
        <name>tmc4361A_left</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="278" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1ac24ee00568f672d11a9e1e2cf2a54728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_stop</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_stop</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="283" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a34ac4e981b59ede2f4ac8af4bd30ce6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_moveTo</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc4361A_moveTo</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="288" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="288" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a0272ee98d59ec2969c793686607de4f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc4361A_moveBy</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, int32_t *ticks, uint32_t velocityMax)</argsstring>
        <name>tmc4361A_moveBy</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="299" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="299" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a5adf64fcb388fc1449dfbb1cbd062d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc4361A_discardVelocityDecimals</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>tmc4361A_discardVelocityDecimals</name>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="307" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="307" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a4d5c066857327dfe87b5e586dd2fdb9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t tmc4361A_moveToNextFullstep</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A)</argsstring>
        <name>tmc4361A_moveToNextFullstep</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="316" column="16" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="316" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="TMC4361A_8c_1a245a387f8b545a228ffc2db9aa8d8e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc4361A_calibrateClosedLoop</definition>
        <argsstring>(TMC4361ATypeDef *tmc4361A, uint8_t worker0master1)</argsstring>
        <name>tmc4361A_calibrateClosedLoop</name>
        <param>
          <type><ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref> *</type>
          <declname>tmc4361A</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>worker0master1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" line="352" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c" bodystart="352" bodyend="415"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC4361A_8h" kindref="compound">TMC4361A.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=&gt;<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Send<sp/>[length]<sp/>bytes<sp/>stored<sp/>in<sp/>the<sp/>[data]<sp/>array<sp/>over<sp/>SPI<sp/>and<sp/>overwrite<sp/>[data]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>replies.<sp/>data[0]<sp/>is<sp/>the<sp/>first<sp/>byte<sp/>sent<sp/>and<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a5c02ff8065f2b0e054b47db794af7cbd" kindref="member">tmc4361A_readWriteArray</ref>(uint8_t<sp/>channel,<sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>(x1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(x2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(x3<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>x4<sp/>to<sp/>the<sp/>given<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1ae0b48eb8f564a7a57968f65782fba2f6" kindref="member">tmc4361A_writeDatagram</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>address,<sp/>uint8_t<sp/>x1,<sp/>uint8_t<sp/>x2,<sp/>uint8_t<sp/>x3,<sp/>uint8_t<sp/>x4)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5]<sp/>=<sp/>{<sp/>address<sp/>|<sp/><ref refid="TMC4361A__Constants_8h_1a9e6452838a06ce2409d0061272908546" kindref="member">TMC4361A_WRITE_BIT</ref>,<sp/>x1,<sp/>x2,<sp/>x3,<sp/>x4<sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a5c02ff8065f2b0e054b47db794af7cbd" kindref="member">tmc4361A_readWriteArray</ref>(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a950eeb14d57ab315f18bedb28e3b7626" kindref="member">status</ref><sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((uint32_t)x1<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)x2<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(x3<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>x4;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>the<sp/>shadow<sp/>register<sp/>and<sp/>mark<sp/>the<sp/>register<sp/>dirty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a9a73313346b7e0f98529944a09b0099a" kindref="member">registerAccess</ref>[address]<sp/>|=<sp/><ref refid="RegisterAccess_8h_1ab7bf3c3ea0569faa301549892d541c37" kindref="member">TMC_ACCESS_DIRTY</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1ae0b48eb8f564a7a57968f65782fba2f6" kindref="member">tmc4361A_writeDatagram</ref>(tmc4361A,<sp/>address,<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>3),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>2),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>1),<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(value,<sp/>0));</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">int32_t<sp/><ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>address)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[5];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>address<sp/>=<sp/><ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="RegisterAccess_8h_1af08f0d12a2110808e943d969103914a8" kindref="member">TMC_IS_READABLE</ref>(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a9a73313346b7e0f98529944a09b0099a" kindref="member">registerAccess</ref>[address]))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[address];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a5c02ff8065f2b0e054b47db794af7cbd" kindref="member">tmc4361A_readWriteArray</ref>(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a5c02ff8065f2b0e054b47db794af7cbd" kindref="member">tmc4361A_readWriteArray</ref>(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref>,<sp/>&amp;data[0],<sp/>5);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a950eeb14d57ab315f18bedb28e3b7626" kindref="member">status</ref><sp/>=<sp/>data[0];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((uint32_t)data[1]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)data[2]<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(data[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>data[4];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Send<sp/>[length]<sp/>bytes<sp/>stored<sp/>in<sp/>the<sp/>[data]<sp/>array<sp/>to<sp/>a<sp/>driver<sp/>attached<sp/>to<sp/>the<sp/>TMC4361A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>overwrite<sp/>[data]<sp/>with<sp/>the<sp/>replies.<sp/>data[0]<sp/>is<sp/>the<sp/>first<sp/>byte<sp/>sent<sp/>and<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a6312dc9b5c944cc5b70428ce94956c6e" kindref="member">tmc4361A_readWriteCover</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffering<sp/>old<sp/>values<sp/>to<sp/>not<sp/>interrupt<sp/>manual<sp/>covering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>old_high<sp/>=<sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC4361A_2TMC4361A__Register_8h_1ae2b0906b4f26744b586c660504dc2fa0" kindref="member">TMC4361A_COVER_HIGH_WR</ref>];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>old_low<sp/>=<sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC4361A_2TMC4361A__Register_8h_1ad8b7e6ce41d53f27136c95783a3eb040" kindref="member">TMC4361A_COVER_LOW_WR</ref>];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>datagram<sp/>length<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>==<sp/>0<sp/>||<sp/>length<sp/>&gt;<sp/>8)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bytes[8]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tmp;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>data<sp/>into<sp/>buffer<sp/>of<sp/>maximum<sp/>cover<sp/>datagram<sp/>length<sp/>(8<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[i]<sp/>=<sp/>data[length-i-1];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>datagram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1ae0b48eb8f564a7a57968f65782fba2f6" kindref="member">tmc4361A_writeDatagram</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1ae2b0906b4f26744b586c660504dc2fa0" kindref="member">TMC4361A_COVER_HIGH_WR</ref>,<sp/>bytes[7],<sp/>bytes[6],<sp/>bytes[5],<sp/>bytes[4]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1ae0b48eb8f564a7a57968f65782fba2f6" kindref="member">tmc4361A_writeDatagram</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1ad8b7e6ce41d53f27136c95783a3eb040" kindref="member">TMC4361A_COVER_LOW_WR</ref>,<sp/>bytes[3],<sp/>bytes[2],<sp/>bytes[1],<sp/>bytes[0]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>datagram<sp/>completion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>CHECK<sp/>3:<sp/>Get<sp/>the<sp/>waiting<sp/>for<sp/>cover<sp/>completion<sp/>done<sp/>properly<sp/>(LH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>i++)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="Macros_8h_1a17941fdfe190c9268d99642ae9b101ca" kindref="member">ACCESS_ONCE</ref>(i);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1ad633d95a1ef6be8824f7c110a4ad2c6b" kindref="member">TMC4361A_COVER_DRV_HIGH_RD</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[4]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[5]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[6]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes[7]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>3);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1ab3a8390209f7114ef38600326f71fd72" kindref="member">TMC4361A_COVER_DRV_LOW_RD</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[0]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[1]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[2]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>2);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes[3]<sp/>=<sp/><ref refid="Bits_8h_1a9b7073baad817bd76a33a6ea18d20dcb" kindref="member">BYTE</ref>(tmp,<sp/>3);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>reply<sp/>to<sp/>the<sp/>data<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[length-i-1]<sp/>=<sp/>bytes[i];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rewriting<sp/>old<sp/>values<sp/>to<sp/>prevent<sp/>interrupting<sp/>manual<sp/>covering.<sp/>Imitating<sp/>unchanged<sp/>values<sp/>and<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1ae2b0906b4f26744b586c660504dc2fa0" kindref="member">TMC4361A_COVER_HIGH_WR</ref>,<sp/>old_high);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="TMC4361A_2TMC4361A__Register_8h_1ad8b7e6ce41d53f27136c95783a3eb040" kindref="member">TMC4361A_COVER_LOW_WR</ref>]<sp/>=<sp/>old_low;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provide<sp/>the<sp/>init<sp/>function<sp/>with<sp/>a<sp/>channel<sp/>index<sp/>(sent<sp/>back<sp/>in<sp/>the<sp/>SPI<sp/>callback),<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>ConfigurationTypeDef<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>int32_t<sp/>array<sp/>(size<sp/>128)<sp/>holding<sp/>the<sp/>reset<sp/>values<sp/>that<sp/>shall<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a27fcec3fd6dd689fa20e2450efe069d7" kindref="member">tmc4361A_init</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1afb5a931713d01f04810734247f81c27e" kindref="member">velocity</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1aa0b16b84812fdff95a8b83a21da94760" kindref="member">oldTick</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a85c3f8628f25b9e962ea8b4c155ee561" kindref="member">oldX</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref><sp/><sp/><sp/><sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a9a73313346b7e0f98529944a09b0099a" kindref="member">registerAccess</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="TMC4361A_8h_1aea4d2d9159afed513a1b03949fac0644" kindref="member">tmc4361A_defaultRegisterAccess</ref>[i];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a7fe82e2dc0f8cc7b4f6a95e01bedd79c" kindref="member">registerResetState</ref>[i]<sp/><sp/>=<sp/>registerResetState[i];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>shadow<sp/>registers<sp/>of<sp/>hardware<sp/>preset<sp/>non-readable<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Only<sp/>needed<sp/>if<sp/>you<sp/>want<sp/>to<sp/>read<sp/>out<sp/>those<sp/>registers<sp/>to<sp/>display<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(e.g.<sp/>for<sp/>the<sp/>TMCL<sp/>IDE<sp/>register<sp/>browser)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1ae9d6e420ba2d283541f69959e40f256f" kindref="member">tmc4361A_fillShadowRegisters</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>have<sp/>constants<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" kindref="member">tmc4361A_RegisterConstants</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>to<sp/>worry<sp/>about<sp/>hardware<sp/>preset,<sp/>write-only<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>not<sp/>yet<sp/>been<sp/>written<sp/>(no<sp/>dirty<sp/>bit)<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a9a73313346b7e0f98529944a09b0099a" kindref="member">registerAccess</ref>[i]<sp/>!=<sp/><ref refid="RegisterAccess_8h_1a0a68eeac67d2149074f3f6191d60b80c" kindref="member">TMC_ACCESS_W_PRESET</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>constant<sp/>list<sp/>for<sp/>the<sp/>current<sp/>address.<sp/>With<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>being<sp/>sorted<sp/>in<sp/>ascended<sp/>order,<sp/>we<sp/>can<sp/>walk<sp/>through<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>the<sp/>entry<sp/>with<sp/>an<sp/>address<sp/>equal<sp/>or<sp/>greater<sp/>than<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/><ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" kindref="member">tmc4361A_RegisterConstants</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" kindref="member">tmc4361A_RegisterConstants</ref>[j].address<sp/>&lt;<sp/>i))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abort<sp/>when<sp/>we<sp/>reach<sp/>the<sp/>end<sp/>of<sp/>the<sp/>constant<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/><ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" kindref="member">tmc4361A_RegisterConstants</ref>))</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>an<sp/>entry<sp/>for<sp/>our<sp/>current<sp/>address,<sp/>write<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" kindref="member">tmc4361A_RegisterConstants</ref>[j].address<sp/>==<sp/>i)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[i]<sp/>=<sp/><ref refid="TMC4361A_8h_1abae1bc077e163ea02285d7f0280b87ae" kindref="member">tmc4361A_RegisterConstants</ref>[j].<ref refid="structTMCRegisterConstant_1a8ee397638840f4461cd9b559fde7fc30" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">uint8_t<sp/><ref refid="TMC4361A_8c_1a59de3dce7caad13334048229fb6aa9d8" kindref="member">tmc4361A_reset</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>dirty<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a9a73313346b7e0f98529944a09b0099a" kindref="member">registerAccess</ref>[i]<sp/>&amp;=<sp/>~<ref refid="RegisterAccess_8h_1ab7bf3c3ea0569faa301549892d541c37" kindref="member">TMC_ACCESS_DIRTY</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837faf4b7eabf7d198b2f9b47d8c7a36c7d0f" kindref="member">CONFIG_RESET</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">uint8_t<sp/><ref refid="TMC4361A_8c_1a13354981317fcd1d299e8fdedc03c535" kindref="member">tmc4361A_restore</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a13f4672813b41819f431b8cdb7e1ba4f" kindref="member">tmc4361A_setRegisterResetState</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a7fe82e2dc0f8cc7b4f6a95e01bedd79c" kindref="member">registerResetState</ref>[i]<sp/>=<sp/>resetState[i];</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a7cdbfef821d403936981475bc9c5cefe" kindref="member">tmc4361A_setCallback</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/><ref refid="TMC4361A_8h_1a414bd96a0662dfef1c683380b0aec0c9" kindref="member">tmc4361A_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/>=<sp/>(<ref refid="Config_8h_1a4f94914f5c7a97833e65a3d10eedfdee" kindref="member">tmc_callback_config</ref>)<sp/>callback;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a178bbeda3257d6df4ef596323789a399" kindref="member">tmc4361A_writeConfiguration</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*ptr<sp/>=<sp/>&amp;tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*settings;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>==<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>&amp;tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[0];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>restorable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a70866cbed8c69a330b4aebc9a1e8287e" kindref="member">TMC_IS_RESTORABLE</ref>(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a9a73313346b7e0f98529944a09b0099a" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>&amp;tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a7fe82e2dc0f8cc7b4f6a95e01bedd79c" kindref="member">registerResetState</ref>[0];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>resettable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a08cbb9fb1db72595e25b38131ee3dba0" kindref="member">TMC_IS_RESETTABLE</ref>(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a9a73313346b7e0f98529944a09b0099a" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>&lt;<sp/><ref refid="TMC4361A__Constants_8h_1a847296faa563990f98d2d2cfb6e779e7" kindref="member">TMC4361A_REGISTER_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/>*ptr,<sp/>settings[*ptr]);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="TMC4361A_8h_1a414bd96a0662dfef1c683380b0aec0c9" kindref="member">tmc4361A_callback</ref>)tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)(tmc4361A,<sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a9ee994f88ca5e297ba9e832e65b0200b" kindref="member">tmc4361A_periodicJob</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1a2364d8dc9233bbe54f854d5a12cc2182" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a178bbeda3257d6df4ef596323789a399" kindref="member">tmc4361A_writeConfiguration</ref>(tmc4361A);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tick<sp/>-<sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1aa0b16b84812fdff95a8b83a21da94760" kindref="member">oldTick</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a245a387f8b545a228ffc2db9aa8d8e8d" kindref="member">tmc4361A_calibrateClosedLoop</ref>(tmc4361A,<sp/>0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc4361A-&gt;<ref refid="structTMC4361ATypeDef_1aa0b16b84812fdff95a8b83a21da94760" kindref="member">oldTick</ref><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1ae056fff57942958d2ae12b23de1b813e" kindref="member">tmc4361A_rotate</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>Position<sp/>Mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" kindref="member">TMC4361A_FIELD_WRITE</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a76a04d02e5debb5c9ac8179892d18254" kindref="member">TMC4361A_RAMPMODE</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1af4358645e992cf81d96f0d17bc2c4f16" kindref="member">TMC4361A_OPERATION_MODE_MASK</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a575728fce8fbcbdac7a6e60a2756c85e" kindref="member">TMC4361A_OPERATION_MODE_SHIFT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a7ac5a934361a8952759d68b80dd7f0e7" kindref="member">TMC4361A_VMAX</ref>,<sp/><ref refid="TMC4361A_8c_1a5adf64fcb388fc1449dfbb1cbd062d0a" kindref="member">tmc4361A_discardVelocityDecimals</ref>(velocity));</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a7b15988c92b8df55f6e7073fbffacadb" kindref="member">tmc4361A_right</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1ae056fff57942958d2ae12b23de1b813e" kindref="member">tmc4361A_rotate</ref>(tmc4361A,<sp/>velocity);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a2c75830b56d1a8b6d5a53848a65337ae" kindref="member">tmc4361A_left</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1ae056fff57942958d2ae12b23de1b813e" kindref="member">tmc4361A_rotate</ref>(tmc4361A,<sp/>-velocity);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1ac24ee00568f672d11a9e1e2cf2a54728" kindref="member">tmc4361A_stop</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1ae056fff57942958d2ae12b23de1b813e" kindref="member">tmc4361A_rotate</ref>(tmc4361A,<sp/>0);</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a34ac4e981b59ede2f4ac8af4bd30ce6e" kindref="member">tmc4361A_moveTo</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>Position<sp/>Mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" kindref="member">TMC4361A_FIELD_WRITE</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a76a04d02e5debb5c9ac8179892d18254" kindref="member">TMC4361A_RAMPMODE</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1af4358645e992cf81d96f0d17bc2c4f16" kindref="member">TMC4361A_OPERATION_MODE_MASK</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a575728fce8fbcbdac7a6e60a2756c85e" kindref="member">TMC4361A_OPERATION_MODE_SHIFT</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a7ac5a934361a8952759d68b80dd7f0e7" kindref="member">TMC4361A_VMAX</ref>,<sp/><ref refid="TMC4361A_8c_1a5adf64fcb388fc1449dfbb1cbd062d0a" kindref="member">tmc4361A_discardVelocityDecimals</ref>(velocityMax));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a552d7113d37a8b50ae346e841855b1ae" kindref="member">TMC4361A_X_TARGET</ref>,<sp/>position);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>function<sp/>will<sp/>write<sp/>the<sp/>absolute<sp/>target<sp/>position<sp/>to<sp/>*ticks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC4361A_8c_1a0272ee98d59ec2969c793686607de4f4" kindref="member">tmc4361A_moveBy</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>int32_t<sp/>*ticks,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>actual<sp/>position<sp/>and<sp/>add<sp/>numbers<sp/>of<sp/>ticks<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>*ticks<sp/>+=<sp/><ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a4da22f61ff05095eb1694269e98e8293" kindref="member">TMC4361A_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a34ac4e981b59ede2f4ac8af4bd30ce6e" kindref="member">tmc4361A_moveTo</ref>(tmc4361A,<sp/>*ticks,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">int32_t<sp/><ref refid="TMC4361A_8c_1a5adf64fcb388fc1449dfbb1cbd062d0a" kindref="member">tmc4361A_discardVelocityDecimals</ref>(int32_t<sp/>value)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(value)<sp/>&gt;<sp/>8000000)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(value<sp/>&lt;<sp/>0)<sp/>?<sp/>-8000000<sp/>:<sp/>8000000;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="TMC4361A_8c_1a4d5c066857327dfe87b5e586dd2fdb9f" kindref="member">tmc4361A_moveToNextFullstep</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>stepCount;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Motor<sp/>must<sp/>be<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1ae8228695e8e6f997d784fae21133237c" kindref="member">TMC4361A_VACTUAL</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>mode,<sp/>hold<sp/>mode,<sp/>low<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a76a04d02e5debb5c9ac8179892d18254" kindref="member">TMC4361A_RAMPMODE</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a7ac5a934361a8952759d68b80dd7f0e7" kindref="member">TMC4361A_VMAX</ref>,<sp/>10000<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>step<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>stepCount<sp/>=<sp/><ref refid="TMC4361A_8h_1a6f19ec15f23c105b57239f224a06375d" kindref="member">TMC4361A_FIELD_READ</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a0743a04b42a382fd9845b246304fe425" kindref="member">TMC4361A_MSCNT_RD</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1ad3424902921daf1f9860afb5a8a2bc31" kindref="member">TMC4361A_MSCNT_MASK</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a161e885884dfcb7cd9d161c0cd62e1db" kindref="member">TMC4361A_MSCNT_SHIFT</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>microstep<sp/>value<sp/>of<sp/>step<sp/>count<sp/>(lowest<sp/>8<sp/>bits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>stepCount<sp/>=<sp/>stepCount<sp/>%<sp/>256;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume:<sp/>256<sp/>microsteps<sp/>-&gt;<sp/>Fullsteps<sp/>are<sp/>at<sp/>128<sp/>+<sp/>n*256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>stepCount<sp/>=<sp/>128<sp/>-<sp/>stepCount;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stepCount<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fullstep<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fullstep<sp/>not<sp/>reached<sp/>-&gt;<sp/>calculate<sp/>next<sp/>fullstep<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>stepCount<sp/>+=<sp/><ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a4da22f61ff05095eb1694269e98e8293" kindref="member">TMC4361A_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>next<sp/>fullstep<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a552d7113d37a8b50ae346e841855b1ae" kindref="member">TMC4361A_X_TARGET</ref>,<sp/>stepCount);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">uint8_t<sp/><ref refid="TMC4361A_8c_1a245a387f8b545a228ffc2db9aa8d8e8d" kindref="member">tmc4361A_calibrateClosedLoop</ref>(<ref refid="structTMC4361ATypeDef" kindref="compound">TMC4361ATypeDef</ref><sp/>*tmc4361A,<sp/>uint8_t<sp/>worker0master1)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>oldRamp;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>amax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dmax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(worker0master1<sp/>&amp;&amp;<sp/>state<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(state)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amax<sp/>=<sp/><ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1ae633120ccaf47c73cb36f19bf8527dea" kindref="member">TMC4361A_AMAX</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmax<sp/>=<sp/><ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1aeec92f4b353089c541748946a544c451" kindref="member">TMC4361A_DMAX</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>ramp<sp/>and<sp/>motion<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldRamp<sp/>=<sp/><ref refid="TMC4361A_8c_1aaa387254f330dad5e35a1d31ee3c547a" kindref="member">tmc4361A_readInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a76a04d02e5debb5c9ac8179892d18254" kindref="member">TMC4361A_RAMPMODE</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a76a04d02e5debb5c9ac8179892d18254" kindref="member">TMC4361A_RAMPMODE</ref>,<sp/><ref refid="TMC4361A__Constants_8h_1aeba1e5331b73b78da78d89232b73a8ba" kindref="member">TMC4361A_RAMP_POSITION</ref><sp/>|<sp/><ref refid="TMC4361A__Constants_8h_1a219a1483e2db0b4e752177464d5d866b" kindref="member">TMC4361A_RAMP_HOLD</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1ae633120ccaf47c73cb36f19bf8527dea" kindref="member">TMC4361A_AMAX</ref>,<sp/><ref refid="Macros_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(amax,<sp/>1000));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1aeec92f4b353089c541748946a544c451" kindref="member">TMC4361A_DMAX</ref>,<sp/><ref refid="Macros_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(dmax,<sp/>1000));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a7ac5a934361a8952759d68b80dd7f0e7" kindref="member">TMC4361A_VMAX</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>encoder<sp/>calibration<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" kindref="member">TMC4361A_FIELD_WRITE</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1aa751844dae0378276ba4e18ddc76037a" kindref="member">TMC4361A_ENC_IN_CONF</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1abf2c18baf9cfc1e997272b0371db115f" kindref="member">TMC4361A_CL_CALIBRATION_EN_MASK</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a7280f864a8c4357d8b5c0e71926fb95f" kindref="member">TMC4361A_CL_CALIBRATION_EN_SHIFT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>internal<sp/>data<sp/>regulation<sp/>for<sp/>closed<sp/>loop<sp/>operation<sp/>in<sp/>encoder<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" kindref="member">TMC4361A_FIELD_WRITE</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1aa751844dae0378276ba4e18ddc76037a" kindref="member">TMC4361A_ENC_IN_CONF</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a691e5343af0792a405e73897eb1f62b1" kindref="member">TMC4361A_REGULATION_MODUS_MASK</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a60c73db0e0b799127738de301975aa4b" kindref="member">TMC4361A_REGULATION_MODUS_SHIFT</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="TMC4361A_8c_1a4d5c066857327dfe87b5e586dd2fdb9f" kindref="member">tmc4361A_moveToNextFullstep</ref>(tmc4361A))<sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>next<sp/>fullstep,<sp/>motor<sp/>must<sp/>be<sp/>stopped,<sp/>poll<sp/>until<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>encoder<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" kindref="member">TMC4361A_FIELD_WRITE</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1aa751844dae0378276ba4e18ddc76037a" kindref="member">TMC4361A_ENC_IN_CONF</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1abf2c18baf9cfc1e997272b0371db115f" kindref="member">TMC4361A_CL_CALIBRATION_EN_MASK</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a7280f864a8c4357d8b5c0e71926fb95f" kindref="member">TMC4361A_CL_CALIBRATION_EN_SHIFT</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(worker0master1)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>encoder<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" kindref="member">TMC4361A_FIELD_WRITE</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1aa751844dae0378276ba4e18ddc76037a" kindref="member">TMC4361A_ENC_IN_CONF</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1abf2c18baf9cfc1e997272b0371db115f" kindref="member">TMC4361A_CL_CALIBRATION_EN_MASK</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a7280f864a8c4357d8b5c0e71926fb95f" kindref="member">TMC4361A_CL_CALIBRATION_EN_SHIFT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>closed<sp/>loop<sp/>in<sp/>encoder<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8h_1a26f927a2198591c861a806f9c5b7c0ed" kindref="member">TMC4361A_FIELD_WRITE</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1aa751844dae0378276ba4e18ddc76037a" kindref="member">TMC4361A_ENC_IN_CONF</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a691e5343af0792a405e73897eb1f62b1" kindref="member">TMC4361A_REGULATION_MODUS_MASK</ref>,<sp/><ref refid="TMC4361A__Fields_8h_1a60c73db0e0b799127738de301975aa4b" kindref="member">TMC4361A_REGULATION_MODUS_SHIFT</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>old<sp/>ramp<sp/>mode,<sp/>enable<sp/>position<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC4361A_8c_1a24e445fe2a9a630d60dfb55dcbe42c28" kindref="member">tmc4361A_writeInt</ref>(tmc4361A,<sp/><ref refid="TMC4361A_2TMC4361A__Register_8h_1a76a04d02e5debb5c9ac8179892d18254" kindref="member">TMC4361A_RAMPMODE</ref>,<sp/><ref refid="TMC4361A__Constants_8h_1aeba1e5331b73b78da78d89232b73a8ba" kindref="member">TMC4361A_RAMP_POSITION</ref><sp/>|<sp/>oldRamp);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC4361A/TMC4361A.c"/>
  </compounddef>
</doxygen>
