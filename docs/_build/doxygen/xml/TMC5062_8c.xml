<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC5062_8c" kind="file" language="C++">
    <compoundname>TMC5062.c</compoundname>
    <includes refid="TMC5062_8h" local="yes">TMC5062.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC5062.c</label>
        <link refid="TMC5062_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMC5062.h</label>
        <link refid="TMC5062_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>TMC5062_Constants.h</label>
        <link refid="TMC5062__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>TMC5062_Fields.h</label>
        <link refid="TMC5062__Fields_8h"/>
      </node>
      <node id="15">
        <label>TMC5062_Register.h</label>
        <link refid="TMC5062__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5062_readWrite</definition>
        <argsstring>(uint8_t motor, uint8_t data, uint8_t lastTransfer)</argsstring>
        <name>tmc5062_readWrite</name>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lastTransfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="13" column="16" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" declline="13" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1aa121d0bc1caede76f57ef5339430709c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void measureVelocity</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint32_t tick)</argsstring>
        <name>measureVelocity</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="291" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="291" bodyend="310" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" declline="16" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a5fb7a9bb7271dc4fb4f4ae04d045bbd2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writeConfiguration</definition>
        <argsstring>(TMC5062TypeDef *tmc5062)</argsstring>
        <name>writeConfiguration</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="129" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="129" bodyend="164" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" declline="17" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_writeInt</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t channel, uint8_t address, int32_t value)</argsstring>
        <name>tmc5062_writeInt</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="19" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="19" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a93db19037719814b46f1e97c7bc25a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc5062_readInt</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t channel, uint8_t address)</argsstring>
        <name>tmc5062_readInt</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="33" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="33" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a52c6a00af51d3c3e3fd3d9d7b0f0879b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_init</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, ConfigurationTypeDef *tmc5062_config, const int32_t *registerResetState, uint8_t motorIndex0, uint8_t motorIndex1, uint32_t chipFrequency)</argsstring>
        <name>tmc5062_init</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>tmc5062_config</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>registerResetState</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motorIndex0</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motorIndex1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>chipFrequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="61" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="61" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a0e6493582bad21291aeca2b75e726e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_fillShadowRegisters</definition>
        <argsstring>(TMC5062TypeDef *tmc5062)</argsstring>
        <name>tmc5062_fillShadowRegisters</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="88" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="88" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a6ffa5af4746920539953b3dd044ab1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_setRegisterResetState</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, const int32_t *resetState)</argsstring>
        <name>tmc5062_setRegisterResetState</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>resetState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="118" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1aa46dac1af2e031ef47dcd5ab00ced907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_setCallback</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, tmc5062_callback callback)</argsstring>
        <name>tmc5062_setCallback</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type><ref refid="TMC5062_8h_1ab54ce46b2a0272bd4183c04297bd4892" kindref="member">tmc5062_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="124" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a44003a9f73c4e4375f7f91df4556a083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_periodicJob</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint32_t tick)</argsstring>
        <name>tmc5062_periodicJob</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="166" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="166" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a70c525c3b4d0da7ca2f75fd4f704e3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5062_reset</definition>
        <argsstring>(TMC5062TypeDef *tmc5062)</argsstring>
        <name>tmc5062_reset</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="185" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="185" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a4ecdf6fbafd8cfb6cf7a1bf877d4a6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5062_restore</definition>
        <argsstring>(TMC5062TypeDef *tmc5062)</argsstring>
        <name>tmc5062_restore</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="203" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="203" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1afb3959110a65761f33b4a0f0996a5545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_rotate</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5062_rotate</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="214" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a2c097bbb4e91643fb694a78cf1d69ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_right</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5062_right</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="223" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1abd8aa2e36e8fa9f757733d04c0fd7645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_left</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5062_left</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="228" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1ad5c29a81e97f11b6db6fd56db3c60a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_stop</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t motor)</argsstring>
        <name>tmc5062_stop</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="233" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a754184cad6b857a340d5ca68f3b0ed3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_moveTo</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t motor, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc5062_moveTo</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="238" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="238" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1add0edf2e71cd4416be4fad6dc8220a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5062_moveBy</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t motor, uint32_t velocityMax, int32_t *ticks)</argsstring>
        <name>tmc5062_moveBy</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="248" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="248" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1ae827466e3b61dd1f9437c8d721b2c5f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t calculateTOFF</definition>
        <argsstring>(uint32_t chopFreq, uint32_t clkFreq)</argsstring>
        <name>calculateTOFF</name>
        <param>
          <type>uint32_t</type>
          <declname>chopFreq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>clkFreq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="257" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="257" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a9fea8cbb4536712be82171497b5a8f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t dcStepActive</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t channel)</argsstring>
        <name>dcStepActive</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="276" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="276" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1ab8d7d9ccb2eb44244d7b436dc68b1398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t setMicroStepTable</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t channel, TMC5062_MicroStepTable *table)</argsstring>
        <name>setMicroStepTable</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structTMC5062__MicroStepTable" kindref="compound">TMC5062_MicroStepTable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="313" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="313" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="TMC5062_8c_1a6786e86442f066812e8032227ffcbf9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t setEncoderFactor</definition>
        <argsstring>(TMC5062TypeDef *tmc5062, uint8_t channel, uint32_t motorFullSteps, uint32_t microSteps, uint32_t encoderResolution)</argsstring>
        <name>setEncoderFactor</name>
        <param>
          <type><ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref> *</type>
          <declname>tmc5062</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>motorFullSteps</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>microSteps</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>encoderResolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" line="344" column="10" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c" bodystart="344" bodyend="408"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TMC5062_8h" kindref="compound">TMC5062.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=&gt;<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(uint8_t<sp/>motor,<sp/>uint8_t<sp/>data,<sp/>uint8_t<sp/>lastTransfer);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;=<sp/>SPI<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1aa121d0bc1caede76f57ef5339430709c" kindref="member">measureVelocity</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint32_t<sp/>tick);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a5fb7a9bb7271dc4fb4f4ae04d045bbd2" kindref="member">writeConfiguration</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>channel,<sp/>uint8_t<sp/>address,<sp/>int32_t<sp/>value)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channel<sp/>&gt;=<sp/><ref refid="TMC5062__Constants_8h_1a62b26720af758f6ec311282550786939" kindref="member">TMC5062_MOTORS</ref>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>address<sp/>|<sp/><ref refid="TMC5062__Constants_8h_1a46e2202b58a14f0c1d7deaa6ea5c999a" kindref="member">TMC5062_WRITE_BIT</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>value<sp/>&gt;&gt;<sp/>24,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>value<sp/>&gt;&gt;<sp/>16,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>value<sp/>&gt;&gt;<sp/><sp/>8,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>value,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">int32_t<sp/><ref refid="TMC5062_8c_1a93db19037719814b46f1e97c7bc25a2d" kindref="member">tmc5062_readInt</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>channel,<sp/>uint8_t<sp/>address)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channel<sp/>&gt;=<sp/><ref refid="TMC5062__Constants_8h_1a62b26720af758f6ec311282550786939" kindref="member">TMC5062_MOTORS</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="RegisterAccess_8h_1af08f0d12a2110808e943d969103914a8" kindref="member">TMC_IS_READABLE</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a2675d1e9a14fc84c391e018ebd05a0e1" kindref="member">registerAccess</ref>[<ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address)]))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[<ref refid="Macros_8h_1a25b929527496d1e227906cb8e2b2f01a" kindref="member">TMC_ADDRESS</ref>(address)];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>address,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>address,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>|=<sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>|=<sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>|=<sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>|=<sp/><ref refid="TMC5062_8c_1a7fe8a3c47e15ba641e7c43ac670bc457" kindref="member">tmc5062_readWrite</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[channel],<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a52c6a00af51d3c3e3fd3d9d7b0f0879b" kindref="member">tmc5062_init</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*tmc5062_config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*registerResetState,<sp/>uint8_t<sp/>motorIndex0,<sp/>uint8_t<sp/>motorIndex1,<sp/>uint32_t<sp/>chipFrequency)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[0]<sp/>=<sp/>motorIndex0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a9e9aca1a0d495293b5de2e6488546527" kindref="member">motors</ref>[1]<sp/>=<sp/>motorIndex1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1abb22cae792842dd1ac885f423fd4e76c" kindref="member">chipFrequency</ref><sp/><sp/>=<sp/>chipFrequency;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref><sp/>=<sp/>tmc5062_config;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a481e2055d12ebe8648d5b9c8640f2927" kindref="member">measurementInterval</ref><sp/>=<sp/>25;<sp/></highlight><highlight class="comment">//<sp/>Default:<sp/>25<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a35dba6bce6cbb54eadf5e2b7433f95fc" kindref="member">oldTick</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0a066255ef965edb9eb1d940976632fa" kindref="member">oldXActual</ref>[0]<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0a066255ef965edb9eb1d940976632fa" kindref="member">oldXActual</ref>[1]<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1ac733fe543b3615fba1b85a7374c8444d" kindref="member">velocity</ref>[0]<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1ac733fe543b3615fba1b85a7374c8444d" kindref="member">velocity</ref>[1]<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1abfad86df2e7c0ecee54a623ae96514e6" kindref="member">TMC5062_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a2675d1e9a14fc84c391e018ebd05a0e1" kindref="member">registerAccess</ref>[i]<sp/>=<sp/><ref refid="TMC5062_8h_1a849fa9cc55da4b686c2caa3975fbec0e" kindref="member">tmc5062_defaultRegisterAccess</ref>[i];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a5b9e20fb912f6284d20fac44ea8d7bdc" kindref="member">registerResetState</ref>[i]<sp/><sp/>=<sp/>registerResetState[i];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a0e6493582bad21291aeca2b75e726e2b" kindref="member">tmc5062_fillShadowRegisters</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>have<sp/>constants<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5062_8h_1a47e76202230764901e9340d8b60f2c45" kindref="member">tmc5062_RegisterConstants</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1abfad86df2e7c0ecee54a623ae96514e6" kindref="member">TMC5062_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>to<sp/>worry<sp/>about<sp/>hardware<sp/>preset,<sp/>write-only<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>not<sp/>yet<sp/>been<sp/>written<sp/>(no<sp/>dirty<sp/>bit)<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a2675d1e9a14fc84c391e018ebd05a0e1" kindref="member">registerAccess</ref>[i]<sp/>!=<sp/><ref refid="RegisterAccess_8h_1a0a68eeac67d2149074f3f6191d60b80c" kindref="member">TMC_ACCESS_W_PRESET</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>constant<sp/>list<sp/>for<sp/>the<sp/>current<sp/>address.<sp/>With<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>being<sp/>sorted<sp/>in<sp/>ascended<sp/>order,<sp/>we<sp/>can<sp/>walk<sp/>through<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>the<sp/>entry<sp/>with<sp/>an<sp/>address<sp/>equal<sp/>or<sp/>greater<sp/>than<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(j<sp/>&lt;<sp/><ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5062_8h_1a47e76202230764901e9340d8b60f2c45" kindref="member">tmc5062_RegisterConstants</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="TMC5062_8h_1a47e76202230764901e9340d8b60f2c45" kindref="member">tmc5062_RegisterConstants</ref>[j].address<sp/>&lt;<sp/>i))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abort<sp/>when<sp/>we<sp/>reach<sp/>the<sp/>end<sp/>of<sp/>the<sp/>constant<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/><ref refid="Macros_8h_1a6242a25f9d996f0cc4f4cdb911218b75" kindref="member">ARRAY_SIZE</ref>(<ref refid="TMC5062_8h_1a47e76202230764901e9340d8b60f2c45" kindref="member">tmc5062_RegisterConstants</ref>))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>an<sp/>entry<sp/>for<sp/>our<sp/>current<sp/>address,<sp/>write<sp/>the<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="TMC5062_8h_1a47e76202230764901e9340d8b60f2c45" kindref="member">tmc5062_RegisterConstants</ref>[j].address<sp/>==<sp/>i)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[i]<sp/>=<sp/><ref refid="TMC5062_8h_1a47e76202230764901e9340d8b60f2c45" kindref="member">tmc5062_RegisterConstants</ref>[j].<ref refid="structTMCRegisterConstant_1a8ee397638840f4461cd9b559fde7fc30" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a6ffa5af4746920539953b3dd044ab1aa" kindref="member">tmc5062_setRegisterResetState</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*resetState)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1abfad86df2e7c0ecee54a623ae96514e6" kindref="member">TMC5062_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a5b9e20fb912f6284d20fac44ea8d7bdc" kindref="member">registerResetState</ref>[i]<sp/>=<sp/>resetState[i];</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1aa46dac1af2e031ef47dcd5ab00ced907" kindref="member">tmc5062_setCallback</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/><ref refid="TMC5062_8h_1ab54ce46b2a0272bd4183c04297bd4892" kindref="member">tmc5062_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/>=<sp/>(<ref refid="Config_8h_1a4f94914f5c7a97833e65a3d10eedfdee" kindref="member">tmc_callback_config</ref>)<sp/>callback;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a5fb7a9bb7271dc4fb4f4ae04d045bbd2" kindref="member">writeConfiguration</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*ptr<sp/>=<sp/>&amp;tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*settings;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>==<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>restorable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1abfad86df2e7c0ecee54a623ae96514e6" kindref="member">TMC5062_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a70866cbed8c69a330b4aebc9a1e8287e" kindref="member">TMC_IS_RESTORABLE</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a2675d1e9a14fc84c391e018ebd05a0e1" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a5b9e20fb912f6284d20fac44ea8d7bdc" kindref="member">registerResetState</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>resettable<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((*ptr<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1abfad86df2e7c0ecee54a623ae96514e6" kindref="member">TMC5062_REGISTER_COUNT</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="RegisterAccess_8h_1a08cbb9fb1db72595e25b38131ee3dba0" kindref="member">TMC_IS_RESETTABLE</ref>(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a2675d1e9a14fc84c391e018ebd05a0e1" kindref="member">registerAccess</ref>[*ptr]))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*ptr<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1abfad86df2e7c0ecee54a623ae96514e6" kindref="member">TMC5062_REGISTER_COUNT</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>0,<sp/>*ptr,<sp/>settings[*ptr]);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)++;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Finished<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="TMC5062_8h_1ab54ce46b2a0272bd4183c04297bd4892" kindref="member">tmc5062_callback</ref>)tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref>)(tmc5062,<sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a44003a9f73c4e4375f7f91df4556a083" kindref="member">tmc5062_periodicJob</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a5fb7a9bb7271dc4fb4f4ae04d045bbd2" kindref="member">writeConfiguration</ref>(tmc5062);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>channel<sp/>=<sp/>0;<sp/>channel<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1a62b26720af758f6ec311282550786939" kindref="member">TMC5062_MOTORS</ref>;<sp/>channel++)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="TMC5062_8c_1a9fea8cbb4536712be82171497b5a8f78" kindref="member">dcStepActive</ref>(tmc5062,<sp/>channel))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Measure<sp/>if<sp/>any<sp/>channel<sp/>has<sp/>active<sp/>dcStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1aa121d0bc1caede76f57ef5339430709c" kindref="member">measureVelocity</ref>(tmc5062,<sp/>tick);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">uint8_t<sp/><ref refid="TMC5062_8c_1a70c525c3b4d0da7ca2f75fd4f704e3d9" kindref="member">tmc5062_reset</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>dirty<sp/>bits<sp/>and<sp/>wipe<sp/>the<sp/>shadow<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1abfad86df2e7c0ecee54a623ae96514e6" kindref="member">TMC5062_REGISTER_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a2675d1e9a14fc84c391e018ebd05a0e1" kindref="member">registerAccess</ref>[i]<sp/>&amp;=<sp/>~TMC_ACCESS_DIRTY;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1ab7eb5b6432147d0ca5471e1f128ba503" kindref="member">shadowRegister</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837faf4b7eabf7d198b2f9b47d8c7a36c7d0f" kindref="member">CONFIG_RESET</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">uint8_t<sp/><ref refid="TMC5062_8c_1a4ecdf6fbafd8cfb6cf7a1bf877d4a6f5" kindref="member">tmc5062_restore</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa7554d7ac751dd29b0f06634cdbafdcc6" kindref="member">CONFIG_RESTORE</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0757b8a80a7ee883be2510b5a77c8d03" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1afb3959110a65761f33b4a0f0996a5545" kindref="member">tmc5062_rotate</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(motor<sp/>&gt;=<sp/><ref refid="TMC5062__Constants_8h_1a62b26720af758f6ec311282550786939" kindref="member">TMC5062_MOTORS</ref>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>motor,<sp/><ref refid="TMC5062__Register_8h_1afe5459756c0c8e280bed73b7b0019211" kindref="member">TMC5062_VMAX</ref>(motor),<sp/>abs(velocity));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>motor,<sp/><ref refid="TMC5062__Register_8h_1ad26c38c2adf3a03204fcba96e2586503" kindref="member">TMC5062_RAMPMODE</ref>(motor),<sp/>(velocity<sp/>&gt;=<sp/>0)<sp/>?<sp/><ref refid="TMC5062__Constants_8h_1af02a0bfde99e8d07f33083df8dd9281c" kindref="member">TMC5062_MODE_VELPOS</ref><sp/>:<sp/><ref refid="TMC5062__Constants_8h_1ab8e46b9d334bce444d591a49ae0403f3" kindref="member">TMC5062_MODE_VELNEG</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a2c097bbb4e91643fb694a78cf1d69ab2" kindref="member">tmc5062_right</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1afb3959110a65761f33b4a0f0996a5545" kindref="member">tmc5062_rotate</ref>(tmc5062,<sp/>motor,<sp/>velocity);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1abd8aa2e36e8fa9f757733d04c0fd7645" kindref="member">tmc5062_left</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1afb3959110a65761f33b4a0f0996a5545" kindref="member">tmc5062_rotate</ref>(tmc5062,<sp/>motor,<sp/>-velocity);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1ad5c29a81e97f11b6db6fd56db3c60a3b" kindref="member">tmc5062_stop</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>motor)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1afb3959110a65761f33b4a0f0996a5545" kindref="member">tmc5062_rotate</ref>(tmc5062,<sp/>motor,<sp/>0);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a754184cad6b857a340d5ca68f3b0ed3b" kindref="member">tmc5062_moveTo</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(motor<sp/>&gt;=<sp/><ref refid="TMC5062__Constants_8h_1a62b26720af758f6ec311282550786939" kindref="member">TMC5062_MOTORS</ref>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>motor,<sp/><ref refid="TMC5062__Register_8h_1ad26c38c2adf3a03204fcba96e2586503" kindref="member">TMC5062_RAMPMODE</ref>(motor),<sp/><ref refid="TMC5062__Constants_8h_1ad381ac083364eb5f761574b346a89931" kindref="member">TMC5062_MODE_POSITION</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>motor,<sp/><ref refid="TMC5062__Register_8h_1afe5459756c0c8e280bed73b7b0019211" kindref="member">TMC5062_VMAX</ref>(motor),<sp/>velocityMax);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>motor,<sp/><ref refid="TMC5062__Register_8h_1a4c002309269df241e4cc70d90e454af1" kindref="member">TMC5062_XTARGET</ref>(motor),<sp/>position);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1add0edf2e71cd4416be4fad6dc8220a63" kindref="member">tmc5062_moveBy</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>motor,<sp/>uint32_t<sp/>velocityMax,<sp/>int32_t<sp/>*ticks)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>actual<sp/>position<sp/>and<sp/>add<sp/>numbers<sp/>of<sp/>ticks<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>*ticks<sp/>+=<sp/><ref refid="TMC5062_8c_1a93db19037719814b46f1e97c7bc25a2d" kindref="member">tmc5062_readInt</ref>(tmc5062,<sp/>motor,<sp/><ref refid="TMC5062__Register_8h_1aa0f524a49d710ad6d3281de09499f91d" kindref="member">TMC5062_XACTUAL</ref>(motor));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1a754184cad6b857a340d5ca68f3b0ed3b" kindref="member">tmc5062_moveTo</ref>(tmc5062,<sp/>motor,<sp/>*ticks,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Chopper<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">uint8_t<sp/><ref refid="TMC5062_8c_1ae827466e3b61dd1f9437c8d721b2c5f1" kindref="member">calculateTOFF</ref>(uint32_t<sp/>chopFreq,<sp/>uint32_t<sp/>clkFreq)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>TOff<sp/>from<sp/>the<sp/>clock<sp/>and<sp/>chopper<sp/>frequencies<sp/>(see<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>details).<sp/>We<sp/>add<sp/>16<sp/>before<sp/>dividing<sp/>by<sp/>32<sp/>to<sp/>have<sp/>rounding<sp/>instead<sp/>of<sp/>flooring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>result<sp/>=<sp/>(((clkFreq<sp/>/<sp/>chopFreq<sp/>/<sp/>4)<sp/>-<sp/>12)<sp/>+<sp/>16)<sp/>/<sp/>32;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="Macros_8h_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(15,<sp/>result);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="Macros_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(1,<sp/>result);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stallguard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Coolstep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dcStep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">uint8_t<sp/><ref refid="TMC5062_8c_1a9fea8cbb4536712be82171497b5a8f78" kindref="member">dcStepActive</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>channel)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vhighfs<sp/>and<sp/>vhighchm<sp/>set?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>chopConf<sp/>=<sp/><ref refid="TMC5062_8c_1a93db19037719814b46f1e97c7bc25a2d" kindref="member">tmc5062_readInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a98bbb461d5410407399b15d20c879d9f" kindref="member">TMC5062_CHOPCONF</ref>(channel));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((chopConf<sp/>&amp;<sp/>(<ref refid="TMC5062__Fields_8h_1a491c17540b2852ccbe1b936f30c77c25" kindref="member">TMC5062_VHIGHFS_MASK</ref><sp/>|<sp/><ref refid="TMC5062__Fields_8h_1a6152b10509a378143e3f20c8f95acd5d" kindref="member">TMC5062_VHIGHCHM_MASK</ref>))<sp/>!=<sp/>(<ref refid="TMC5062__Fields_8h_1a491c17540b2852ccbe1b936f30c77c25" kindref="member">TMC5062_VHIGHFS_MASK</ref><sp/>|<sp/><ref refid="TMC5062__Fields_8h_1a6152b10509a378143e3f20c8f95acd5d" kindref="member">TMC5062_VHIGHCHM_MASK</ref>))</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Velocity<sp/>above<sp/>dcStep<sp/>velocity<sp/>threshold?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>vActual<sp/>=<sp/><ref refid="TMC5062_8c_1a93db19037719814b46f1e97c7bc25a2d" kindref="member">tmc5062_readInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1af4023f73af0c035da0065f44883ed9d1" kindref="member">TMC5062_VACTUAL</ref>(channel));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>vDCMin<sp/><sp/>=<sp/><ref refid="TMC5062_8c_1a93db19037719814b46f1e97c7bc25a2d" kindref="member">tmc5062_readInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a73f2534fd052835c2805bf3c8471bb51" kindref="member">TMC5062_VDCMIN</ref>(channel));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vActual<sp/>&gt;=<sp/>vDCMin;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5062_8c_1aa121d0bc1caede76f57ef5339430709c" kindref="member">measureVelocity</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>xActual;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tickDiff;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tickDiff<sp/>=<sp/>tick<sp/>-<sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a35dba6bce6cbb54eadf5e2b7433f95fc" kindref="member">oldTick</ref>)<sp/>&gt;=<sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a481e2055d12ebe8648d5b9c8640f2927" kindref="member">measurementInterval</ref>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>channel<sp/>=<sp/>0;<sp/>channel<sp/>&lt;<sp/><ref refid="TMC5062__Constants_8h_1a62b26720af758f6ec311282550786939" kindref="member">TMC5062_MOTORS</ref>;<sp/>channel++)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xActual<sp/>=<sp/><ref refid="TMC5062_8c_1a93db19037719814b46f1e97c7bc25a2d" kindref="member">tmc5062_readInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1aa0f524a49d710ad6d3281de09499f91d" kindref="member">TMC5062_XACTUAL</ref>(channel));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>difference<sp/>gets<sp/>multiplied<sp/>by<sp/>1000<sp/>to<sp/>compensate<sp/>ticks<sp/>being<sp/>in<sp/>milliseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>xDiff<sp/>=<sp/>(xActual<sp/>-<sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0a066255ef965edb9eb1d940976632fa" kindref="member">oldXActual</ref>[channel])*<sp/>1000;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1ac733fe543b3615fba1b85a7374c8444d" kindref="member">velocity</ref>[channel]<sp/>=<sp/>(xDiff)<sp/>/<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>tickDiff)<sp/>*<sp/>((1&lt;&lt;24)<sp/>/<sp/>(float)<sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1abb22cae792842dd1ac885f423fd4e76c" kindref="member">chipFrequency</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a0a066255ef965edb9eb1d940976632fa" kindref="member">oldXActual</ref>[channel]<sp/>=<sp/>xActual;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5062-&gt;<ref refid="structTMC5062TypeDef_1a35dba6bce6cbb54eadf5e2b7433f95fc" kindref="member">oldTick</ref><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MSLUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">uint8_t<sp/><ref refid="TMC5062_8c_1ab8d7d9ccb2eb44244d7b436dc68b1398" kindref="member">setMicroStepTable</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structTMC5062__MicroStepTable" kindref="compound">TMC5062_MicroStepTable</ref><sp/>*table)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channel<sp/>&gt;=<sp/><ref refid="TMC5062__Constants_8h_1a62b26720af758f6ec311282550786939" kindref="member">TMC5062_MOTORS</ref><sp/>||<sp/>table<sp/>==<sp/>0<sp/>||<sp/>tmc5062<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a3f23f0dc356c530bd7c1ebe0bcf4a432" kindref="member">TMC5062_MSLUT0</ref>(channel),<sp/>table-&gt;<ref refid="structTMC5062__MicroStepTable_1afcdfcf53d7e66f7684d66db29d08ca4b" kindref="member">LUT_0</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a1560ab8ff3ef7b22163dd7d147fdeae8" kindref="member">TMC5062_MSLUT1</ref>(channel),<sp/>table-&gt;<ref refid="structTMC5062__MicroStepTable_1ab19b3a0bf0346f52fcdb829b5b33cf93" kindref="member">LUT_1</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a2708309d306c072a16f9dc47f7fd8322" kindref="member">TMC5062_MSLUT2</ref>(channel),<sp/>table-&gt;<ref refid="structTMC5062__MicroStepTable_1a3a81cfaea44c7ac1afd958a8dadfc1f4" kindref="member">LUT_2</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a05eb4875b2726e789ca2efb8c81482e1" kindref="member">TMC5062_MSLUT3</ref>(channel),<sp/>table-&gt;<ref refid="structTMC5062__MicroStepTable_1a7d53eb9e4c5cb5927d4e5210f1319932" kindref="member">LUT_3</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a86652d9e27303a73284feba4218a3547" kindref="member">TMC5062_MSLUT4</ref>(channel),<sp/>table-&gt;<ref refid="structTMC5062__MicroStepTable_1a0220734d5dff8656ad62dbfbb7121d73" kindref="member">LUT_4</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a08cd5178d0eed15afcccf890986a9e7b" kindref="member">TMC5062_MSLUT5</ref>(channel),<sp/>table-&gt;<ref refid="structTMC5062__MicroStepTable_1a75c50dd408f12d28fab2be91af665d5a" kindref="member">LUT_5</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a5c0012776d8b462e5cab8cb71593fad9" kindref="member">TMC5062_MSLUT6</ref>(channel),<sp/>table-&gt;<ref refid="structTMC5062__MicroStepTable_1a39b1b9db849386ded97b11086b1389ef" kindref="member">LUT_6</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1ae9bfd4e12fbe655ea1185be5e5a95d1a" kindref="member">TMC5062_MSLUT7</ref>(channel),<sp/>table-&gt;<ref refid="structTMC5062__MicroStepTable_1ad1a17b10cba8986fd0baaefa6b53a578" kindref="member">LUT_7</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/><sp/><sp/>((uint32_t)table-&gt;<ref refid="structTMC5062__MicroStepTable_1a4add23406b59a3acfd157aeb172fce6f" kindref="member">X3</ref><sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((uint32_t)table-&gt;<ref refid="structTMC5062__MicroStepTable_1a7a0b9e9820e7ed15b27a460b310b1e1c" kindref="member">X2</ref><sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(table-&gt;<ref refid="structTMC5062__MicroStepTable_1adf4ddd559511e485602e800abcb349ac" kindref="member">X1</ref><sp/>&lt;&lt;<sp/>8)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(table-&gt;<ref refid="structTMC5062__MicroStepTable_1a8011267bfe0663190a13e1d2a1ab949f" kindref="member">W3</ref><sp/>&lt;&lt;<sp/><sp/>6)<sp/>|<sp/>(table-&gt;<ref refid="structTMC5062__MicroStepTable_1aa7af83cd797ad10135e3101c794cd723" kindref="member">W2</ref><sp/>&lt;&lt;<sp/><sp/>4)<sp/>|<sp/>(table-&gt;<ref refid="structTMC5062__MicroStepTable_1a859846827ad3d63a1d97fe6518d200f5" kindref="member">W1</ref><sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>(table-&gt;<ref refid="structTMC5062__MicroStepTable_1aee9d50d96104004a594c5d403566ffa3" kindref="member">W0</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1aac985f30aa9697c00e41a87ef9734f90" kindref="member">TMC5062_MSLUTSEL</ref>(channel),<sp/>tmp);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>((uint32_t)table-&gt;<ref refid="structTMC5062__MicroStepTable_1afabd837300f3b6069314d2e825241ea8" kindref="member">START_SIN90</ref><sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(table-&gt;<ref refid="structTMC5062__MicroStepTable_1a627e41fb0898f7e0309b7ac7c8e7c41a" kindref="member">START_SIN</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a05a4b5589aab703d9d83e78dcddc9729" kindref="member">TMC5062_MSLUTSTART</ref>(channel),<sp/>tmp);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Encoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Calculate<sp/>and<sp/>set<sp/>the<sp/>encoder<sp/>factor.<sp/>Returns<sp/>the<sp/>deviation<sp/>to<sp/>the<sp/>theoretical<sp/>factor<sp/>in</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>either<sp/>binary<sp/>or<sp/>decimal<sp/>form.<sp/>To<sp/>get<sp/>the<sp/>actual<sp/>error<sp/>value,<sp/>divide<sp/>the<sp/>return<sp/>type:</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>Binary:<sp/><sp/><sp/>Error<sp/>=<sp/>retVal<sp/>/<sp/>(2^16<sp/><sp/>*<sp/>encoderResolution)</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>Decimal:<sp/><sp/>Error<sp/>=<sp/>retVal<sp/>/<sp/>(10000<sp/>*<sp/>encoderResolution)</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>(Check<sp/>the<sp/>enc_sel_decimal<sp/>bit<sp/>in<sp/>the<sp/>ENCMODE<sp/>register<sp/>to<sp/>find<sp/>out<sp/>which<sp/>mode<sp/>is<sp/>used)</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">uint32_t<sp/><ref refid="TMC5062_8c_1a6786e86442f066812e8032227ffcbf9f" kindref="member">setEncoderFactor</ref>(<ref refid="structTMC5062TypeDef" kindref="compound">TMC5062TypeDef</ref><sp/>*tmc5062,<sp/>uint8_t<sp/>channel,<sp/>uint32_t<sp/>motorFullSteps,<sp/>uint32_t<sp/>microSteps,<sp/>uint32_t<sp/>encoderResolution)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>numerator,<sp/>denominator,<sp/>remainder;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>binaryError,<sp/>decimalError;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>useDecimal,<sp/>binaryRounded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>decimalRounded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>divisor<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>here<sp/>is<sp/>inaccurate,<sp/>this<sp/>is<sp/>just<sp/>a<sp/>protection<sp/>against<sp/>runtime/usage<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(encoderResolution<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>numerator<sp/>=<sp/>(motorFullSteps<sp/>*<sp/>microSteps)<sp/>/<sp/>encoderResolution;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>remainder<sp/>=<sp/>(motorFullSteps<sp/>*<sp/>microSteps)<sp/>%<sp/>encoderResolution;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((binaryError<sp/>=<sp/>(remainder<sp/>&lt;&lt;<sp/>16)<sp/>%<sp/>encoderResolution)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useDecimal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/>=<sp/>(remainder<sp/>&lt;&lt;<sp/>16)<sp/>/<sp/>encoderResolution;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainder<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((decimalError<sp/>=<sp/>(remainder<sp/>*<sp/>10000)<sp/>%<sp/>encoderResolution)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useDecimal<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/>=<sp/>(remainder<sp/>*<sp/>10000)<sp/>/<sp/>encoderResolution;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainder<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>No<sp/>exact<sp/>fraction<sp/>possible<sp/>-&gt;<sp/>calculate<sp/>nearest<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>integer<sp/>division/modulo<sp/>calculation<sp/>results<sp/>in<sp/>flooring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compensate<sp/>here<sp/>to<sp/>achieve<sp/>rounding<sp/>instead<sp/>(smaller<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Cast<sp/>to<sp/>uint32_t<sp/>to<sp/>avoid<sp/>compiler<sp/>warning<sp/>-<sp/>variable<sp/>is<sp/>positive<sp/>anyways)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((uint32_t)<sp/>binaryError<sp/>&gt;<sp/>(encoderResolution/2))</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binaryError<sp/>-=<sp/>encoderResolution;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binaryRounded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((uint32_t)<sp/>decimalError<sp/>&gt;<sp/>(encoderResolution/2))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimalError<sp/>-=<sp/>encoderResolution;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimalRounded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((abs(binaryError)<sp/>*<sp/>10000)<sp/>&lt;=<sp/>(abs(decimalError)<sp/>&lt;&lt;<sp/>16))</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>error<sp/>smaller<sp/>-&gt;<sp/>use<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useDecimal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/>=<sp/>(remainder<sp/>&lt;&lt;<sp/>16)<sp/>/<sp/>encoderResolution<sp/>+<sp/>((binaryRounded)?<sp/>1:0);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainder<sp/>=<sp/>binaryRounded;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decimal<sp/>error<sp/>smaller<sp/>-&gt;<sp/>use<sp/>decimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useDecimal<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/>=<sp/>(remainder<sp/>*<sp/>10000)<sp/>/<sp/>encoderResolution<sp/>+<sp/>((decimalRounded)?<sp/>1:0);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remainder<sp/>=<sp/>decimalRounded;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tmp<sp/>=<sp/>(numerator<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(denominator<sp/>&amp;<sp/>0xFFFF);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8c_1a8e0dd916e0974d39abccff195dbd4647" kindref="member">tmc5062_writeInt</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1a7c66c3ef6f754e9ad58884f5da4aa436" kindref="member">TMC5062_ENC_CONST</ref>(channel),<sp/>tmp);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5062_8h_1a509a582503640e147bcc241d6b408ca5" kindref="member">TMC5062_FIELD_WRITE</ref>(tmc5062,<sp/>channel,<sp/><ref refid="TMC5062__Register_8h_1aedb47475507bd28eddd7e7c8a112ba0a" kindref="member">TMC5062_ENCMODE</ref>(channel),<sp/><ref refid="TMC5062__Fields_8h_1a993c5b1db5062d45f7609904cacf1c63" kindref="member">TMC5062_ENC_SEL_DECIMAL_MASK</ref>,<sp/><ref refid="TMC5062__Fields_8h_1a25ca5b84ea4f8ef4516208845f4d84ce" kindref="member">TMC5062_ENC_SEL_DECIMAL_SHIFT</ref>,<sp/>useDecimal);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>remainder;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5062/TMC5062.c"/>
  </compounddef>
</doxygen>
