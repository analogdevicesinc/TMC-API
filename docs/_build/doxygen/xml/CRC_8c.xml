<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="CRC_8c" kind="file" language="C++">
    <compoundname>CRC.c</compoundname>
    <includes refid="CRC_8h" local="yes">CRC.h</includes>
    <incdepgraph>
      <node id="1">
        <label>CRC.c</label>
        <link refid="CRC_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structCRCTypeDef" prot="public">CRCTypeDef</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" prot="public" static="no" mutable="no">
        <type><ref refid="structCRCTypeDef" kindref="compound">CRCTypeDef</ref></type>
        <definition>CRCTypeDef CRCTables[CRC_TABLE_COUNT]</definition>
        <argsstring>[CRC_TABLE_COUNT]</argsstring>
        <name>CRCTables</name>
        <initializer>= { 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" line="40" column="12" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" bodystart="40" bodyend="40"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="CRC_8c_1af32dad8d627fe6c47b93b96b02582116" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t flipByte</definition>
        <argsstring>(uint8_t value)</argsstring>
        <name>flipByte</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" line="184" column="16" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" bodystart="184" bodyend="194" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" declline="42" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="CRC_8c_1a354496293840e84e5312ef9d7de895c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t flipBitsInBytes</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>flipBitsInBytes</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" line="204" column="17" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" bodystart="204" bodyend="214" declfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" declline="43" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="CRC_8c_1a3957cbc0926e9aae37f98f4b58774b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc_fillCRC8Table</definition>
        <argsstring>(uint8_t polynomial, bool isReflected, uint8_t index)</argsstring>
        <name>tmc_fillCRC8Table</name>
        <param>
          <type>uint8_t</type>
          <declname>polynomial</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isReflected</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" line="89" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" bodystart="89" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="CRC_8c_1a0baf2b855f268eb52d46547acda09f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc_CRC8</definition>
        <argsstring>(uint8_t *data, uint32_t bytes, uint8_t index)</argsstring>
        <name>tmc_CRC8</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" line="151" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" bodystart="151" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="CRC_8c_1a3c65e4fd39c6ffb52ab18a9040d05797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc_tableGetPolynomial</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>tmc_tableGetPolynomial</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" line="167" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" bodystart="167" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="CRC_8c_1a704ddb41c4336498b349f742ebff63a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tmc_tableIsReflected</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>tmc_tableIsReflected</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" line="175" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c" bodystart="175" bodyend="181"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>is<sp/>a<sp/>generic<sp/>implementation<sp/>for<sp/>a<sp/>CRC8<sp/>generator<sp/>supporting</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>both<sp/>compile-time<sp/>(1)<sp/>and<sp/>run-time<sp/>initialized<sp/>Lookup<sp/>tables<sp/>for<sp/>efficient<sp/>CRC8<sp/>calculation.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>can<sp/>store<sp/>multiple<sp/>tables<sp/>for<sp/>different<sp/>polynomials<sp/>and<sp/>(non-)reflected<sp/>CRCs.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>different<sp/>tables<sp/>are<sp/>referenced<sp/>by<sp/>an<sp/>index,<sp/>with<sp/>an<sp/>upper<sp/>limit<sp/>set<sp/>at<sp/>compile<sp/>time<sp/>(CRC_TABLE_COUNT).</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>To<sp/>generate<sp/>CRCs<sp/>you<sp/>must<sp/>first<sp/>generate<sp/>the<sp/>Lookup-table<sp/>by<sp/>calling<sp/>fillCRCTable()</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>any<sp/>index.<sp/>CRCs<sp/>can<sp/>then<sp/>be<sp/>generated<sp/>from<sp/>any<sp/>data<sp/>buffer<sp/>by<sp/>calling<sp/>CRC()</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>same<sp/>index<sp/>previously<sp/>given<sp/>to<sp/>fillCRCTable().</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>table<sp/>generation<sp/>has<sp/>been<sp/>optimized<sp/>for<sp/>speed<sp/>so<sp/>that<sp/>the<sp/>runtime</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>table<sp/>generation<sp/>can<sp/>even<sp/>be<sp/>done<sp/>during<sp/>normal<sp/>operation<sp/>if<sp/>required.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>However,<sp/>as<sp/>long<sp/>as<sp/>the<sp/>required<sp/>polynomials<sp/>are<sp/>known<sp/>on<sp/>initialization,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>table<sp/>generation<sp/>should<sp/>be<sp/>done<sp/>at<sp/>that<sp/>time.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>Landungsbruecke<sp/>the<sp/>initialization<sp/>of<sp/>a<sp/>CRC<sp/>table<sp/>takes<sp/>~250µs.<sp/>(2)</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>Should<sp/>your<sp/>application<sp/>still<sp/>have<sp/>problems<sp/>with<sp/>the<sp/>table<sp/>calculation<sp/>time,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>algorithm<sp/>could<sp/>probably<sp/>be<sp/>speed<sp/>up<sp/>by<sp/>preparing<sp/>a<sp/>2-<sp/>or<sp/>4-bit<sp/>lookup<sp/>table</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>speed<sp/>up<sp/>the<sp/>actual<sp/>table<sp/>generation.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>(1):<sp/>For<sp/>compile-time<sp/>CRC<sp/>tables,<sp/>just<sp/>fill<sp/>the<sp/>table(s)<sp/>by<sp/>initializing<sp/>CRCTables[]<sp/>to<sp/>the<sp/>proper<sp/>values.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>(2):<sp/>Tested<sp/>by<sp/>toggling<sp/>a<sp/>GPIO<sp/>pin,<sp/>generating<sp/>a<sp/>table<sp/>in-between<sp/>and<sp/>measuring<sp/>the<sp/>GPIO<sp/>pulse<sp/>width.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CRC_8h" kindref="compound">CRC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structCRCTypeDef" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>table[256];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>polynomial;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isReflected;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><ref refid="structCRCTypeDef" kindref="compound">CRCTypeDef</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="structCRCTypeDef" kindref="compound">CRCTypeDef</ref><sp/><ref refid="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" kindref="member">CRCTables</ref>[<ref refid="CRC_8h_1a36a8b3d0206bdd790776cb2f99712e52" kindref="member">CRC_TABLE_COUNT</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="CRC_8c_1af32dad8d627fe6c47b93b96b02582116" kindref="member">flipByte</ref>(uint8_t<sp/>value);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="CRC_8c_1a354496293840e84e5312ef9d7de895c8" kindref="member">flipBitsInBytes</ref>(uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>generates<sp/>the<sp/>Lookup<sp/>table<sp/>used<sp/>for<sp/>CRC<sp/>calculations.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Arguments:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>polynomial:<sp/>The<sp/>CRC<sp/>polynomial<sp/>for<sp/>which<sp/>the<sp/>table<sp/>will<sp/>be<sp/>generated.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>bool<sp/>isReflected:<sp/>Indicator<sp/>whether<sp/>the<sp/>CRC<sp/>table<sp/>will<sp/>be<sp/>reflected<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>index:<sp/>The<sp/>index<sp/>of<sp/>the<sp/>table<sp/>to<sp/>be<sp/>filled.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>How<sp/>it<sp/>works:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>A<sp/>CRC<sp/>calculation<sp/>of<sp/>a<sp/>byte<sp/>can<sp/>be<sp/>done<sp/>by<sp/>taking<sp/>the<sp/>byte<sp/>to<sp/>be<sp/>CRC&apos;d,</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>shifting<sp/>it<sp/>left<sp/>by<sp/>one<sp/>(appending<sp/>a<sp/>0)<sp/>and<sp/>-<sp/>if<sp/>a<sp/>1<sp/>has<sp/>been<sp/>shifted<sp/>out<sp/>-</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>XOR-ing<sp/>in<sp/>the<sp/>CRC<sp/>polynomial.<sp/>After<sp/>8<sp/>iterations<sp/>the<sp/>result<sp/>will<sp/>be<sp/>the</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>CRC<sp/>of<sp/>the<sp/>Byte.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>below<sp/>does<sp/>this<sp/>in<sp/>a<sp/>compact<sp/>way,<sp/>by<sp/>using<sp/>all<sp/>4<sp/>bytes<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>to<sp/>do<sp/>4<sp/>separate<sp/>CRC<sp/>bytes<sp/>at<sp/>once.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>For<sp/>this<sp/>to<sp/>work<sp/>without<sp/>the<sp/>Byte<sp/>shifting<sp/>interfering<sp/>with<sp/>adjacent<sp/>bytes,</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>the<sp/>polynomial<sp/>has<sp/>the<sp/>8th<sp/>bit<sp/>(0x100)<sp/>set.<sp/>That<sp/>way,<sp/>if<sp/>the<sp/>shifted-out<sp/>bit</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>is<sp/>1,<sp/>the<sp/>following<sp/>XOR-ing<sp/>with<sp/>the<sp/>CRC<sp/>polynomial<sp/>will<sp/>set<sp/>that<sp/>1<sp/>to<sp/>a<sp/>0,</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>resulting<sp/>in<sp/>the<sp/>shifted-in<sp/>0<sp/>for<sp/>the<sp/>adjacent<sp/>byte.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>This<sp/>process<sp/>will<sp/>go<sp/>from<sp/>the<sp/>the<sp/>lowest<sp/>to<sp/>the<sp/>highest<sp/>byte,<sp/>resulting<sp/>in</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>fully<sp/>independent<sp/>byte-wise<sp/>CRC<sp/>calculations.<sp/>For<sp/>the<sp/>highest<sp/>byte,<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>shifted-out<sp/>byte<sp/>needs<sp/>to<sp/>be<sp/>stored<sp/>before<sp/>shifting<sp/>the<sp/>bytes<sp/>(isMSBSet).</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>for-loop<sp/>that<sp/>iterates<sp/>over<sp/>all<sp/>uint8_t<sp/>values<sp/>starts<sp/>out<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>values<sp/>3<sp/>to<sp/>0<sp/>stored<sp/>in<sp/>one<sp/>uint32_t:<sp/>0x03020100</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>for<sp/>each<sp/>iteration<sp/>each<sp/>uint8_t<sp/>value<sp/>will<sp/>increase<sp/>by<sp/>4..</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>0<sp/>-&gt;<sp/>4<sp/>-&gt;<sp/>8<sp/>-&gt;<sp/>C<sp/>-&gt;<sp/>...</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>1<sp/>-&gt;<sp/>5<sp/>-&gt;<sp/>9<sp/>-&gt;<sp/>D<sp/>-&gt;<sp/>...</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>2<sp/>-&gt;<sp/>6<sp/>-&gt;<sp/>A<sp/>-&gt;<sp/>E<sp/>-&gt;<sp/>...</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>3<sp/>-&gt;<sp/>7<sp/>-&gt;<sp/>B<sp/>-&gt;<sp/>F<sp/>-&gt;<sp/>...</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>..resulting<sp/>in<sp/>an<sp/>increase<sp/>of<sp/>the<sp/>uint32_t<sp/>by<sp/>0x04040404:</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>0x03020100<sp/>-&gt;<sp/>0x07060504<sp/>-&gt;<sp/>0x0B0A0908<sp/>-&gt;<sp/>0x0F0E0D0C<sp/>-&gt;<sp/>...</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>The<sp/>loop<sp/>ends<sp/>as<sp/>soon<sp/>as<sp/>we<sp/>have<sp/>iterated<sp/>over<sp/>all<sp/>uint8_t<sp/>values.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>We<sp/>detect<sp/>that<sp/>by<sp/>looking<sp/>for<sp/>the<sp/>byte-wise<sp/>overflow<sp/>into<sp/>the<sp/>next<sp/>byte:</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>0xFFFEFDFC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;-<sp/>last<sp/>uint32_t<sp/>value<sp/>to<sp/>be<sp/>calculated</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>0xFF,<sp/><sp/>0xFE,<sp/><sp/>0xFD,<sp/><sp/>0xFC<sp/><sp/><sp/>&lt;-<sp/>the<sp/>corresponding<sp/>uint8_t<sp/>values</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>0x103,<sp/>0x102,<sp/>0x101,<sp/>0x100<sp/><sp/>&lt;-<sp/>incremented<sp/>uint8_t<sp/>values<sp/>(overflow<sp/>into<sp/>the<sp/>next<sp/>byte!)</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>0x04030200<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;-<sp/>uint32_t<sp/>value<sp/>with<sp/>the<sp/>overflowed<sp/>bytes</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>We<sp/>have<sp/>the<sp/>lower<sp/>uint8_t<sp/>values<sp/>at<sp/>the<sp/>lower<sp/>bytes<sp/>of<sp/>the<sp/>uint32_t.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>This<sp/>allows<sp/>us<sp/>to<sp/>simply<sp/>store<sp/>the<sp/>lowest<sp/>byte<sp/>of<sp/>the<sp/>uint32_t,</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>right-shift<sp/>the<sp/>uint32_t<sp/>by<sp/>8<sp/>and<sp/>increment<sp/>the<sp/>table<sp/>pointer.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>After<sp/>4<sp/>iterations<sp/>of<sp/>that<sp/>all<sp/>4<sp/>bytes<sp/>of<sp/>the<sp/>uint32_t<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>table.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">uint8_t<sp/><ref refid="CRC_8c_1a3957cbc0926e9aae37f98f4b58774b82" kindref="member">tmc_fillCRC8Table</ref>(uint8_t<sp/>polynomial,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isReflected,<sp/>uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>CRCdata;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>pointer<sp/>for<sp/>traversing<sp/>the<sp/>result<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*table;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/><ref refid="CRC_8h_1a36a8b3d0206bdd790776cb2f99712e52" kindref="member">CRC_TABLE_COUNT</ref>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" kindref="member">CRCTables</ref>[index].<ref refid="structCRCTypeDef_1a03eaa9e0d7e5e94189eea35decc0e0c6" kindref="member">polynomial</ref><sp/><sp/><sp/>=<sp/>polynomial;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" kindref="member">CRCTables</ref>[index].<ref refid="structCRCTypeDef_1a251abe7f5f013c03c6e153ab2a5dd600" kindref="member">isReflected</ref><sp/><sp/>=<sp/>isReflected;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>table<sp/>=<sp/>&amp;<ref refid="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" kindref="member">CRCTables</ref>[index].<ref refid="structCRCTypeDef_1ab3e50b31f8af300e972cd3e0e205ec8f" kindref="member">table</ref>[0];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extend<sp/>the<sp/>polynomial<sp/>to<sp/>correct<sp/>byte<sp/>MSBs<sp/>shifting<sp/>into<sp/>next<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>poly<sp/>=<sp/>(uint32_t)<sp/>polynomial<sp/>|<sp/>0x0100;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>256<sp/>possible<sp/>uint8_t<sp/>values,<sp/>compressed<sp/>into<sp/>a<sp/>uint32_t<sp/>(see<sp/>detailed<sp/>explanation<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0x03020100;<sp/>i<sp/>!=<sp/>0x04030200;<sp/>i+=0x04040404)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>reflected<sp/>table:<sp/>Flip<sp/>the<sp/>bits<sp/>of<sp/>each<sp/>input<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>=<sp/>(isReflected)?<sp/><ref refid="CRC_8c_1a354496293840e84e5312ef9d7de895c8" kindref="member">flipBitsInBytes</ref>(i)<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>8<sp/>Bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>value<sp/>of<sp/>soon-to-be<sp/>shifted<sp/>out<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>isMSBSet<sp/>=<sp/>(CRCdata<sp/>&amp;<sp/>0x80000000)?<sp/>1:0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CRC<sp/>Shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XOR<sp/>the<sp/>bytes<sp/>when<sp/>required,<sp/>lowest<sp/>to<sp/>highest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>^=<sp/>(CRCdata<sp/>&amp;<sp/>0x00000100)?<sp/>(poly<sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>^=<sp/>(CRCdata<sp/>&amp;<sp/>0x00010000)?<sp/>(poly<sp/>&lt;&lt;<sp/>8<sp/>)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>^=<sp/>(CRCdata<sp/>&amp;<sp/>0x01000000)?<sp/>(poly<sp/>&lt;&lt;<sp/>16)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>^=<sp/>(isMSBSet)?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(poly<sp/>&lt;&lt;<sp/>24)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>reflected<sp/>table:<sp/>Flip<sp/>the<sp/>bits<sp/>of<sp/>each<sp/>output<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>=<sp/>(isReflected)?<sp/><ref refid="CRC_8c_1a354496293840e84e5312ef9d7de895c8" kindref="member">flipBitsInBytes</ref>(CRCdata)<sp/>:<sp/>CRCdata;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>CRC<sp/>result<sp/>bytes<sp/>in<sp/>the<sp/>table<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*table++<sp/>=<sp/>(uint8_t)<sp/>CRCdata;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*table++<sp/>=<sp/>(uint8_t)<sp/>CRCdata;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*table++<sp/>=<sp/>(uint8_t)<sp/>CRCdata;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRCdata<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*table++<sp/>=<sp/>(uint8_t)<sp/>CRCdata;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>calculates<sp/>the<sp/>CRC<sp/>from<sp/>a<sp/>data<sp/>buffer</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>Arguments:</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*data:<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>data<sp/>that<sp/>will<sp/>be<sp/>CRC&apos;d.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>bytes:<sp/>The<sp/>length<sp/>of<sp/>the<sp/>data<sp/>buffer.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>index:<sp/>The<sp/>index<sp/>of<sp/>the<sp/>CRC<sp/>table<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">uint8_t<sp/><ref refid="CRC_8c_1a0baf2b855f268eb52d46547acda09f73" kindref="member">tmc_CRC8</ref>(uint8_t<sp/>*data,<sp/>uint32_t<sp/>bytes,<sp/>uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*table;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/><ref refid="CRC_8h_1a36a8b3d0206bdd790776cb2f99712e52" kindref="member">CRC_TABLE_COUNT</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>table<sp/>=<sp/>&amp;<ref refid="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" kindref="member">CRCTables</ref>[index].<ref refid="structCRCTypeDef_1ab3e50b31f8af300e972cd3e0e205ec8f" kindref="member">table</ref>[0];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bytes--)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>table[result<sp/>^<sp/>*data++];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" kindref="member">CRCTables</ref>[index].isReflected)?<sp/><ref refid="CRC_8c_1af32dad8d627fe6c47b93b96b02582116" kindref="member">flipByte</ref>(result)<sp/>:<sp/>result;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">uint8_t<sp/><ref refid="CRC_8c_1a3c65e4fd39c6ffb52ab18a9040d05797" kindref="member">tmc_tableGetPolynomial</ref>(uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/><ref refid="CRC_8h_1a36a8b3d0206bdd790776cb2f99712e52" kindref="member">CRC_TABLE_COUNT</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" kindref="member">CRCTables</ref>[index].<ref refid="structCRCTypeDef_1a03eaa9e0d7e5e94189eea35decc0e0c6" kindref="member">polynomial</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="CRC_8c_1a704ddb41c4336498b349f742ebff63a0" kindref="member">tmc_tableIsReflected</ref>(uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/><ref refid="CRC_8h_1a36a8b3d0206bdd790776cb2f99712e52" kindref="member">CRC_TABLE_COUNT</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="CRC_8c_1a67da2e812767527420ab1747f13c4ae7" kindref="member">CRCTables</ref>[index].<ref refid="structCRCTypeDef_1a251abe7f5f013c03c6e153ab2a5dd600" kindref="member">isReflected</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="CRC_8c_1af32dad8d627fe6c47b93b96b02582116" kindref="member">flipByte</ref>(uint8_t<sp/>value)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>odd<sp/>and<sp/>even<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((value<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>0x55)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x55)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>consecutive<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((value<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x33)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x33)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>nibbles<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((value<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x0F)<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>helper<sp/>function<sp/>switches<sp/>all<sp/>bits<sp/>within<sp/>each<sp/>byte.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>The<sp/>byte<sp/>order<sp/>remains<sp/>the<sp/>same:</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>[b31<sp/>b30<sp/>b29<sp/>b28<sp/>b27<sp/>b26<sp/>b25<sp/>b24<sp/>..<sp/>b7<sp/>b6<sp/>b5<sp/>b4<sp/>b3<sp/>b2<sp/>b1<sp/>b0]</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\||/</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\/</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>[b24<sp/>b25<sp/>b26<sp/>b27<sp/>b28<sp/>b29<sp/>b30<sp/>b31<sp/>..<sp/>b0<sp/>b1<sp/>b2<sp/>b3<sp/>b4<sp/>b5<sp/>b6<sp/>b7]</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="CRC_8c_1a354496293840e84e5312ef9d7de895c8" kindref="member">flipBitsInBytes</ref>(uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>odd<sp/>and<sp/>even<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((value<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>0x55555555)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x55555555)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>consecutive<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((value<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0x33333333)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x33333333)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swap<sp/>nibbles<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>((value<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F0F0F0F)<sp/>|<sp/>((value<sp/>&amp;<sp/>0x0F0F0F0F)<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/helpers/CRC.c"/>
  </compounddef>
</doxygen>
