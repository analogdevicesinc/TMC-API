<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="LinearRamp1_8c" kind="file" language="C++">
    <compoundname>LinearRamp1.c</compoundname>
    <includes refid="LinearRamp1_8h" local="yes">LinearRamp1.h</includes>
    <includes refid="Functions_8h" local="yes">tmc/helpers/Functions.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="16">
        <label>tmc/helpers/Functions.h</label>
        <link refid="Functions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>LinearRamp1.c</label>
        <link refid="LinearRamp1_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>LinearRamp1.h</label>
        <link refid="LinearRamp1_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Ramp.h</label>
        <link refid="Ramp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="LinearRamp1_8c_1a1d998c909468a1438e89c30bf641f65a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_init</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_init</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="13" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="13" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a60cff28e1206055c3c6953cdddbcac12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_enabled</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, bool enabled)</argsstring>
        <name>tmc_ramp_linear_set_enabled</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="31" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a48b0a2be1f371dff27bc6b23c1e1463a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_maxVelocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, uint32_t maxVelocity)</argsstring>
        <name>tmc_ramp_linear_set_maxVelocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="36" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1af4dde931630ecf011ef0902106897a7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_targetPosition</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, int32_t targetPosition)</argsstring>
        <name>tmc_ramp_linear_set_targetPosition</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>targetPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="41" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a6bec514df1ecef0a2561f04a2be7e6bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_rampPosition</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, int32_t rampPosition)</argsstring>
        <name>tmc_ramp_linear_set_rampPosition</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>rampPosition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="46" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1adedbb2f0f348022f9d07a14ad7d6561a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_targetVelocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, int32_t targetVelocity)</argsstring>
        <name>tmc_ramp_linear_set_targetVelocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>targetVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="51" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1af64156141b39b9e0eef9ca6d10f88cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_rampVelocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, int32_t rampVelocity)</argsstring>
        <name>tmc_ramp_linear_set_rampVelocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>rampVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="56" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a3b33bb3d98393a81a0b732bccbfe8b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_acceleration</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, int32_t acceleration)</argsstring>
        <name>tmc_ramp_linear_set_acceleration</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="61" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a465e9571a8b56cdbc56e8e89699f4e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_mode</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, TMC_LinearRamp_Mode mode)</argsstring>
        <name>tmc_ramp_linear_set_mode</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type><ref refid="LinearRamp1_8h_1a12af13b50931d268dfbe76d39234e02c" kindref="member">TMC_LinearRamp_Mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="66" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a367901dc82ff7fe7697bae20ee33a2a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_precision</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, uint32_t precision)</argsstring>
        <name>tmc_ramp_linear_set_precision</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="71" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1ad74faa4d118a61d56f8128025790bd41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_homingDistance</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, uint32_t homingDistance)</argsstring>
        <name>tmc_ramp_linear_set_homingDistance</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>homingDistance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="76" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1acbed9e7f618dcc87443fc0bb18906ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_set_stopVelocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp, uint32_t stopVelocity)</argsstring>
        <name>tmc_ramp_linear_set_stopVelocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>stopVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="81" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1ada73138fe95b5541a5e6d0a28106b4e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tmc_ramp_linear_get_enabled</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_enabled</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="86" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a11bf56f51c42123a8997ffa82316ef1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t tmc_ramp_linear_get_maxVelocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_maxVelocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="91" column="10" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a54b035b4559a819e37f60c7f7b10724d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc_ramp_linear_get_targetPosition</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_targetPosition</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="96" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1af26a7b981a214bdd9bc81f76891ca76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc_ramp_linear_get_rampPosition</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_rampPosition</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="101" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1ad8ffde47ec45ff17f49d54b02e25b90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc_ramp_linear_get_targetVelocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_targetVelocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="106" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1af17792e8fa5bfcea82de372d446b0a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc_ramp_linear_get_rampVelocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_rampVelocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="111" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a8a773f498a53b28082d9aa94a93f3d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc_ramp_linear_get_acceleration</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_acceleration</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="116" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a90af0ff9f3e9d4697a22ef8ca859fb88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72" kindref="member">TMC_LinearRamp_State</ref></type>
        <definition>TMC_LinearRamp_State tmc_ramp_linear_get_state</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_state</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="121" column="22" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a4d887265d08eafead61d1d6b0fc11a5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="LinearRamp1_8h_1a12af13b50931d268dfbe76d39234e02c" kindref="member">TMC_LinearRamp_Mode</ref></type>
        <definition>TMC_LinearRamp_Mode tmc_ramp_linear_get_mode</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_mode</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="126" column="21" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1ad563d0c806cb48fc24d87b1ddd097ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t tmc_ramp_linear_get_precision</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_precision</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="131" column="10" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1af2225f2f44a0c610d595e4d5a34a726a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t tmc_ramp_linear_get_acceleration_limit</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_acceleration_limit</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="137" column="10" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1aee919cbd20c82f1d0a4a234c130604bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t tmc_ramp_linear_get_velocity_limit</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_velocity_limit</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="142" column="10" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a61166d7167ae9c5fd0f8983cf9897e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t tmc_ramp_linear_get_homingDistance</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_homingDistance</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="147" column="10" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1addb76158add4366488fa617173ae0543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t tmc_ramp_linear_get_stopVelocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_get_stopVelocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="152" column="10" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1ae7246587f66f482d75e1651458aa1a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc_ramp_linear_compute</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_compute</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="157" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1a8de164aee98981f945d36d1840ff0dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t tmc_ramp_linear_compute_velocity</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_compute_velocity</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="163" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="163" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="LinearRamp1_8c_1aad4d692139ba6ced4d64fa9470ea028b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc_ramp_linear_compute_position</definition>
        <argsstring>(TMC_LinearRamp *linearRamp)</argsstring>
        <name>tmc_ramp_linear_compute_position</name>
        <param>
          <type><ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref> *</type>
          <declname>linearRamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" line="209" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c" bodystart="209" bodyend="303"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2018<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="LinearRamp1_8h" kindref="compound">LinearRamp1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Functions_8h" kindref="compound">tmc/helpers/Functions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1a1d998c909468a1438e89c30bf641f65a" kindref="member">tmc_ramp_linear_init</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6ad4b77eb22f23e19227d43c76a054b6" kindref="member">maxVelocity</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a9b3bf9a0f3dde00f440edd5f1bd6c0c0" kindref="member">acceleration</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1abfc4ad3d560d857dd5a4d130a9fa3486" kindref="member">rampEnabled</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6d65cc49ddb40e15288999442b6d0c39" kindref="member">accumulatorVelocity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6feb0809ba253c85b78e575ddac1b490" kindref="member">accumulatorPosition</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6a2ca614366622e702c83e4cab5fc29e" kindref="member">rampMode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="LinearRamp1_8h_1a12af13b50931d268dfbe76d39234e02ca83d0010576a351f0dca8991cc3fcbef2" kindref="member">TMC_RAMP_LINEAR_MODE_VELOCITY</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1aff852c22d41d7b8bfa6e47e69b140b80" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a650ecf73c62ac51e493b8fa0ce349ada" kindref="member">TMC_RAMP_LINEAR_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="LinearRamp1_8h_1a5ffead24659c88c89c2879e9f77c73d6" kindref="member">TMC_RAMP_LINEAR_DEFAULT_PRECISION</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1ae789caea6fa4106f0f8f668a51a9be27" kindref="member">homingDistance</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="LinearRamp1_8h_1a48cdba3928ce22dec9a26b6761dd7cfd" kindref="member">TMC_RAMP_LINEAR_DEFAULT_HOMING_DISTANCE</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a3356af380cc043d70b2fd4d8aae98610" kindref="member">stopVelocity</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="LinearRamp1_8h_1a19578c5bec7189185f4219dd0e2c6d77" kindref="member">TMC_RAMP_LINEAR_DEFAULT_STOP_VELOCITY</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1a60cff28e1206055c3c6953cdddbcac12" kindref="member">tmc_ramp_linear_set_enabled</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1abfc4ad3d560d857dd5a4d130a9fa3486" kindref="member">rampEnabled</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1a48b0a2be1f371dff27bc6b23c1e1463a" kindref="member">tmc_ramp_linear_set_maxVelocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/>uint32_t<sp/>maxVelocity)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6ad4b77eb22f23e19227d43c76a054b6" kindref="member">maxVelocity</ref><sp/>=<sp/>maxVelocity;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1af4dde931630ecf011ef0902106897a7d" kindref="member">tmc_ramp_linear_set_targetPosition</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/>int32_t<sp/>targetPosition)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>=<sp/>targetPosition;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1a6bec514df1ecef0a2561f04a2be7e6bb" kindref="member">tmc_ramp_linear_set_rampPosition</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/>int32_t<sp/>rampPosition)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref><sp/>=<sp/>rampPosition;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1adedbb2f0f348022f9d07a14ad7d6561a" kindref="member">tmc_ramp_linear_set_targetVelocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/>int32_t<sp/>targetVelocity)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref><sp/>=<sp/>targetVelocity;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1af64156141b39b9e0eef9ca6d10f88cc2" kindref="member">tmc_ramp_linear_set_rampVelocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/>int32_t<sp/>rampVelocity)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>=<sp/>rampVelocity;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1a3b33bb3d98393a81a0b732bccbfe8b02" kindref="member">tmc_ramp_linear_set_acceleration</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/>int32_t<sp/>acceleration)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a9b3bf9a0f3dde00f440edd5f1bd6c0c0" kindref="member">acceleration</ref><sp/>=<sp/>acceleration;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1a465e9571a8b56cdbc56e8e89699f4e2a" kindref="member">tmc_ramp_linear_set_mode</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/><ref refid="LinearRamp1_8h_1a12af13b50931d268dfbe76d39234e02c" kindref="member">TMC_LinearRamp_Mode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6a2ca614366622e702c83e4cab5fc29e" kindref="member">rampMode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1a367901dc82ff7fe7697bae20ee33a2a4" kindref="member">tmc_ramp_linear_set_precision</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*<sp/>linearRamp,<sp/>uint32_t<sp/>precision)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref><sp/>=<sp/>precision;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1ad74faa4d118a61d56f8128025790bd41" kindref="member">tmc_ramp_linear_set_homingDistance</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/>uint32_t<sp/>homingDistance)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1ae789caea6fa4106f0f8f668a51a9be27" kindref="member">homingDistance</ref><sp/>=<sp/>homingDistance;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1acbed9e7f618dcc87443fc0bb18906ba1" kindref="member">tmc_ramp_linear_set_stopVelocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp,<sp/>uint32_t<sp/>stopVelocity)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a3356af380cc043d70b2fd4d8aae98610" kindref="member">stopVelocity</ref><sp/>=<sp/>stopVelocity;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1ada73138fe95b5541a5e6d0a28106b4e7" kindref="member">tmc_ramp_linear_get_enabled</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1abfc4ad3d560d857dd5a4d130a9fa3486" kindref="member">rampEnabled</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">uint32_t<sp/><ref refid="LinearRamp1_8c_1a11bf56f51c42123a8997ffa82316ef1c" kindref="member">tmc_ramp_linear_get_maxVelocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6ad4b77eb22f23e19227d43c76a054b6" kindref="member">maxVelocity</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">int32_t<sp/><ref refid="LinearRamp1_8c_1a54b035b4559a819e37f60c7f7b10724d" kindref="member">tmc_ramp_linear_get_targetPosition</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">int32_t<sp/><ref refid="LinearRamp1_8c_1af26a7b981a214bdd9bc81f76891ca76d" kindref="member">tmc_ramp_linear_get_rampPosition</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">int32_t<sp/><ref refid="LinearRamp1_8c_1ad8ffde47ec45ff17f49d54b02e25b90d" kindref="member">tmc_ramp_linear_get_targetVelocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">int32_t<sp/><ref refid="LinearRamp1_8c_1af17792e8fa5bfcea82de372d446b0a0f" kindref="member">tmc_ramp_linear_get_rampVelocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">int32_t<sp/><ref refid="LinearRamp1_8c_1a8a773f498a53b28082d9aa94a93f3d3d" kindref="member">tmc_ramp_linear_get_acceleration</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a9b3bf9a0f3dde00f440edd5f1bd6c0c0" kindref="member">acceleration</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72" kindref="member">TMC_LinearRamp_State</ref><sp/><ref refid="LinearRamp1_8c_1a90af0ff9f3e9d4697a22ef8ca859fb88" kindref="member">tmc_ramp_linear_get_state</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1aff852c22d41d7b8bfa6e47e69b140b80" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="LinearRamp1_8h_1a12af13b50931d268dfbe76d39234e02c" kindref="member">TMC_LinearRamp_Mode</ref><sp/><ref refid="LinearRamp1_8c_1a4d887265d08eafead61d1d6b0fc11a5d" kindref="member">tmc_ramp_linear_get_mode</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6a2ca614366622e702c83e4cab5fc29e" kindref="member">rampMode</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">uint32_t<sp/><ref refid="LinearRamp1_8c_1ad563d0c806cb48fc24d87b1ddd097ee9" kindref="member">tmc_ramp_linear_get_precision</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>acceleration<sp/>depends<sp/>on<sp/>the<sp/>precision<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">uint32_t<sp/><ref refid="LinearRamp1_8c_1af2225f2f44a0c610d595e4d5a34a726a" kindref="member">tmc_ramp_linear_get_acceleration_limit</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0xFFFFFFFFu<sp/>/<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref>)<sp/>*<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">uint32_t<sp/><ref refid="LinearRamp1_8c_1aee919cbd20c82f1d0a4a234c130604bf" kindref="member">tmc_ramp_linear_get_velocity_limit</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">uint32_t<sp/><ref refid="LinearRamp1_8c_1a61166d7167ae9c5fd0f8983cf9897e67" kindref="member">tmc_ramp_linear_get_homingDistance</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1ae789caea6fa4106f0f8f668a51a9be27" kindref="member">homingDistance</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">uint32_t<sp/><ref refid="LinearRamp1_8c_1addb76158add4366488fa617173ae0543" kindref="member">tmc_ramp_linear_get_stopVelocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a3356af380cc043d70b2fd4d8aae98610" kindref="member">stopVelocity</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">int32_t<sp/><ref refid="LinearRamp1_8c_1ae7246587f66f482d75e1651458aa1a4d" kindref="member">tmc_ramp_linear_compute</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LinearRamp1_8c_1aad4d692139ba6ced4d64fa9470ea028b" kindref="member">tmc_ramp_linear_compute_position</ref>(linearRamp);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1a8de164aee98981f945d36d1840ff0dac" kindref="member">tmc_ramp_linear_compute_velocity</ref>(linearRamp);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">int32_t<sp/><ref refid="LinearRamp1_8c_1a8de164aee98981f945d36d1840ff0dac" kindref="member">tmc_ramp_linear_compute_velocity</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>accelerating<sp/>=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>!=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1abfc4ad3d560d857dd5a4d130a9fa3486" kindref="member">rampEnabled</ref>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>current<sp/>acceleration<sp/>to<sp/>accumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6d65cc49ddb40e15288999442b6d0c39" kindref="member">accumulatorVelocity</ref><sp/>+=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a9b3bf9a0f3dde00f440edd5f1bd6c0c0" kindref="member">acceleration</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>velocity<sp/>delta<sp/>value<sp/>and<sp/>keep<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>velocity<sp/>accumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>dv<sp/>=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6d65cc49ddb40e15288999442b6d0c39" kindref="member">accumulatorVelocity</ref><sp/>/<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6d65cc49ddb40e15288999442b6d0c39" kindref="member">accumulatorVelocity</ref><sp/>=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6d65cc49ddb40e15288999442b6d0c39" kindref="member">accumulatorVelocity</ref><sp/>%<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>dv<sp/>to<sp/>rampVelocity,<sp/>and<sp/>regulate<sp/>to<sp/>target<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>&lt;<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>=<sp/><ref refid="Macros_8h_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>+<sp/>dv,<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>&gt;<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>=<sp/><ref refid="Macros_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>-<sp/>dv,<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>target<sp/>velocity<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>accumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6d65cc49ddb40e15288999442b6d0c39" kindref="member">accumulatorVelocity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>velocity<sp/>delta<sp/>value<sp/>and<sp/>keep<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>position<sp/>accumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6feb0809ba253c85b78e575ddac1b490" kindref="member">accumulatorPosition</ref><sp/>+=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>dx<sp/>=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6feb0809ba253c85b78e575ddac1b490" kindref="member">accumulatorPosition</ref><sp/>/<sp/>(int32_t)<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6feb0809ba253c85b78e575ddac1b490" kindref="member">accumulatorPosition</ref><sp/>=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6feb0809ba253c85b78e575ddac1b490" kindref="member">accumulatorPosition</ref><sp/>%<sp/>(int32_t)<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a24784cec0e93298d5d7a48f09c6f624d" kindref="member">precision</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dx<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>actual<sp/>position<sp/>determined<sp/>by<sp/>position<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref><sp/>+=<sp/>(dx<sp/>&lt;<sp/>0)<sp/>?<sp/>(-1)<sp/>:<sp/>(1);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>acceleration<sp/>steps<sp/>needed<sp/>for<sp/>decelerating<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0c8ab62cce8a472f50857907bdf4c9f7" kindref="member">accelerationSteps</ref><sp/>+=<sp/>(abs(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref>)<sp/>&lt;<sp/>abs(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref>))<sp/>?<sp/>accelerating<sp/>:<sp/>-accelerating;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0c8ab62cce8a472f50857907bdf4c9f7" kindref="member">accelerationSteps</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0c8ab62cce8a472f50857907bdf4c9f7" kindref="member">accelerationSteps</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8c_1aad4d692139ba6ced4d64fa9470ea028b" kindref="member">tmc_ramp_linear_compute_position</ref>(<ref refid="structTMC__LinearRamp" kindref="compound">TMC_LinearRamp</ref><sp/>*linearRamp)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!linearRamp-&gt;<ref refid="structTMC__LinearRamp_1abfc4ad3d560d857dd5a4d130a9fa3486" kindref="member">rampEnabled</ref>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6a2ca614366622e702c83e4cab5fc29e" kindref="member">rampMode</ref><sp/>!=<sp/><ref refid="LinearRamp1_8h_1a12af13b50931d268dfbe76d39234e02ca6a2e548e29be292312d19f9c5aaf4fe6" kindref="member">TMC_RAMP_LINEAR_MODE_POSITION</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>steps<sp/>needed<sp/>to<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>diffx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1aff852c22d41d7b8bfa6e47e69b140b80" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a650ecf73c62ac51e493b8fa0ce349ada" kindref="member">TMC_RAMP_LINEAR_STATE_IDLE</ref>:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0c8ab62cce8a472f50857907bdf4c9f7" kindref="member">accelerationSteps</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref><sp/>==<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1aff852c22d41d7b8bfa6e47e69b140b80" kindref="member">state</ref><sp/>=<sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a6c6951194c610ef1f0bf95508a6db6af" kindref="member">TMC_RAMP_LINEAR_STATE_DRIVING</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a6c6951194c610ef1f0bf95508a6db6af" kindref="member">TMC_RAMP_LINEAR_STATE_DRIVING</ref>:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>distance<sp/>to<sp/>target<sp/>(positive<sp/>=<sp/>driving<sp/>towards<sp/>target)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>-<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>-(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>-<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>abs(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>-<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Steps<sp/>left<sp/>required<sp/>for<sp/>braking?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(+<sp/>1<sp/>to<sp/>compensate<sp/>rounding<sp/>(flooring)<sp/>errors<sp/>of<sp/>the<sp/>position<sp/>accumulator)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0c8ab62cce8a472f50857907bdf4c9f7" kindref="member">accelerationSteps</ref><sp/>+<sp/>1<sp/>&gt;=<sp/>diffx)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1aff852c22d41d7b8bfa6e47e69b140b80" kindref="member">state</ref><sp/>=<sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a77888713aadb003f46e7ee0ed4a79437" kindref="member">TMC_RAMP_LINEAR_STATE_BRAKING</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Driving<sp/>-<sp/>apply<sp/>VMAX<sp/>(this<sp/>also<sp/>allows<sp/>mid-ramp<sp/>VMAX<sp/>changes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref><sp/>=<sp/>(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>&gt;<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>)<sp/>?<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a6ad4b77eb22f23e19227d43c76a054b6" kindref="member">maxVelocity</ref><sp/>:<sp/>-linearRamp-&gt;maxVelocity;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a77888713aadb003f46e7ee0ed4a79437" kindref="member">TMC_RAMP_LINEAR_STATE_BRAKING</ref>:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>==<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref>)<sp/>&lt;=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a3356af380cc043d70b2fd4d8aae98610" kindref="member">stopVelocity</ref>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>reached,<sp/>velocity<sp/>within<sp/>cutoff<sp/>threshold<sp/>(or<sp/>zero)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1aff852c22d41d7b8bfa6e47e69b140b80" kindref="member">state</ref><sp/>=<sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a650ecf73c62ac51e493b8fa0ce349ada" kindref="member">TMC_RAMP_LINEAR_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>still<sp/>too<sp/>fast,<sp/>we&apos;re<sp/>going<sp/>to<sp/>miss<sp/>the<sp/>target<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>the<sp/>deceleration<sp/>continue<sp/>until<sp/>velocity<sp/>is<sp/>zero,<sp/>then<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>home<sp/>when<sp/>within<sp/>homing<sp/>distance<sp/>or<sp/>start<sp/>a<sp/>new<sp/>ramp<sp/>(RAMP_DRIVING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>towards<sp/>the<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>not<sp/>at<sp/>the<sp/>target<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>decelerating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>distance<sp/>to<sp/>target<sp/>(positive<sp/>=<sp/>driving<sp/>towards<sp/>target)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>-<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0aa2232e6ddac3535c5e0f9b4879e37a" kindref="member">rampVelocity</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>-(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>-<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>abs(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>-<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enough<sp/>space<sp/>to<sp/>accelerate<sp/>again?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(+<sp/>1<sp/>to<sp/>compensate<sp/>rounding<sp/>(flooring)<sp/>errors<sp/>of<sp/>the<sp/>position<sp/>accumulator)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a0c8ab62cce8a472f50857907bdf4c9f7" kindref="member">accelerationSteps</ref><sp/>+<sp/>1<sp/>&lt;<sp/>diffx)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1aff852c22d41d7b8bfa6e47e69b140b80" kindref="member">state</ref><sp/>=<sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a6c6951194c610ef1f0bf95508a6db6af" kindref="member">TMC_RAMP_LINEAR_STATE_DRIVING</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Standing<sp/>still<sp/>(not<sp/>at<sp/>the<sp/>target<sp/>position)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>-<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>)<sp/>&lt;=<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1ae789caea6fa4106f0f8f668a51a9be27" kindref="member">homingDistance</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Within<sp/>homing<sp/>distance<sp/>-<sp/>drive<sp/>with<sp/>stop<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a873636f5f69940df6f199978b75378b8" kindref="member">targetVelocity</ref><sp/>=<sp/>(linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a72229b1359cec3515a993fdae83f47fa" kindref="member">targetPosition</ref><sp/>&gt;<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a91fc84d3a0ce09bb0ee2dadccd4c731e" kindref="member">rampPosition</ref>)?<sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1a3356af380cc043d70b2fd4d8aae98610" kindref="member">stopVelocity</ref><sp/>:<sp/>-linearRamp-&gt;stopVelocity;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>within<sp/>homing<sp/>distance<sp/>-<sp/>start<sp/>a<sp/>new<sp/>motion<sp/>by<sp/>switching<sp/>to<sp/>RAMP_IDLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>(targetPosition<sp/>!=<sp/>actualPosition)<sp/>a<sp/>new<sp/>ramp<sp/>will<sp/>be<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRamp-&gt;<ref refid="structTMC__LinearRamp_1aff852c22d41d7b8bfa6e47e69b140b80" kindref="member">state</ref><sp/>=<sp/><ref refid="LinearRamp1_8h_1a45bb9a99b1fd7cc060d81f63b5b61c72a650ecf73c62ac51e493b8fa0ce349ada" kindref="member">TMC_RAMP_LINEAR_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ramp/LinearRamp1.c"/>
  </compounddef>
</doxygen>
