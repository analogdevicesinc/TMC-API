<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="TMC5271_8c" kind="file" language="C++">
    <compoundname>TMC5271.c</compoundname>
    <includes refid="TMC5271_8h" local="no">tmc/ic/TMC5271/TMC5271.h</includes>
    <incdepgraph>
      <node id="3">
        <label>tmc/helpers/API_Header.h</label>
        <link refid="API__Header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Bits.h</label>
        <link refid="Bits_8h"/>
      </node>
      <node id="12">
        <label>CRC.h</label>
        <link refid="CRC_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
      </node>
      <node id="10">
        <label>Macros.h</label>
        <link refid="Macros_8h"/>
      </node>
      <node id="13">
        <label>RegisterAccess.h</label>
        <link refid="RegisterAccess_8h"/>
      </node>
      <node id="6">
        <label>Types.h</label>
        <link refid="Types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TMC5271.c</label>
        <link refid="TMC5271_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tmc/ic/TMC5271/TMC5271.h</label>
        <link refid="TMC5271_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>tmc/ic/TMC5271/TMC5271_Constants.h</label>
        <link refid="TMC5271__Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>../TMC5271/TMC5271_Fields.h</label>
        <link refid="TMC5271__Fields_8h"/>
      </node>
      <node id="15">
        <label>../TMC5271/TMC5271_Register.h</label>
        <link refid="TMC5271__Register_8h"/>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="TMC5271_8c_1aaf1a0409cc6ffed30493c7d6457b8a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_init</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint8_t channel, ConfigurationTypeDef *config)</argsstring>
        <name>tmc5271_init</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="19" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="19" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a687260bbaeca1b2ac28673c310cfe454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5271_reset</definition>
        <argsstring>(TMC5271TypeDef *tmc5271)</argsstring>
        <name>tmc5271_reset</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="36" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="36" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a49ffd3bf75a6e8d8c7eed2298499edbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_setCallback</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, tmc5271_callback callback)</argsstring>
        <name>tmc5271_setCallback</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type><ref refid="TMC5271_8h_1a5a1d8348c88beca693d6835421f8e3c7" kindref="member">tmc5271_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="48" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a5b5516557aaf294e3529d57985d75af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5271_getSlaveAddress</definition>
        <argsstring>(TMC5271TypeDef *tmc5271)</argsstring>
        <name>tmc5271_getSlaveAddress</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="52" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1ab777447228ab6886ed4a9053a0dbeb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_setSlaveAddress</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint8_t slaveAddress)</argsstring>
        <name>tmc5271_setSlaveAddress</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slaveAddress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="57" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a9ac09efcdaa066e3ceee94c2701523c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writeConfiguration</definition>
        <argsstring>(TMC5271TypeDef *tmc5271)</argsstring>
        <name>writeConfiguration</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="62" column="13" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a29809947d9db2b5f4746f46ba02c5bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_periodicJob</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint32_t tick)</argsstring>
        <name>tmc5271_periodicJob</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="68" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="68" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a8719ab8b952d6894e2e7bdbc5d384ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_rotate</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5271_rotate</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="94" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a11febcf4e50b21a0e9fb865183c5c1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_right</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5271_right</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="104" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a640b0f0a5adf31a0a3160d9a86247e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_left</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint8_t motor, int32_t velocity)</argsstring>
        <name>tmc5271_left</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="109" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a45137eacb1d556d31ff62497a52c5ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_stop</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint8_t motor)</argsstring>
        <name>tmc5271_stop</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="114" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a349939b5e57241442ba95041945bc82a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_moveTo</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint8_t motor, int32_t position, uint32_t velocityMax)</argsstring>
        <name>tmc5271_moveTo</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="119" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="119" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1af2515f7e312fd41d44ac7033f46d3c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tmc5271_moveBy</definition>
        <argsstring>(TMC5271TypeDef *tmc5271, uint8_t motor, uint32_t velocityMax, int32_t *ticks)</argsstring>
        <name>tmc5271_moveBy</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>motor</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>velocityMax</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="130" column="6" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="130" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="TMC5271_8c_1a65b9243d276aeee1b5e3432b1692828b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t tmc5271_consistencyCheck</definition>
        <argsstring>(TMC5271TypeDef *tmc5271)</argsstring>
        <name>tmc5271_consistencyCheck</name>
        <param>
          <type><ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref> *</type>
          <declname>tmc5271</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" line="139" column="9" bodyfile="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c" bodystart="139" bodyend="144"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2017<sp/>TRINAMIC<sp/>Motion<sp/>Control<sp/>GmbH<sp/>&amp;<sp/>Co.<sp/>KG</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>(now<sp/>owned<sp/>by<sp/>Analog<sp/>Devices<sp/>Inc.),</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Copyright<sp/>©<sp/>2023<sp/>Analog<sp/>Devices<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.<sp/>This<sp/>software<sp/>is</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>proprietary<sp/>&amp;<sp/>confidential<sp/>to<sp/>Analog<sp/>Devices,<sp/>Inc.<sp/>and<sp/>its<sp/>licensors.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="TMC5271_8h" kindref="compound">tmc/ic/TMC5271/TMC5271.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>a<sp/>TMC5271<sp/>IC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>requires:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>tmc5271:<sp/>The<sp/>pointer<sp/>to<sp/>a<sp/>TMC5271TypeDef<sp/>struct,<sp/>which<sp/>represents<sp/>one<sp/>IC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>channel:<sp/>The<sp/>channel<sp/>index,<sp/>which<sp/>will<sp/>be<sp/>sent<sp/>back<sp/>in<sp/>the<sp/>SPI<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>config:<sp/>A<sp/>ConfigurationTypeDef<sp/>struct,<sp/>which<sp/>will<sp/>be<sp/>used<sp/>by<sp/>the<sp/>IC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>registerResetState:<sp/>An<sp/>int32_t<sp/>array<sp/>with<sp/>128<sp/>elements.<sp/>This<sp/>holds<sp/>the<sp/>values<sp/>to<sp/>be<sp/>used<sp/>for<sp/>a<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1aaf1a0409cc6ffed30493c7d6457b8a55" kindref="member">tmc5271_init</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint8_t<sp/>channel,<sp/><ref refid="structConfigurationTypeDef" kindref="compound">ConfigurationTypeDef</ref><sp/>*config)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>motor<sp/>=<sp/>0;<sp/>motor<sp/>&lt;<sp/><ref refid="TMC5271__Constants_8h_1a6d308616c069d977dc2e079d8b9aabea" kindref="member">TMC5271_MOTORS</ref>;<sp/>motor++)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1ae7a7ee6187c780710bd63d52e833c0de" kindref="member">velocity</ref>[motor]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a92cf8c8655f5d2b6924cdd832da4b05f" kindref="member">oldX</ref>[motor]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a85862109a7b056b2697830e98029a3c1" kindref="member">channel</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>TMC5271.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">uint8_t<sp/><ref refid="TMC5271_8c_1a687260bbaeca1b2ac28673c310cfe454" kindref="member">tmc5271_reset</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837faf4b7eabf7d198b2f9b47d8c7a36c7d0f" kindref="member">CONFIG_RESET</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a03e747ab5e07e7cca760bd15b4ee0743" kindref="member">configIndex</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>a<sp/>function<sp/>to<sp/>be<sp/>called<sp/>after<sp/>completion<sp/>of<sp/>the<sp/>configuration<sp/>mechanism</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a49ffd3bf75a6e8d8c7eed2298499edbe" kindref="member">tmc5271_setCallback</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/><ref refid="TMC5271_8h_1a5a1d8348c88beca693d6835421f8e3c7" kindref="member">tmc5271_callback</ref><sp/>callback)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a713aded8358c7eaf78b3f97d4c5b7d9e" kindref="member">callback</ref><sp/>=<sp/>(<ref refid="Config_8h_1a4f94914f5c7a97833e65a3d10eedfdee" kindref="member">tmc_callback_config</ref>)<sp/>callback;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">uint8_t<sp/><ref refid="TMC5271_8c_1a5b5516557aaf294e3529d57985d75af6" kindref="member">tmc5271_getSlaveAddress</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1ad9af86ad4403576f0352c37f7202a5c1" kindref="member">slaveAddress</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1ab777447228ab6886ed4a9053a0dbeb1c" kindref="member">tmc5271_setSlaveAddress</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint8_t<sp/>slaveAddress)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1ad9af86ad4403576f0352c37f7202a5c1" kindref="member">slaveAddress</ref><sp/>=<sp/>slaveAddress;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function:<sp/>Configure<sp/>the<sp/>next<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a9ac09efcdaa066e3ceee94c2701523c5" kindref="member">writeConfiguration</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Macros_8h_1a86d500a34c624c2cae56bc25a31b12f3" kindref="member">UNUSED</ref>(tmc5271);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Call<sp/>this<sp/>periodically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a29809947d9db2b5f4746f46ba02c5bb6" kindref="member">tmc5271_periodicJob</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint32_t<sp/>tick)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tickDiff;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TMC5271_8c_1a9ac09efcdaa066e3ceee94c2701523c5" kindref="member">writeConfiguration</ref>(tmc5271);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>x;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>velocity<sp/>v<sp/>=<sp/>dx/dt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tickDiff<sp/>=<sp/>tick<sp/>-<sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1ad78cd31e255a0b2db0a32651e0f74a3d" kindref="member">oldTick</ref>)<sp/>&gt;=<sp/>5)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>motor<sp/>=<sp/>0;<sp/>motor<sp/>&lt;<sp/><ref refid="TMC5271__Constants_8h_1a6d308616c069d977dc2e079d8b9aabea" kindref="member">TMC5271_MOTORS</ref>;<sp/>motor++)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="TMC5271_8h_1a93f11271957677dd86c58f0d0a13bf53" kindref="member">tmc5271_readInt</ref>(tmc5271,<sp/><ref refid="TMC5271__Register_8h_1acf63773c51c154406b455003cd7b438d" kindref="member">TMC5271_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1ae7a7ee6187c780710bd63d52e833c0de" kindref="member">velocity</ref>[motor]<sp/>=<sp/>(uint32_t)<sp/>((<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>(abs(x<sp/>-<sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a92cf8c8655f5d2b6924cdd832da4b05f" kindref="member">oldX</ref>[motor])<sp/>/<sp/>(<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>tickDiff)<sp/>*<sp/>(<ref refid="Types_8h_1a4611b605e45ab401f02cab15c5e38715" kindref="member">float32_t</ref>)<sp/>1048.576);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a92cf8c8655f5d2b6924cdd832da4b05f" kindref="member">oldX</ref>[motor]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmc5271-&gt;<ref refid="structTMC5271TypeDef_1ad78cd31e255a0b2db0a32651e0f74a3d" kindref="member">oldTick</ref><sp/><sp/>=<sp/>tick;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a8719ab8b952d6894e2e7bdbc5d384ee2" kindref="member">tmc5271_rotate</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(motor<sp/>&gt;=<sp/><ref refid="TMC5271__Constants_8h_1a6d308616c069d977dc2e079d8b9aabea" kindref="member">TMC5271_MOTORS</ref>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5271_8h_1afd0646119c28e9e96d5fb25c0a9a8924" kindref="member">tmc5271_writeInt</ref>(tmc5271,<sp/><ref refid="TMC5271__Register_8h_1ad8eacb444631280a14dc5753284a3b92" kindref="member">TMC5271_VMAX</ref>,<sp/>abs(velocity));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5271_8h_1a05a2072c424c841bc4dd0c6fa9eccf6d" kindref="member">TMC5271_FIELD_WRITE</ref>(tmc5271,<sp/><ref refid="TMC5271__Register_8h_1a56c594f3a28cf8d2cea0ae8a7728b394" kindref="member">TMC5271_RAMPMODE</ref>,<sp/><ref refid="TMC5271__Fields_8h_1a3e0c6decac85dce6c165c5e9aaa337b9" kindref="member">TMC5271_RAMPMODE_MASK</ref>,<sp/><ref refid="TMC5271__Fields_8h_1a34aa9f9db36a4d9c5b30f5f492460d7b" kindref="member">TMC5271_RAMPMODE_SHIFT</ref>,<sp/><sp/>(velocity<sp/>&gt;=<sp/>0)<sp/>?<sp/><ref refid="TMC5271__Constants_8h_1ae39b3c92a1ab3776bb6a1f576175374a" kindref="member">TMC5271_MODE_VELPOS</ref><sp/>:<sp/><ref refid="TMC5271__Constants_8h_1aaf47dbf7d26dfca8124fc3d8108ed43a" kindref="member">TMC5271_MODE_VELNEG</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a11febcf4e50b21a0e9fb865183c5c1a9" kindref="member">tmc5271_right</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a8719ab8b952d6894e2e7bdbc5d384ee2" kindref="member">tmc5271_rotate</ref>(tmc5271,<sp/>motor,<sp/>velocity);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a640b0f0a5adf31a0a3160d9a86247e92" kindref="member">tmc5271_left</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>velocity)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a8719ab8b952d6894e2e7bdbc5d384ee2" kindref="member">tmc5271_rotate</ref>(tmc5271,<sp/>motor,<sp/>-velocity);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a45137eacb1d556d31ff62497a52c5ed1" kindref="member">tmc5271_stop</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint8_t<sp/>motor)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a8719ab8b952d6894e2e7bdbc5d384ee2" kindref="member">tmc5271_rotate</ref>(tmc5271,<sp/>motor,<sp/>0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a349939b5e57241442ba95041945bc82a" kindref="member">tmc5271_moveTo</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint8_t<sp/>motor,<sp/>int32_t<sp/>position,<sp/>uint32_t<sp/>velocityMax)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(motor<sp/>&gt;=<sp/><ref refid="TMC5271__Constants_8h_1a6d308616c069d977dc2e079d8b9aabea" kindref="member">TMC5271_MOTORS</ref>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5271_8h_1a05a2072c424c841bc4dd0c6fa9eccf6d" kindref="member">TMC5271_FIELD_WRITE</ref>(tmc5271,<sp/><ref refid="TMC5271__Register_8h_1a56c594f3a28cf8d2cea0ae8a7728b394" kindref="member">TMC5271_RAMPMODE</ref>,<sp/><ref refid="TMC5271__Fields_8h_1a3e0c6decac85dce6c165c5e9aaa337b9" kindref="member">TMC5271_RAMPMODE_MASK</ref>,<sp/><ref refid="TMC5271__Fields_8h_1a34aa9f9db36a4d9c5b30f5f492460d7b" kindref="member">TMC5271_RAMPMODE_SHIFT</ref>,<sp/><ref refid="TMC5271__Constants_8h_1ac5bfcec7988b4ea2a27b25aee4d7143c" kindref="member">TMC5271_MODE_POSITION</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5271_8h_1afd0646119c28e9e96d5fb25c0a9a8924" kindref="member">tmc5271_writeInt</ref>(tmc5271,<sp/><ref refid="TMC5271__Register_8h_1ad8eacb444631280a14dc5753284a3b92" kindref="member">TMC5271_VMAX</ref>,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TMC5271_8h_1afd0646119c28e9e96d5fb25c0a9a8924" kindref="member">tmc5271_writeInt</ref>(tmc5271,<sp/><ref refid="TMC5271__Register_8h_1a395db68bfd0c3c0b987b10a6fbeecf11" kindref="member">TMC5271_XTARGET</ref>,<sp/>position);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1af2515f7e312fd41d44ac7033f46d3c68" kindref="member">tmc5271_moveBy</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271,<sp/>uint8_t<sp/>motor,<sp/>uint32_t<sp/>velocityMax,<sp/>int32_t<sp/>*ticks)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>actual<sp/>position<sp/>and<sp/>add<sp/>numbers<sp/>of<sp/>ticks<sp/>to<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>*ticks<sp/>+=<sp/><ref refid="TMC5271_8h_1a93f11271957677dd86c58f0d0a13bf53" kindref="member">tmc5271_readInt</ref>(tmc5271,<sp/><ref refid="TMC5271__Register_8h_1acf63773c51c154406b455003cd7b438d" kindref="member">TMC5271_XACTUAL</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TMC5271_8c_1a349939b5e57241442ba95041945bc82a" kindref="member">tmc5271_moveTo</ref>(tmc5271,<sp/>motor,<sp/>*ticks,<sp/>velocityMax);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">uint8_t<sp/><ref refid="TMC5271_8c_1a65b9243d276aeee1b5e3432b1692828b" kindref="member">tmc5271_consistencyCheck</ref>(<ref refid="structTMC5271TypeDef" kindref="compound">TMC5271TypeDef</ref><sp/>*tmc5271)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmc5271-&gt;<ref refid="structTMC5271TypeDef_1a2860fa795a4c5bb1cb4d8d82295804f5" kindref="member">config</ref>-&gt;<ref refid="structConfigurationTypeDef_1a66620734852c25fd9e1a3e33f5b4535b" kindref="member">state</ref><sp/>!=<sp/><ref refid="Config_8h_1a68a217514c80f15824fb5b28c25c837fa777ae2d946201c3a85df1f361c1de095" kindref="member">CONFIG_READY</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabian/Documents/GitHub/TMC-API/tmc/ic/TMC5271/TMC5271.c"/>
  </compounddef>
</doxygen>
